<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.CMSHelper</name>
    </assembly>
    <members>
        <member name="T:CMS.CMSHelper.AnalyticsMethods">
            <summary>
            Methods for web analytics requiring the CMS context
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.AnalyticsMethods.LogVisitor(CMS.SiteProvider.SiteNameOnDemand)">
            <summary>
            Logs the site visitor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.AnalyticsMethods.LogVisitor(System.String)">
            <summary>
            Logs the site visitor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.AnalyticsMethods.LogMobileDevice(System.String)">
            <summary>
            Logs mobile device.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.AnalyticsMethods.LogConversion(CMS.SiteProvider.SiteNameOnDemand,System.String,System.String)">
            <summary>
            Logs conversion for given conversion name and value.
            </summary>
            <param name="siteName">Site name</param>
            <param name="conversionName">Conversion name to track</param>
            <param name="conversionValue">Conversion value</param>
        </member>
        <member name="M:CMS.CMSHelper.AnalyticsMethods.LogConversion(System.String,System.String,System.String)">
            <summary>
            Logs conversion for given conversion name and value.
            </summary>
            <param name="siteName">Site name</param>
            <param name="conversionName">Conversion name to track</param>
            <param name="conversionValue">Conversion value</param>
        </member>
        <member name="M:CMS.CMSHelper.AnalyticsMethods.LogSearchCrawler(System.String,CMS.DocumentEngine.PageInfo)">
            <summary>
            Logs search crawler visit for current page
            </summary>
            <param name="siteName">Site name</param>
            <param name="currentPage">Current page info</param>
        </member>
        <member name="M:CMS.CMSHelper.AnalyticsMethods.LogAnalytics(System.String,CMS.DocumentEngine.PageInfo,System.String)">
            <summary>
            Logs statistics for landing and referring pages.
            </summary>
            <param name="sessionID">Current session ID</param>
            <param name="currentPage">Current page info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.AnalyticsMethods.LogPageNotFound(CMS.SiteProvider.SiteNameOnDemand)">
            <summary>
            Logs the page not found.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="T:CMS.CMSHelper.InvalidParametersException">
            <summary>
            Invalid parameters exception.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.InvalidParametersException.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="invalidFormParams">List of invalid form parameters</param>
            <param name="invalidQueryParams">List of invalid query string parameters</param>
            <param name="path">Current path</param>
            <param name="url">Current url</param>
        </member>
        <member name="M:CMS.CMSHelper.InvalidParametersException.CreateMessage(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Created the exception message.
            </summary>
            <param name="invalidFormParams">List of invalid form parameters</param>
            <param name="invalidQueryParams">List of invalid query string parameters</param>
            <param name="path">Current path</param>
            <param name="url">Current url</param>
        </member>
        <member name="T:CMS.CMSHelper.CheckParameters">
            <summary>
            Summary description for CheckParameters.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CheckParameters.DENIED">
            <summary>
            Denied value.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.EnsureTable(CMS.SettingsProvider.SafeDictionary{System.String,CMS.SettingsProvider.SafeDictionary{System.String,System.String}},System.String)">
            <summary>
            Ensures that ParentDictionary item is present in a given table.
            </summary>
            <param name="table">Table where to ensure the value</param>
            <param name="key">Item key</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.Load">
            <summary>
            Loads the settings if not yet loaded.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.LoadSettings(System.String)">
            <summary>
            Loads the parameters settings from specified file.
            </summary>
            <param name="filepath">File path to load</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.CheckPath(System.String)">
            <summary>
            Checks the current request for allowed parameters.
            </summary>
            <param name="path">Path to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.CheckPath(System.String,System.Boolean)">
            <summary>
            Checks the current request for allowed parameters.
            </summary>
            <param name="path">Path to check</param>
            <param name="redirect">If true, when parameters do not match, the request is redirected either to 404 or throws an exception (depending on current settings)</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.CheckPath(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Checks the current request for allowed parameters.
            </summary>
            <param name="path">Path to check</param>
            <param name="invalidFormParams">List where invalid form params will be placed</param>
            <param name="invalidQueryParams">List where invalid query params will be placed</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.CheckPage(System.String)">
            <summary>
            Checks the current request for allowed parameters.
            </summary>
            <param name="url">Page to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.CheckPage(System.String,System.Boolean)">
            <summary>
            Checks the current request for allowed parameters.
            </summary>
            <param name="url">Page to check</param>
            <param name="redirect">If true, when parameters do not match, the request is redirected either to 404 or throws an exception (depending on current settings)</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.CheckPage(System.String,System.Collections.Generic.List{System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            Checks the current request URL for allowed parameters.
            </summary>
            <param name="url">Page URL to check</param>
            <param name="invalidFormParams">List where invalid form params will be placed</param>
            <param name="invalidQueryParams">List where invalid query params will be placed</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.CheckKey(System.String,CMS.SettingsProvider.SafeDictionary{System.String,System.String},System.Collections.Generic.List{System.String}@)">
            <summary>
            Checks the key.
            </summary>
            <param name="key">Key</param>
            <param name="allowedKeys">Table of allowed keys</param>
            <param name="invalidList">Invalid key list</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.DenyAll(CMS.SettingsProvider.SafeDictionary{System.String,System.String})">
            <summary>
            Returns true if deny all is present in the deny table.
            </summary>
            <param name="denied">Denied table</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.AddAllowed(CMS.SettingsProvider.SafeDictionary{System.String,System.String},CMS.SettingsProvider.SafeDictionary{System.String,System.String})">
            <summary>
            Adds the allowed records to the result table.
            </summary>
            <param name="result">Result table</param>
            <param name="allowed">Allowed table to add</param>
        </member>
        <member name="M:CMS.CMSHelper.CheckParameters.AddDenied(CMS.SettingsProvider.SafeDictionary{System.String,System.String},CMS.SettingsProvider.SafeDictionary{System.String,System.String})">
            <summary>
            Adds the denied records to the result table.
            </summary>
            <param name="result">Result table</param>
            <param name="denied">Denied table to add</param>
        </member>
        <member name="P:CMS.CMSHelper.CheckParameters.AllowCheck">
            <summary>
            If checking is allowed, returns true.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CheckParameters.ReportParameters">
            <summary>
            If true, exception reporting the parameters is thrown when the parameters do not match.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CMSApplicationModule">
            <summary>
            Application module for registering the application events globally
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSApplicationModule.mIsPrecompiledWebsite">
            <summary>
            If true, the web site is precompiled
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSApplicationModule.Init(System.Web.HttpApplication)">
            <summary>
            Registers the event handler(s).
            </summary>
            <param name="app">The http application</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSApplicationModule.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSApplicationModule.AcquireRequestState">
            <summary>
            Fires upon acquire request state event
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSApplicationModule.AuthenticateRequest">
            <summary>
            Fires upon authenticate request event
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSApplicationModule.AuthorizeRequest">
            <summary>
            Fires upon authorize request event
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSApplicationModule.BeginRequest">
            <summary>
            Fires upon begin request event
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSApplicationModule.EndRequest">
            <summary>
            Fires upon end request event
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSApplicationModule.MapRequestHandler">
            <summary>
            Fires upon map request handler event
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSApplicationModule.PostMapRequestHandler">
            <summary>
            Fires upon post map request handler event
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSApplicationModule.PreSendRequestHeaders">
            <summary>
            Fires upon PreSendRequestHeader event.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSApplicationModule.IsPrecompiledWebsite">
            <summary>
            Returns true if the website is precompiled (checks existence of codebehind file of PortalTemplate).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSApplicationModule.IsIntegratedMode">
            <summary>
            Returns true if the application runs in the integrated mode
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSApplicationModule.ApplicationRegistered">
            <summary>
            Returns true if the application was properly registered
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CMSContext">
            <summary>
            Web site context methods and variables.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.DOCTYPE_HTML5">
            <summary>
            HTML 5 document type.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.SPLITVIEW_ENABLED_KEY">
            <summary>
            Key that enables to find whether the splitview mode is enabled.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.SPLITVIEW_CULTURE_KEY">
            <summary>
            Key that enables to find the compare culture of the splitview mode.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.SPLITVIEW_MODE_KEY">
            <summary>
            Key that enables to find whether the splitview mode should be displayed horizontally or vertically.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.SPLITVIEW_SCROLL_KEY">
            <summary>
            Key that enables to find whether scrollbars should be synchronized in the splitview mode.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.RegisterProperties">
            <summary>
            Registers the properties of this object
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.RegisterColumns">
            <summary>
            Registers the Columns of this object
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.mAnyDebugEnabled">
            <summary>
            If true, at least one debug is enabled.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.SYSTEM_VERSION_NAME">
            <summary>
            Version name (used for Win applications such Import Toolkit etc.)
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.SYSTEM_VERSION_NUMBER">
            <summary>
            Version number of the system.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.SYSTEM_VERSION_SUFFIX">
            <summary>
            Suffix of the system version.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.SYSTEM_VERSION">
            <summary>
            Version of the system.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.mCloneGlobalUserInfo">
            <summary>
            If true, public user record should be cloned for each user.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.mAnyLiveDebugEnabled">
            <summary>
            If true, some debug is enabled on live site.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.initLock">
            <summary>
            Initialization lock.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.mInitialized">
            <summary>
            Initialization flag, if true, the context was already initialized.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSContext.mIsWebApplication">
            <summary>
            Returns true if web application is installed (instead of web project).
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.SetCurrentUser(CMS.CMSHelper.CurrentUserInfo)">
            <summary>
            Sets the current user.
            </summary>
            <param name="uInfo">User info object</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetCurrentUser(System.Boolean@)">
            <summary>
            Gets the current user.
            </summary>
            <param name="loadUserData">True if the additional user data should be loaded (user was initialized or has changed)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetCurrentUser(System.Boolean@,System.Boolean)">
            <summary>
            Gets the current user.
            </summary>
            <param name="loadUserData">True if the additional user data should be loaded (user was initialized or has changed)</param>
            <param name="cacheResult">If true, the result for the user is cached</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.UpdateViewMode(CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Updates the current view mode
            </summary>
            <param name="baseMode">Current base mode (edit / preview / live)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResetDebugSettings">
            <summary>
            Sets all the debug settings to null and causes them to be reloaded.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.IsAuthenticated">
            <summary>
            Returns true if the current user is authenticated.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.IsBetaVersion">
            <summary>
            Indicates if current version is BETA version.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetCMSVersion">
            <summary>
            Returns the CMS version.
            </summary>
            <returns>Actual version of CMS</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetFriendlySystemVersion(System.Boolean)">
            <summary>
            Returns system version text.
            </summary>
            <param name="includeBuildNumber">Includes buildnumber</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetWinAppName(System.String)">
            <summary>
            Returns prefix for all Kentico WinApps.
            </summary>
            <param name="applicationName">Name of the application</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.Init">
            <summary>
            Initializes the system.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.Init(System.Boolean)">
            <summary>
            Initializes the system .
            </summary>
            <param name="asyncInit">Init asynchronously</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.InitAsyncModules">
            <summary>
            Initializes the modules which can be initialized asynchronously.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.InitAsyncModules1">
            <summary>
            Initializes the modules which can be initialized asynchronously - Part 1.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.InitAsyncModules2">
            <summary>
            Initializes the modules which can be initialized asynchronously - Part 2.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.InitAsyncModules3">
            <summary>
            Initializes the modules which can be initialized asynchronously - Part 3.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetUrl(System.String,System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable) and a specified site name.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetUrl(System.String,System.String)">
            <summary>
            Returns URL for the specified aliasPath and urlPath (preferable).
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="urlPath">Url Path</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetUrl(System.String)">
            <summary>
            Returns URL for the specified aliasPath.
            </summary>
            <param name="aliasPath">Alias path</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetDocumentUrl(System.Int32)">
            <summary>
            Retruns document url.
            </summary>
            <param name="documentId">Document ID</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetUrlExtension">
            <summary>
            Returns URL extension used for friendly URLs.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveCurrentPath(System.String)">
            <summary>
            Resolves the given alias path, applies the path segment to the given format string {0} for level 0.
            </summary>
            <param name="format">Alias path pattern</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetContextParametersDataRow">
            <summary>
            Returns datarow with CMSContext parameters.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveMacros(System.String)">
            <summary>
            Resolves the context macros.
            </summary>
            <param name="inputText">Text to resolve</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveMacros(System.String,CMS.GlobalHelper.MacroContext)">
            <summary>
            Resolves the context macros.
            </summary>
            <param name="inputText">Text to resolve</param>
            <param name="context">Macro context and settings</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveDiscussionMacros(System.String)">
            <summary>
            Resolves the discussion macros.
            </summary>
            <param name="inputText">Text to resolve</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveDiscussionMacros(System.String,System.Int32)">
            <summary>
            Resolves the discussion macros.
            </summary>
            <param name="inputText">Text to resolve</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveDiscussionMacros(System.String,System.String)">
            <summary>
            Resolves the discussion macros.
            </summary>
            <param name="inputText">Text to resolve</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetBrowserClass">
            <summary>
            Gets the browser specific CSS class name.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetBrowserClass(System.Boolean)">
            <summary>
            Gets the browser specific CSS class name.
            </summary>
            <param name="includeVersion">Include browser version</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetCultureClass">
            <summary>
            Gets the culture specific CSS class name.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetUICultureClass">
            <summary>
            Gets the UI culture specific CSS class name.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetDeviceProfilesClass">
            <summary>
            Gets all device profiles specific CSS class name.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ClearShoppingCart">
            <summary>
            Clears the shopping cart.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetDateTimeForControl(System.Web.UI.Control,System.DateTime)">
            <summary>
            Gets the date time value for the given control.
            </summary>
            <param name="control">Control</param>
            <param name="dateTime">Date time</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetDateTimeForControl(System.Web.UI.Control,System.DateTime,CMS.SiteProvider.TimeZoneInfo@)">
            <summary>
            Gets the date time value for the given control.
            </summary>
            <param name="control">Control</param>
            <param name="dateTime">Date time</param>
            <param name="usedTimeZone">Time zone used for time conversion</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.DateTimeServerConvert(System.DateTime,CMS.SiteProvider.TimeZoneTypeEnum,CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Convert datetime with dependence on time zone type to server date time.
            </summary>
            <param name="dateTime">User/Site date time</param>
            <param name="type">Time zone type</param>
            <param name="customTimeZone">Custom time zone info</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.DateTimeConvert(System.DateTime,CMS.SiteProvider.TimeZoneTypeEnum,CMS.SiteProvider.TimeZoneInfo)">
            <summary>
            Convert datetime with dependence on time zone type from server date time.
            </summary>
            <param name="dateTime">Server date time</param>
            <param name="type">Time zone type</param>
            <param name="customTimeZone">Custom time zone info</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.DateTimeConvert(System.DateTime,CMS.SiteProvider.TimeZoneTypeEnum,CMS.SiteProvider.TimeZoneInfo,CMS.SiteProvider.TimeZoneInfo@)">
            <summary>
            Convert datetime with dependence on time zone type from server date time.
            </summary>
            <param name="dateTime">Server date time</param>
            <param name="type">Time zone type</param>
            <param name="customTimeZone">Custom time zone info</param>
            <param name="usedTimeZone">Time zone used for time conversion</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ConvertDateTime(System.DateTime,System.Web.UI.Control)">
            <summary>
            Convert datetime with dependece on current time zone manager.
            </summary>
            <param name="dateTime">Datetime convert</param>
            <param name="sender">Sender</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.GetContextCacheString(System.String,CMS.PortalEngine.ViewModeOnDemand,CMS.SiteProvider.SiteNameOnDemand)">
            <summary>
            Gets the context cache string for the given set of items.
            </summary>
            <param name="items">Items to use in the cache string</param>
            <param name="viewMode">View mode</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveUIUrl(System.String,System.String)">
            <summary>
            Resolves the UI URL. Keeps the URL in case the user is authenticated, uses the secured /cms/ prefix to ensure the authentication for already authenticated user.
            </summary>
            <param name="url">URL to resolve, it must start with ~/</param>
            <param name="prefix">URL prefix</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveUIUrl(System.String)">
            <summary>
            Resolves the UI URL. Keeps the URL in case the user is authenticated, uses the secured /cms/ prefix to ensure the authentication for already authenticated user.
            </summary>
            <param name="url">URL to resolve, it must start with ~/</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResolveDialogUrl(System.String)">
            <summary>
            Resolves the dialog URL. Keeps the URL in case the user is authenticated, uses the secured /cms/dialogs/ prefix to ensure the authentication for already authenticated user.
            </summary>
            <param name="url">URL to resolve, it must start with ~/</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.AddDefaultOutputCacheDependencies">
            <summary>
            Adds the default output cache dependencies to the request output.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.AuthenticateUser(System.String,System.Boolean)">
            <summary>
            Authenticate given user.
            </summary>
            <param name="userName">User name</param>
            <param name="createPresistentCookie">Indicates if persistent cookie should be created</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.AuthenticateUser(System.String,System.Boolean,System.Boolean)">
            <summary>
            Authenticate given user.
            </summary>
            <param name="userName">User name</param>
            <param name="createPresistentCookie">Indicates if persistent cookie should be created</param>
            <param name="loadCultures">If true, the preferred cultures of the user are loaded</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.IsWebDAVEnabled(System.String)">
            <summary>
            Indicates if the WebDAV support is enabled for given site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.LogoutUser">
            <summary>
            Signs out user and removes her shopping cart.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.ResetContextData">
            <summary>
            Resets the currently cached context data
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSContext.SetSplitModeValues(System.String,System.Int32)">
            <summary>
            Sets values of split mode.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.ContextObject">
            <summary>
            Context object.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.ContextData">
            <summary>
            Current context data
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.Current">
            <summary>
            Returns current data context.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentRouteData">
            <summary>
            Returns current route data
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentUser">
            <summary>
            Returns the currently logged user info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDevice">
            <summary>
            Returns current device information.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDeviceProfile">
            <summary>
            Returns current device profile info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDeviceProfiles">
            <summary>
            Returns list of current device profiles.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDeviceProfileName">
            <summary>
            Returns current device profile name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentSiteName">
            <summary>
            Returns current site name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentSiteID">
            <summary>
            Returns current site ID.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentSite">
            <summary>
            Returns the current site info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentSiteStylesheetName">
            <summary>
            Returns current site stylesheet name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentSiteStylesheet">
            <summary>
            Returns the current site stylesheet info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.IsCorrectDatabaseVersion">
            <summary>
            Returns whether database version is correct.   
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.OriginalAliasPath">
            <summary>
            Returns alias path corresponding to current URL.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentAliasPath">
            <summary>
            Returns current document aliaspath.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDocument">
            <summary>
            Returns the current document node.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDocumentParent">
            <summary>
            Returns parent of the current document node.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDocumentCulture">
            <summary>
            Returns the current document culture.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDocumentOwner">
            <summary>
            Returns the current document owner.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDocumentStylesheet">
            <summary>
            Returns the current document CSS stylesheet.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDocumentStylesheetName">
            <summary>
            Returns current document stylesheet name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentAttachment">
            <summary>
            Returns the current document attachment (only for CMS.File document type).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentParentPageInfos">
            <summary>
            Gets or sets the ordered list of parent page info objects, which are used on current page. These page info should be used as read-only.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentPageInfo">
            <summary>
            Returns the current page info object.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentTemplate">
            <summary>
            Current page template
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.OriginalPageInfo">
            <summary>
            Returns the original page info object if site is in test and current page info belongs to variant.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDepartment">
            <summary>
            Returns the current department node.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentABTestName">
            <summary>
            Current AB test name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentABTestVariantName">
            <summary>
            Current AB test variant name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentMVTestName">
            <summary>
            Gets or sets the current multivariate test name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentMVTCombinationName">
            <summary>
            Current MVT combianation name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentKeyWords">
            <summary>
            Current page keywords.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDescription">
            <summary>
            Current page description.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentTitle">
            <summary>
            Current page title.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentBodyClass">
            <summary>
            Current page body class.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDocType">
            <summary>
            Current page document type.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentResolver">
            <summary>
            Current context macro resolver.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentDiscussionResolver">
            <summary>
            Current discussion macro resolver.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.EditedObject">
            <summary>
            Object edited by the current page.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.EditedObjectParent">
            <summary>
            Parent of the object edited by the current page.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.EditedDocument">
            <summary>
            Document edited by the current page.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.ActivityEnvironmentVariables">
            <summary>
            Activity variables used for initialization.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.AnyDebugEnabled">
            <summary>
            Returns true if any debug is enabled.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.GlobalPublicUser">
            <summary>
            Global public user object.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CurrentVisitStatus">
            <summary>
            Gets or sets the current visit status
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.VisitorStatus">
            <summary>
            Returns visitor status.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.ContactVisitedSite">
            <summary>
            Indicates if contact already visited site.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.AnyLiveDebugEnabled">
            <summary>
            Returns true if any LiveDebug is enabled.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CloneGlobalUserInfo">
            <summary>
            Clone global user info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.ApplicationInstanceGUID">
            <summary>
            Application instance (current run) GUID.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.IsWebApplication">
            <summary>
            Returns true if web application is installed (instead of web project).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.Version">
            <summary>
            Version object.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.GeneralVersion">
            <summary>
            Version number in 'MAJOR.MINOR' format. (E.g. '6.0').
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.GeneralVersionSuffix">
            <summary>
            Version number in 'MAJOR.MINOR SUFFIX' format. (E.g. '6.0 BETA').
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.FullSystemVersion">
            <summary>
            Full version of the system. (E.g. '6.0.1234').
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.FullSystemSuffixVersion">
            <summary>
            Full version of the system including version suffix. (E.g. '6.0.1234 BETA').
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CompleteSystemVersion">
            <summary>
            Full version of the system including the revision number.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.CompleteSystemSuffixVersion">
            <summary>
            Full version of the system including revision number and version suffix.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.HotfixedSystemVersion">
            <summary>
            Version number including hotfix number. (E.g. '6.0.17').
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.HotfixedSystemSuffixVersion">
            <summary>
            Version number including hotfix number and suffix. (E.g. '6.0.17 SP').
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.HotfixVersion">
            <summary>
            Hotfix version.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.RawUrl">
            <summary>
            Current request RawUrl.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.ViewMode">
            <summary>
            Returns current ViewMode.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.PreferredCultureCode">
            <summary>
            User preferred culture code.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.Campaign">
            <summary>
            User campaign reference.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.ModulesReady">
            <summary>
            Returns true if all modules are ready.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.ContactID">
            <summary>
            Returns current contact ID retrieved during request.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.SplitModeCultureCode">
            <summary>
            User culture code for culture version comparison.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.SplitMode">
            <summary>
            Split mode view (vertical/horizontal).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.SplitModeSyncScrollbars">
            <summary>
            Indicates if scrollbars should be synchronized in split mode.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSContext.DisplaySplitMode">
            <summary>
            Indicates if split mode should be displayed.
            </summary>
        </member>
        <member name="T:CMS.Compatibility.UrlHelper">
            <summary>
            URL helper for backward compatibility reasons. Use CMS.GlobalHelper.URLHelper instead.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.ContextData">
            <summary>
            Container for the context data
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextData.mCurrentSites">
            <summary>
            Table of current sites [SiteName.ToLowerCSafe()] -> [CurrentSiteInfo]
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.AddDirectionCssClass(System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Adds the direction CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.AddCultureCssClass(System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Adds the UI culture CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.AddDeviceProfilesCssClass(System.String)">
            <summary>
            Adds device profiles CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.AddBrowserCssClass(System.String)">
            <summary>
            Adds the browser CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.AddViewModeCssClass(System.String,CMS.PortalEngine.ViewModeEnum)">
            <summary>
            Adds the view mode CSS class
            </summary>
            <param name="cssClass">CSS class to modify</param>
            <param name="viewMode">View mode</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.GetCurrentDepartment(System.String,System.String,CMS.DocumentEngine.TreeProvider)">
            <summary>
            Returns department documentnt of the specified document.
            </summary>
            <param name="aliasPath">Alias path</param>
            <param name="siteName">Site name</param>
            <param name="tree">Tree provider</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.GetCurrentSite">
            <summary>
            Gets the current site.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.SetCurrentUser(CMS.CMSHelper.CurrentUserInfo)">
            <summary>
            Sets the current user.
            </summary>
            <param name="uInfo">User info object</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.GetCurrentUser(System.Boolean@,System.Boolean)">
            <summary>
            Gets the current user.
            </summary>
            <param name="loadUserData">True if the additional user data should be loaded (user was initialized or has changed)</param>
            <param name="cacheResult">If true, the result for the user is cached</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextData.SignOutPublicUser(CMS.SiteProvider.UserInfo)">
            <summary>
            Sign out public user.
            </summary>
            <param name="ui">User info</param>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentSites">
            <summary>
            Table of current sites [SiteName.ToLowerCSafe()] -> [CurrentSiteInfo]
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentRouteData">
            <summary>
            Returns current route data
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDataContext">
            <summary>
            Returns current data context.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentUser">
            <summary>
            Returns the currently logged user info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDevice">
            <summary>
            Returns current device information.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.DevicesAvailable">
            <summary>
            Returns true if device profile are available in current domain license.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDeviceProfile">
            <summary>
            Returns current device profile info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDeviceProfiles">
            <summary>
            Returns list of current device profiles.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDeviceProfileName">
            <summary>
            Returns current device profile name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentSiteName">
            <summary>
            Returns current site name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentSiteID">
            <summary>
            Returns current site ID.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentSite">
            <summary>
            Returns the current site info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentSiteStylesheetName">
            <summary>
            Returns current site stylesheet name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentSiteStylesheet">
            <summary>
            Returns the current site stylesheet info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.OriginalAliasPath">
            <summary>
            Returns alias path corresponding to current URL.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentAliasPath">
            <summary>
            Returns current document aliaspath.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDocument">
            <summary>
            Returns the current document node.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDocumentParent">
            <summary>
            Returns parent of the current document node.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDocumentCulture">
            <summary>
            Returns the current document culture.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDocumentOwner">
            <summary>
            Returns the current document owner.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDocumentStylesheet">
            <summary>
            Returns the current document CSS stylesheet.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDocumentStylesheetName">
            <summary>
            Returns current document stylesheet name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentAttachment">
            <summary>
            Returns the current document attachment (only for CMS.File document type).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentParentPageInfos">
            <summary>
            Gets or sets the ordered list of parent page info objects, which are used on current page. These page info should be used as read-only.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentPageInfo">
            <summary>
            Returns the current page info object.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.OriginalPageInfo">
            <summary>
            Returns the original page info object if site is in test and current page info belongs to variant.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDepartment">
            <summary>
            Returns the current department node.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentABTestName">
            <summary>
            Current AB test name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentABTestVariantName">
            <summary>
            Current AB test variant name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentMVTestName">
            <summary>
            Gets or sets the current multivariate test name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentMVTCombinationName">
            <summary>
            Current MVT combination name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentKeyWords">
            <summary>
            Current page keywords.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDescription">
            <summary>
            Current page description.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentTitle">
            <summary>
            Current page title.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentBodyClass">
            <summary>
            Current page body class.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDocType">
            <summary>
            Current page document type.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentResolver">
            <summary>
            Current context macro resolver.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.CurrentDiscussionResolver">
            <summary>
            Current discussion macro resolver.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.EditedObject">
            <summary>
            Object edited by the current page.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.EditedObjectParent">
            <summary>
            Parent of the object edited by the current page.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextData.EditedDocument">
            <summary>
            Document edited by the current page.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.ActivityContext">
            <summary>
            Activity environment variables.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ActivityContext.ContactID">
            <summary>
            Current contact ID.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ActivityContext.SiteID">
            <summary>
            Current site ID.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ActivityContext.Campaign">
            <summary>
            Current campaign.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ActivityContext.IsLiveSite">
            <summary>
            Indicates if activity occurred on live site.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ActivityContext.CurrentUser">
            <summary>
            Current user info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ActivityContext.DocumentLogActivity">
            <summary>
            Indicates if document enables logging activity.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ActivityContext.CurrentHttpContext">
            <summary>
            Current HTTP context.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ActivityContext.CurrentRelativePath">
            <summary>
            Current relative path.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CMSDataContext">
            <summary>
            Data context.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSDataContext.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSDataContext.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="F:CMS.CMSHelper.CMSDataContext.mIsCachedObject">
            <summary>
            If true, the object is cached within the system for later use
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSDataContext.LoadObjects">
            <summary>
            Loads GlobalObjects and SiteObjects lists.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSDataContext.RegisterProperties">
            <summary>
            Registers the object properties
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.IsCachedObject">
            <summary>
            If true, the object is cached within the system for later use
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.IsDisconnected">
            <summary>
            Returns true if this object is disconnected from the database
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.SiteName">
            <summary>
            Context site name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.BrowserHelper">
            <summary>
            Browser information
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.DeviceInfo">
            <summary>
            Current device info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.DeviceProfileInfo">
            <summary>
            Current device profile info.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.DeviceProfileInfoName">
            <summary>
            Current device profile name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.CSS">
            <summary>
            CSS styles
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.AllSites">
            <summary>
            Gets the collection of all sites.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.RootDocument">
            <summary>
            Gets the root document of current site.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.Documents">
            <summary>
            Gets the collection of all documents on the site
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.Settings">
            <summary>
            Gets the object encapsulating all the settings categories with its setting.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.GlobalObjects">
            <summary>
            Returns the list of all global objects (entry point to global objects).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.SiteObjects">
            <summary>
            Returns the list of all site objects (entry point to site objects).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.Transformations">
            <summary>
            Collection of transformations indexed by their full name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.Queries">
            <summary>
            Collection of queries indexed by their full name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.WebPartLayouts">
            <summary>
            Collection of web part layouts indexed by their full name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSDataContext.AlternativeForms">
            <summary>
            Collection of alternative forms indexed by their full name
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CSSContainer">
            <summary>
            CSS Container
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CSSContainer.mProperties">
            <summary>
            Properties
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CSSContainer.mStylesheets">
            <summary>
            Stylesheets
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CSSContainer.mContainers">
            <summary>
            Web part containers
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CSSContainer.mLayouts">
            <summary>
            Page layouts
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CSSContainer.mTemplates">
            <summary>
            Page templates
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CSSContainer.mWebParts">
            <summary>
            Web parts
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CSSContainer.mWebPartLayouts">
            <summary>
            Web part layouts
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CSSContainer.mTransformations">
            <summary>
            Transformations
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CSSContainer.GetProperty(System.String)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.CMSHelper.CSSContainer.TryGetProperty(System.String,System.Object@)">
            <summary>
            Returns property with given name (either object or property value).
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.Stylesheets">
            <summary>
            CSS Stylesheets
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.Containers">
            <summary>
            Web part containers
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.Layouts">
            <summary>
            Page layouts
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.Templates">
            <summary>
            Page templates
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.WebParts">
            <summary>
            Web parts
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.Transformations">
            <summary>
            Transformations
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.WebPartLayouts">
            <summary>
            Web part layouts
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.Properties">
            <summary>
            Properties of the object available through GetProperty.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.Item(System.String)">
            <summary>
            Returns the CSS content of the given CSS stylesheet (by code name)
            </summary>
            <param name="name">Stylesheet name</param>
        </member>
        <member name="P:CMS.CMSHelper.CSSContainer.CMS#SettingsProvider#INameIndexable#Item(System.String)">
            <summary>
            Returns the object registered by the specific name.
            </summary>
            <param name="name">Object name (indexer)</param>
        </member>
        <member name="T:CMS.CMSHelper.CSSWrapper">
            <summary>
            Wrapper for the CSS object property
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CSSWrapper.#ctor(CMS.SettingsProvider.InfoObjectCollection,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="collection">Collection to wrap</param>
            <param name="propertyName">Property to extract</param>
        </member>
        <member name="M:CMS.CMSHelper.CSSWrapper.GetProperty(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Gets the property value for the given object
            </summary>
            <param name="obj">Obj from which to take the property</param>
        </member>
        <member name="M:CMS.CMSHelper.CSSWrapper.GetObjectName(System.Object)">
            <summary>
            Gets the object name for the given object
            </summary>
            <param name="obj">Object for which to get the name</param>
        </member>
        <member name="P:CMS.CMSHelper.CSSWrapper.Collection">
            <summary>
            Collection to wrap
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSWrapper.ItemsHaveNames">
            <summary>
            Returns true if the items in the collection have names
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CSSWrapper.SortNames">
            <summary>
            If true, the names in enumeration are sorted
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CurrentDeviceInfo">
            <summary>
            Class to hold current device information.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentDeviceInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentDeviceInfo.RegisterColumns">
            <summary>
            Registers the Columns of this object for resolving data macros.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentDeviceInfo.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName">Not implemented</param>
            <param name="value">Not implemented</param>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HardwareVendor">
            <summary>
            The company who manufactured the hardware. Some devices (such as PCs) don't reveal this information and will return 'Unknown'.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HardwareModel">
            <summary>
            The model name or number used primarily by the hardware vendor to identify the device. This is not always the name the device is most often known as. You should also use HardwareName for a list of popular device names.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HardwareName">
            <summary>
            A list of marketing names associated with the device, seperated by a '|'. A device may be known by many names depending on region or network. Likewise, a device may not have a marketing name at all, leaving this empty. This property should be used in tandem with HardwareModel.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.IsCrawler">
            <summary>
            Indicates if the device is a crawler.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.IsMobile">
            <summary>
            The device's primary data connection is wireless and is designed to operate mostly from battery power (ie a mobile phone, smart phone or tablet).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.IsTablet">
            <summary>
            The manufacturer of the device sells the device primarily as a tablet.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.ScreenPixelsHeight">
            <summary>
            The height of the screen in pixels.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.ScreenPixelsWidth">
            <summary>
            The width of the screen in pixels.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.MaxScreenSize">
            <summary>
            Returns max side size of screen size.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.BitsPerPixel">
            <summary>
            The number of data bits per pixel.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.SupportedBearers">
            <summary>
            List of the bearers supported by the device.
            
            Possible values:
            1xRTT, 3GPP, CDMA, CSD, Desktop Passthrough, EDGE, EVDO, GPRS, GSM, HSCSD, HSDPA, HSPA, HSPA+, HSUPA, iDEN, LTE, NoneSupported, SMS, UMTS, Unknown, USB, USSD, WCDMA, WiFi, WiMAX
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HasCamera">
            <summary>
            Indicates if the device has a camera.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HasKeypad">
            <summary>
            Indicates if the device has a physical numeric keypad.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HasQwertyPad">
            <summary>
            Indicates if the device has a physical qwerty keyboard.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HasTouchScreen">
            <summary>
            Indicates if the device has a touchscreen.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HasTrackPad">
            <summary>
            Indicates if the device has a track pad or ball. eg - Nexus One, Blackberry Curve
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HasVirtualQwerty">
            <summary>
            Indicates if the device has a virtual on-screen qwerty pad.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.PlatformVendor">
            <summary>
            The company who created the OS.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.PlatformName">
            <summary>
            The name of the software platform (operating system) the device is using.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.PlatformVersion">
            <summary>
            The version of the software platform.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.BrowserVendor">
            <summary>
            The company who created the browser.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.BrowserName">
            <summary>
            The name of the browser. Many mobile browsers come default with the OS. Unless specifically named, these browsers are named after the accompanying OS.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.BrowserVersion">
            <summary>
            The version number of the browser.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HtmlVersion">
            <summary>
            Latest version of HyperText Markup Language (HTML) supported by the browser. May return 'Unknown'.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.Javascript">
            <summary>
            Indicates if the browser supports Javascript.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.CookiesCapable">
            <summary>
            Indicates if the browser supports http cookies.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.LayoutEngine">
            <summary>
            The underlying technology behind the web browser.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.CcppAccept">
            <summary>
            Stands for Composite Capability/Preference Profiles. Lists MIME types known to be supported. 3rd party applications may enable other MIME types to be supported which are not listed.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.StreamingAccept">
            <summary>
            A list of MIME types the device can accept to stream. 3rd party applications may enable other MIME types to be supported which are not listed.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.HasPremiumInformation">
            <summary>
            Indicates if current device contains premium data information.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.UserAgent">
            <summary>
            Current device user agent.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentDeviceInfo.DeviceName">
            <summary>
            Current device name in format "[Vendor] - [Name]".
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.HandlerCompatibility">
            <summary>
            Compatibility pack for the custom handlers library
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Init">
            <summary>
            Initializes the compatibility pack
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_Reject_Before(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_Reject_After(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_Publish_Before(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_Publish_After(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_CheckOut_Before(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_CheckOut_After(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_CheckIn_Before(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_CheckIn_After(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_Approve_Before(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Workflow_Approve_After(System.Object,CMS.DocumentEngine.WorkflowEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.System_Exception_Execute(System.Object,CMS.SettingsProvider.SystemEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Insert_Before(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires before the insert action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Insert_After(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires After the insert action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_InsertNewCulture_Before(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires before the InsertNewCulture action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_InsertNewCulture_After(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires After the InsertNewCulture action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Update_Before(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires before the Update action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Update_After(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires After the Update action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Delete_Before(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires before the Delete action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Delete_After(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires After the Delete action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Copy_Before(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires before the Copy action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Copy_After(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires After the Copy action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Move_Before(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires before the Move action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_Move_After(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Fires After the Move action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.GetDataClass(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Gets the DataClass for the given object
            </summary>
            <param name="obj">Object</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Object_Insert_Before(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Fires before the insert actiont
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Object_Insert_After(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Fires After the insert action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Object_Update_Before(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Fires before the Update action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Object_Update_After(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Fires After the Update action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Object_Delete_Before(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Fires before the Delete action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Object_Delete_After(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Fires After the Delete action
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Object_GetContent_Execute(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Fires when search content is requested
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_GetContent_Execute(System.Object,CMS.DocumentEngine.DocumentEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Security_AuthorizeUIElement_Execute(System.Object,CMS.SiteProvider.AuthorizationEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Security_AuthorizeResource_Execute(System.Object,CMS.SiteProvider.AuthorizationEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Security_AuthorizeClass_Execute(System.Object,CMS.SiteProvider.AuthorizationEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Security_Authenticate_Execute(System.Object,CMS.SiteProvider.AuthenticationEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_AuthorizeDocument_Execute(System.Object,CMS.DocumentEngine.DocumentAuthorizationEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HandlerCompatibility.Document_FilterDataSetByPermissions_Execute(System.Object,CMS.DocumentEngine.DocumentAuthorizationEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CMSMacroMethods">
            <summary>
            Class containing user specific methods for macro engine.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.RegisterMethods">
            <summary>
            Registers all the methods.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.OrderBy(CMS.GlobalHelper.MacroResolver,System.Object[])">
            <summary>
            Order by on collection.
            </summary>
            <param name="resolver">Resolver being used to evaluate the method</param>
            <param name="parameters">Collection to order as the first parameter, orderby column as the second</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.Where(CMS.GlobalHelper.MacroResolver,System.Object[])">
            <summary>
            Where on collection.
            </summary>
            <param name="parameters">Collection to filter as the first parameter, where condition as the second</param>
            <param name="resolver">Resolver being used to evaluate the method</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.TopN(System.Object[])">
            <summary>
            TopN on collection.
            </summary>
            <param name="parameters">Collection to filter as the first parameter, topn parameter as the second</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.Columns(CMS.GlobalHelper.MacroResolver,System.Object[])">
            <summary>
            Columns on collection.
            </summary>
            <param name="resolver">Resolver being used to evaluate the method</param>
            <param name="parameters">Collection to filter as the first parameter, columns parameter as the second</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.GetObjectID(System.Object[])">
            <summary>
            Returns object ID from code name (GUID respectively) and site name.
            </summary>
            <param name="parameters">
            Object type of the object;
            Code name or GUID of the object;
            Site name, if null or empty, global objects are retrieved (optional if the object is not site object);
            Allow global objects (if site object is not found, global object with given name is retrieved);
            </param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.ClassNames(System.Object[])">
            <summary>
            Class names on collection.
            </summary>
            <param name="parameters">Collection to filter as the first parameter, classNames parameter as the second</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.CMSCachedContext(System.Object[])">
            <summary>
            Returns the cached data context
            </summary>
            <param name="parameters">Macro functions parameters ([0] - cache minutes [1] - cache key</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.GetCacheDependency(System.Object[])">
            <summary>
            Returns CacheDependency object created from given string.
            </summary>
            <param name="parameters">Cache dependencies string</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.Cache(CMS.GlobalHelper.MacroResolver,System.Object[])">
            <summary>
            Caches the result of the given expression. The expression is evaluated only when not found in cache.
            </summary>
            <param name="resolver">Child resolver object which fired the method evaluation</param>
            <param name="parameters">Macro resolver; Expression to cache; Cache minutes; Cache condition; Cache condition; Custom cache item name; Cache item name parts; Cache dependencies (optional)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.IsInRole(System.Object[])">
            <summary>
            Tests whether user is in role
            </summary>
            <param name="parameters">Macro functions parameters ([0] - current user info object [1]- role name(s) to test (separated with semiclon) [2] - true if user should belong to all roles, false if one role is sufficient</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.IsInGroup(System.Object[])">
            <summary>
            Tests whether user is in group
            </summary>
            <param name="parameters">Macro functions parameters ([0] - current user info object [1] - group name to test</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.HasAnyMembership(System.Object[])">
            <summary>
            Tests whether user has any membership
            </summary>
            <param name="parameters">Macro functions parameters ([0] - current user info object)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.HasMembership(System.Object[])">
            <summary>
            Tests whether user has membership
            </summary>
            <param name="parameters">Macro functions parameters ([0] - current user info object [1]- membership name(s) to test (separated with semiclon) [2] - true if user should belong to all memberships, false if one membership is sufficient)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.GetExpressionParam``1(CMS.GlobalHelper.MacroResolver,System.Object[],System.Int32,``0)">
            <summary>
            Returns the index-th parameter evaluated using given resolver.
            </summary>
            <param name="resolver">Macro resolver to use</param>
            <param name="parameters">Array of parameters</param>
            <param name="index">Index of the parameter within the array</param>
            <param name="defaultValue">Default value which will be used if the parameter is not present</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.ApplyTransformation(CMS.GlobalHelper.MacroResolver,System.Object[])">
            <summary>
            Applies transformation to list of items.
            </summary>
            <param name="resolver">Child resolver object which fired the method evaluation</param>
            <param name="parameters">Collection of items as the first parameter, item transformation name as the second.
            Optionally, Content-before and content-after transformations may be supplied as 3. and 4. parameters.</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.NodeAs(CMS.GlobalHelper.MacroResolver,System.Object[])">
            <summary>
            Casts node to specified document type node with available fields.
            </summary>
            <param name="resolver">Child resolver object which fired the method evaluation</param>
            <param name="parameters">Document to cast as the first parameter, document type class name as the second</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.Transform(CMS.GlobalHelper.MacroResolver,System.Object[])">
            <summary>
            Applies ad-hoc text transformation to list of items.
            </summary>
            <param name="resolver">Child resolver object which fired the method evaluation</param>
            <param name="parameters">Collection of items as the first parameter, transformation text as the second</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSMacroMethods.GetTransformationCode(System.String)">
            <summary>
            Returns code of the specified transformation. If such transformation is not found, input string is returned without any change.
            </summary>
            <param name="transformation">Transformation name or transformation code</param>
        </member>
        <member name="T:CMS.CMSHelper.CountriesNamespace">
            <summary>
            Wrapper class to provide Countries enumeration in the MacroEngine.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CountriesNamespace.mCountryNames">
            <summary>
            Names of the countries in the system.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CountriesNamespace.CMS#SettingsProvider#ISimpleDataContainer#GetValue(System.String)">
            <summary>
            Returns country of specified name if exists.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.CMSHelper.CountriesNamespace.CMS#SettingsProvider#ISimpleDataContainer#SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">New value</param>
        </member>
        <member name="M:CMS.CMSHelper.CountriesNamespace.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns country of specified name if exists.
            </summary>
            <param name="countryName">Name of the country</param>
            <param name="value">CountryInfo will be returned if exists</param>
        </member>
        <member name="M:CMS.CMSHelper.CountriesNamespace.ContainsColumn(System.String)">
            <summary>
            Returns true if country of specified name exists.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CountriesNamespace.CountryNames">
            <summary>
            Names of the countries in the system.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CountriesNamespace.CMS#SettingsProvider#ISimpleDataContainer#Item(System.String)">
            <summary>
            Gets a country of specified name if exists. Setter is not implemented.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="P:CMS.CMSHelper.CountriesNamespace.ColumnNames">
            <summary>
            Returns list of all countries.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.MacroRuleParameter">
            <summary>
            Represents a parameter in macro rule.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleParameter.Value">
            <summary>
            Gets or sets the rule parameter value (value inserted to the K# condition instead of the macro).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleParameter.Text">
            <summary>
            Gets or sets the rule parameter text (text displayed in the sentence).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleParameter.DefaultText">
            <summary>
            Gets or sets the default text displayed when the value is empty.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleParameter.Required">
            <summary>
            Indicates if the value of the parameter is required (does not allow empty).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleParameter.ValueType">
            <summary>
            Type of the value.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.MacroRuleTree">
            <summary>
            Represents a structure of of boolean expressions.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.#ctor">
            <summary>
            Creates new group (wrapper)
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetCondition">
            <summary>
            Returns the condition in K# representing this rule.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetXML">
            <summary>
            Returns xml of the rule designer (to store the layout and parameters).
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetXMLInternal">
            <summary>
            Returns xml of the rule designer (to store the layout and parameters).
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.ValidateParameters">
            <summary>
            Returns list of rules which contain required parameters with empty value.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.BuildFromXML(System.String)">
            <summary>
            Build MacroRuleTree object from its xml definition.
            </summary>
            <param name="xml">XML to build the designer from</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetRuleText(System.String)">
            <summary>
            Returns rule as a human readable sentence. If the expression is Rule(...) method than it uses XML for the rule, otherwise returns expression as it is.
            </summary>
            <param name="ruleExpression">Rule expression to render.</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetRuleText(System.String,System.Boolean,System.Boolean@)">
            <summary>
            Returns rule as a human readable sentence. If the expression is Rule(...) method than it uses XML for the rule, otherwise returns expression as it is.
            </summary>
            <param name="ruleExpression">Rule expression to render.</param>
            <param name="includingMarkup">If true, rule is formatted using HTML markup</param>
            <param name="failToParseXml">This will be true if Rule was supplied, but XML was corrupted</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetRuleText(CMS.CMSHelper.MacroRuleTree,System.Boolean)">
            <summary>
            Returns rule as a human readable sentence.
            </summary>
            <param name="rule">Rule to render</param>
            <param name="includingMarkup">If true, rule is formatted using HTML markup</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetParameterText(System.String,System.Boolean)">
            <summary>
            Processes the text of parameter (handles multivalue parameters separated with new line).
            </summary>
            <param name="paramText">Parameter text</param>
            <param name="includingMarkup">If true, rule is formatted using HTML markup</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetParameterText(System.String,System.Boolean,System.String)">
            <summary>
            Processes the text of parameter (handles multivalue parameters separated with new line).
            </summary>
            <param name="paramText">Parameter text</param>
            <param name="includingMarkup">If true, rule is formatted using HTML markup</param>
            <param name="cssClass">Class which will be used (used only when includingMarkup is true), can be null</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetParameterText(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Processes the text of parameter (handles multivalue parameters separated with new line).
            </summary>
            <param name="paramText">Parameter text</param>
            <param name="includingMarkup">If true, rule is formatted using HTML markup</param>
            <param name="cssClass">Class which will be used (used only when includingMarkup is true), can be null</param>
            <param name="valueType">Type of the parameter text value</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.IsNullOrWhiteSpace(System.String)">
            <summary>
            Returns true if the string is null or made only from white space characters.
            </summary>
            <param name="value">Value to check</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetSpaces(System.Int32)">
            <summary>
            Returns string of n spaces.
            </summary>
            <param name="n">Number of spaces</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetRoot">
            <summary>
            Returns the root of the rule tree.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.SetParameterValue(System.String,CMS.CMSHelper.MacroRuleParameter)">
            <summary>
            Sets the parameter value.
            </summary>
            <param name="paramName">Name of the parameter</param>
            <param name="parameter">Parameter value</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.AddRule(CMS.SiteProvider.MacroRuleInfo,System.Int32)">
            <summary>
            Adds a new rule as a child of current node. Inserts the rule to the specified position.
            </summary>
            <param name="ruleInfo">Rule to add</param>
            <param name="position">Position of the rule within the group</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.AddRule(CMS.CMSHelper.MacroRuleTree,System.Int32,System.Boolean)">
            <summary>
            Adds a new rule as a child of current node. Inserts the rule to the specified position.
            </summary>
            <param name="rule">Rule subtree to add</param>
            <param name="position">Position of the rule within the group</param>
            <param name="setOperator">If true, operator is set according to previous rule</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.RemoveNode(System.Int32)">
            <summary>
            Adds given group as a new child.
            </summary>
            <param name="position">Relative position within the children collection</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.RemoveNode(System.Int32,System.Boolean)">
            <summary>
            Adds given group as a new child.
            </summary>
            <param name="position">Relative position within the children collection</param>
            <param name="removeParent">If true, parent group will be removed if we removed last item within the group</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.AutoIndent">
            <summary>
            Performs the autoindentation of the expression (according to priority of 'or' and 'and' operators).
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.RemoveBrackets(CMS.CMSHelper.MacroRuleTree)">
            <summary>
            Removes brackets which are not needed.
            </summary>
            <param name="node">Node to process</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.Indent">
            <summary>
            Indents the node with one level.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.Unindent">
            <summary>
            Unindents the node with one level.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.MoveNode(System.String,System.String,System.Int32)">
            <summary>
            Moves the group to given location.
            </summary>
            <param name="sourcePath">Position path of the source</param>
            <param name="targetPath">Position path of the target</param>
            <param name="targetPos">Position within the target</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.GetNodeFromPath(System.String)">
            <summary>
            Returns node from it's ID path.
            </summary>
            <param name="idPath">ID path</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.MoveNode(CMS.CMSHelper.MacroRuleTree,CMS.CMSHelper.MacroRuleTree,System.Int32,System.Boolean)">
            <summary>
            Moves the node within the tree.
            </summary>
            <param name="srcGroup">Source node</param>
            <param name="targetGroup">Target node</param>
            <param name="targetPos">Target position within target group</param>
            <param name="setOperator">If true, operator is set according to previous rule</param>
        </member>
        <member name="M:CMS.CMSHelper.MacroRuleTree.ResetPositions">
            <summary>
            Sets correct positions according to current state.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.Children">
            <summary>
            Gets or sets the child rules.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.Position">
            <summary>
            Gets or sets the relative position of the rule within the parent group.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.Operator">
            <summary>
            Gets or sets operator of the rule.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.RuleText">
            <summary>
            Gets or sets the associated rule text.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.RuleParameters">
            <summary>
            Gets or sets the associated rule parameters xml definition.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.RuleName">
            <summary>
            Gets or sets the associated rule name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.RuleCondition">
            <summary>
            Gets or sets the associated rule K# condition.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.Parameters">
            <summary>
            Gets or sets the parameters of the rule (null for internal nodes).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.IDPath">
            <summary>
            Returns IDPath of the group.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.Level">
            <summary>
            Returns level of the group.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.IsLeaf">
            <summary>
            Returns true if group is a leaf (expression).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.MacroRuleTree.HasPreviousSibling">
            <summary>
            Returns true if group has a previous sibling node.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CMSHierarchyHelper">
            <summary>
            Object hierarchy manipulation methods.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.#ctor(CMS.SettingsProvider.ExportObjectSettings,CMS.SettingsProvider.GeneralizedInfo)">
            <summary>
            Creates new instance of CMSHierarchyHelper which can be used to serialize given object.
            </summary>
            <param name="settings">Settings of the serialization</param>
            <param name="info">GeneralizedInfo to serialize</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.#ctor(CMS.SettingsProvider.ExportObjectSettings,CMS.DocumentEngine.TreeNode)">
            <summary>
            Creates new instance of CMSHierarchyHelper which can be used to serialize given object.
            </summary>
            <param name="settings">Settings of the serialization</param>
            <param name="node">TreeNode to serialize</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.TraverseObjectStructure(CMS.SettingsProvider.TraverseObjectSettings,CMS.SettingsProvider.GeneralizedInfo,System.Int32)">
            <summary>
            Goes through the object structure and calls given delegates.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="info">GeneralizedInfo to serialize</param>
            <param name="currentLevel">Current level of the object tree structure</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.CallStartCollection(CMS.SettingsProvider.TraverseObjectSettings,System.String)">
            <summary>
            Calls given delegate with required parameters if delegate is not null.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="name">Name of the collection</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.CallStartCollection(CMS.SettingsProvider.TraverseObjectSettings,System.String,System.Boolean)">
            <summary>
            Calls given delegate with required parameters if delegate is not null.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="name">Name of the collection</param>
            <param name="isArray">Determines whether it's the start of an array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.CallEndCollection(CMS.SettingsProvider.TraverseObjectSettings,System.String)">
            <summary>
            Calls given delegate with required parameters if delegate is not null.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="name">Name of the collection</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.CallEndCollection(CMS.SettingsProvider.TraverseObjectSettings,System.String,System.Boolean)">
            <summary>
            Calls given delegate with required parameters if delegate is not null.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="name">Name of the collection</param>
            <param name="isArray">Determines whether it's the start of an array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.CallItemCallback(CMS.SettingsProvider.TraverseObjectSettings,System.Boolean)">
            <summary>
            Calls item callback if exists.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="isEnd">Determines whether is is the end of the item or the beginning</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.CallObjectCallback(CMS.SettingsProvider.TraverseObjectSettings,CMS.SettingsProvider.GeneralizedInfo,System.Int32)">
            <summary>
            Calls object callback if exists.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="infoObj">Info object</param>
            <param name="level">Current level</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ExportCategoryObjects(CMS.SettingsProvider.TraverseObjectSettings,CMS.SettingsProvider.GeneralizedInfo)">
            <summary>
            Exports categories data to given StringBuilder object.
            </summary>
            <param name="settings">Traverse object object</param>
            <param name="info">Info object the categories of which should be exported</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.TraverseObjectCollection(CMS.SettingsProvider.TraverseObjectSettings,CMS.SettingsProvider.InfoObjectCollection,System.Int32,System.Boolean,System.Func{CMS.SettingsProvider.BaseInfo,System.Boolean})">
            <summary>
            Exports given child collection.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="collection">InfoObject collection</param>
            <param name="currentLevel">Current level of the relationship (parent - child)</param>
            <param name="checkInclusion">If true, TypeInfo.IncludeToParentDataSet is called to check whether to include child to result</param>
            <param name="objectFilter">Function representing object filter</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.TraverseObjectStructure(CMS.SettingsProvider.TraverseObjectSettings,CMS.DocumentEngine.TreeNode,System.Int32)">
            <summary>
            Returns XML representation of given instance of tree node.
            </summary>
            <param name="settings">Traverse object settings</param>
            <param name="node">TreeNode to serialize</param>
            <param name="currentLevel">Current level of the object tree structure</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.TraverseConnectedObject(CMS.SettingsProvider.TraverseObjectSettings,CMS.DocumentEngine.TreeNode,CMS.SettingsProvider.ExportObjectSettings,System.String)">
            <summary>
            Traverses the internal connected object
            </summary>
            <param name="settings">Traverse settings</param>
            <param name="node">Document node</param>
            <param name="childObjectSettings">Child object settings</param>
            <param name="colName">Column name referring to the object</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.TraverseTreeCollection(CMS.SettingsProvider.TraverseObjectSettings,System.Collections.Generic.IEnumerable{CMS.DocumentEngine.TreeNode},System.String,System.Int32)">
            <summary>
            Exports given TreeNode collection.
            </summary>        
            <param name="settings">Traverse object settings</param>
            <param name="collection">Collection to export</param>
            <param name="name">Name of the collection</param>
            <param name="currentLevel">Current level of the object tree structure</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ExportObject(CMS.SettingsProvider.ExportObjectSettings,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Returns XML representation of given instance of info object.
            </summary>
            <param name="settings">Export settings</param>
            <param name="infoObj">Info object to export</param>
            <returns>XML representation of given instance of info object.</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ExportObject(CMS.SettingsProvider.ExportObjectSettings,CMS.DocumentEngine.TreeNode)">
            <summary>
            Returns XML representation of given instance of info object.
            </summary>
            <param name="settings">Export settings</param>
            <param name="node">Tree node to export</param>
            <returns>XML representation of given instance of document.</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.CacheExportResult(CMS.SettingsProvider.ExportObjectSettings,System.String,System.String,System.String)">
            <summary>
            Puts the result of the export to the cache (including TranslationHelper if present).
            </summary>
            <param name="settings">Export settings object</param>
            <param name="export">Exported data</param>
            <param name="storageKey">Storage key</param>
            <param name="key">Cache key</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.GetResultFromCache(CMS.SettingsProvider.ExportObjectSettings,System.String,System.String)">
            <summary>
            Tries find exported data and TranslationHelper in cache.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="storageKey">Storage key</param>
            <param name="key">Cache key</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ExportObject">
            <summary>
            Returns XML representation of given instance of info object.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ProcessObjectMethod(CMS.SettingsProvider.TraverseObjectSettings,CMS.SettingsProvider.ICMSObject,System.Int32)">
            <summary>
            Handles export to required format.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="obj">Object (TreeNode / Info Object) to process</param>
            <param name="currentLevel">Current level within the object tree structure</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ProcessItemMethod(CMS.SettingsProvider.TraverseObjectSettings,System.Boolean)">
            <summary>
            Handles FK ID (can be used to fill translation helper for example).
            </summary>
            <param name="settings">Export object settings (not needed in this implementation)</param>
            <param name="isEnd">Determines whether its start or end of the item</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ProcessIDMethod(CMS.SettingsProvider.TraverseObjectSettings,CMS.SettingsProvider.ICMSObject,System.String,System.String,System.Boolean)">
            <summary>
            Handles FK ID (can be used to fill translation helper for example).
            </summary>
            <param name="settings">Export object settings (not needed in this implementation)</param>
            <param name="obj">Object (TreeNode / InfoObject) to export</param>
            <param name="columnName">Column name of the dependency</param>
            <param name="objectType">Object type of the dependency</param>
            <param name="required">Determines whether the dependency is required (reflects required flag from TypeInfo).</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ProcessStartCollectionMethod(CMS.SettingsProvider.TraverseObjectSettings,System.String,System.Boolean)">
            <summary>
            Handles start of the collection export.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="name">Name of the collection</param>
            <param name="isArray">Indicates whether it's array collection (important for export to JSON)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ProcessArraySeparatorMethod(CMS.SettingsProvider.TraverseObjectSettings)">
            <summary>
            Handles array separator of the collection export.
            </summary>
            <param name="settings">Export settings object</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ProcessEndCollectionMethod(CMS.SettingsProvider.TraverseObjectSettings,System.String,System.Boolean)">
            <summary>
            Handles end of the collection export.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="name">Name of the collection</param>
            <param name="isArray">Indicates whether it's array collection (important for export to JSON)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.ProcessTranslations(CMS.SettingsProvider.TraverseObjectSettings,System.Collections.Hashtable,System.Text.StringBuilder)">
            <summary>
            Fills translation helper with data from hashtable and appends translations to the result if needed.
            </summary>
            <param name="settings">Export settings</param>
            <param name="translations">Hashtable with translations</param>
            <param name="sb">StringBuilder to append result to</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.WrapResult(CMS.SettingsProvider.ExportObjectSettings,System.String)">
            <summary>
            Wraps final result into root if needed.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="code">Code to wrap</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.AppendNode(CMS.SettingsProvider.ExportObjectSettings,System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>
            Appends hierarchy node to the result.
            </summary>
            <param name="settings">Export settings object</param>
            <param name="sb">StringBuilder object with the result</param>
            <param name="nodeName">Name of the node</param>
            <param name="endTag">Determines whether to append start or end tag</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.AddTranslation(System.String,System.Int32,System.Collections.Hashtable)">
            <summary>
            Adds given ID into the translation table to correct list according to objectType
            </summary>
            <param name="objectType">Object type of the object</param>
            <param name="id">ID of the object</param>
            <param name="translationTable">Translation table</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.GetMetadata(CMS.SettingsProvider.ExportObjectSettings,System.Object)">
            <summary>
            Returns metadata for given object according to export settings.
            </summary>
            <param name="settings">Export settings format</param>
            <param name="obj">Object to get the metadata of</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.GetListOfColumns(System.Object,System.Boolean@)">
            <summary>
            Returns list of supported columns/properties
            </summary>
            <param name="obj">Object to get the metadata of</param>
            <param name="isProperties">For properties this param will be true, otherwise (columns) false</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromXML(CMS.SettingsProvider.OperationTypeEnum,CMS.SettingsProvider.BaseInfo,System.String)">
            <summary>
            Loads objects data including collection from a given XML representation (root of the xml has to be ClassTableName of given object).
            </summary>
            <param name="operation">Operation type</param>
            <param name="obj">Object to load</param>
            <param name="xml">XML data</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromXML(CMS.SettingsProvider.OperationTypeEnum,CMS.SettingsProvider.BaseInfo,System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads objects data including collection from a given XML representation (root of the xml has to be ClassTableName of given object).
            </summary>
            <param name="operation">Operation type</param>
            <param name="obj">Object to load</param>
            <param name="xml">XML data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateMode">If true, only column contained in the XML are loaded (columns which are not contained are not set to null)</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromXML(CMS.SettingsProvider.OperationTypeEnum,CMS.SettingsProvider.BaseInfo,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Loads objects data including collection from a given XML representation (root of the xml has to be ClassTableName of given object).
            </summary>
            <param name="operation">Operation type</param>
            <param name="obj">Object to load</param>
            <param name="xml">XML data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateMode">If true, only column contained in the XML are loaded (columns which are not contained are not set to null)</param>
            <param name="cultureName">Name of the culture to use for parsing double and datetime values</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromJSON(CMS.SettingsProvider.BaseInfo,System.String)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="obj">Object to load</param>
            <param name="json">JSON data</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromJSON(CMS.SettingsProvider.BaseInfo,System.String,System.Boolean)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="obj">Object to load</param>
            <param name="json">JSON data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromJSON(CMS.SettingsProvider.BaseInfo,System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="obj">Object to load</param>
            <param name="json">JSON data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateMode">If true, only column contained in the JSON are loaded (columns which are not contained are not set to null)</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromXML(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="xml">XML data</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromXML(CMS.DocumentEngine.TreeNode,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="xml">XML data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateMode">If true, only column contained in the JSON method are loaded (columns which are not contained are not set to null)</param>
            <param name="prepareStructure">If true, in create mode the structure of data set is prepared in advanced (causes the whole process to be case sensitive)</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromXML(CMS.DocumentEngine.TreeNode,System.String,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="xml">XML data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateMode">If true, only column contained in the JSON method are loaded (columns which are not contained are not set to null)</param>
            <param name="prepareStructure">If true, in create mode the structure of data set is prepared in advanced (causes the whole process to be case sensitive)</param>
            <param name="cultureName">Name of the culture to use for parsing double and datetime values</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromJSON(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="json">JSON data</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromJSON(CMS.DocumentEngine.TreeNode,System.String,System.Boolean)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="json">JSON data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromJSON(CMS.DocumentEngine.TreeNode,System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads objects data including collection from a given XML representation.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="json">JSON data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="updateMode">If true, only column contained in the JSON method are loaded (columns which are not contained are not set to null)</param>
            <returns>Translation helper</returns>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.GetNodeClassName(System.String,CMS.SettingsProvider.ExportFormatEnum)">
            <summary>
            Parses NodeClassName from node data.
            </summary>
            <param name="nodeData">Node data</param>
            <param name="format">Format of the data</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.GetNodeClassName(System.String,CMS.SettingsProvider.ExportFormatEnum,System.Boolean)">
            <summary>
            Parses NodeClassName from node data.
            </summary>
            <param name="nodeData">Node data</param>
            <param name="format">Format of the data</param>
            <param name="tryToGetByClassId">Tries to get the name by extracting class identifier.</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadDataSetFromJSON(System.Data.DataSet,System.String,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Recursively loads dataset from JSON deserialized object. Returns list of fields contained in the JSON data (for update object purposes).
            </summary>
            <param name="ds">DataSet to fill the data in</param>
            <param name="tableName">Name of the table</param>
            <param name="values">Values from deserialization</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataSet(CMS.DocumentEngine.TreeNode,System.Data.DataSet)">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="ds">Dataset with data</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataSet(CMS.DocumentEngine.TreeNode,System.Data.DataSet,System.Boolean)">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataSet(CMS.DocumentEngine.TreeNode,System.Data.DataSet,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="columnsToUpdate">List of columns to update</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataSet(CMS.SettingsProvider.GeneralizedInfo,System.Data.DataSet)">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="obj">Object to load</param>
            <param name="ds">Dataset with data</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataSet(CMS.SettingsProvider.GeneralizedInfo,System.Data.DataSet,System.Boolean)">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="obj">Object to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataSet(CMS.SettingsProvider.GeneralizedInfo,System.Data.DataSet,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="obj">Object to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="columnsToUpdate">List of columns which will be updated</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataSet(CMS.SettingsProvider.GeneralizedInfo,System.Data.DataSet,System.Boolean,System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Loads object data including collection from a given data set.
            </summary>
            <param name="obj">Object to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectObject">If true, object collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="id">ID of the object to identify it within the DataSet</param>
            <param name="columnsToUpdate">List of columns which will be updated</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataSet(CMS.DocumentEngine.TreeNode,System.Data.DataSet,System.Boolean,System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            Loads TreeNode data including collection from a given data set.
            </summary>
            <param name="node">TreeNode to load</param>
            <param name="ds">Dataset with data</param>
            <param name="disconnectNode">If true, node collections are disconnected (collections won't load data automatically from the DB, just from dataset)</param>
            <param name="id">ID of the object to identify it within the DataSet</param>
            <param name="columnsToUpdate">List of columns which will be updated</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.GetCompositeID(System.String,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Returns object ID even if it is composed out of multiple columns.
            </summary>
            <param name="idColumns">ID columns separated with semicolon</param>
            <param name="infoObj">Object to get ID from</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHierarchyHelper.LoadObjectFromDataRow(CMS.SettingsProvider.IDataContainer,System.Data.DataRow,System.Collections.Generic.List{System.String})">
            <summary>
            Loads an GeneralizedInfo with values from given DataRow.
            </summary>
            <param name="container">Container to load</param>
            <param name="dr">DataRow with data</param>
            <param name="columnsToUpdate">List of columns to update</param>
        </member>
        <member name="P:CMS.CMSHelper.CMSHierarchyHelper.NodeClassXMLRegex">
            <summary>
            Regex to parse node class id from xml data.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSHierarchyHelper.NodeClassJSONRegex">
            <summary>
            Regex to parse node class id from JSON data.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.HealthMonitoringLogHelper">
            <summary>
            Class that provides methods for logging to the counters from application or windows service.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HealthMonitoringLogHelper.LogApplicationCounters">
            <summary>
            Reads needed data from application and writes it to the counters.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HealthMonitoringLogHelper.LogServiceCounters">
            <summary>
            Logs data that are needed to get from the database.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HealthMonitoringLogHelper.LogCountersValues(System.Collections.Generic.List{CMS.SiteProvider.Counter})">
            <summary>
            Logs counters from web application.
            </summary>
            <param name="counterList">Counter list</param>
        </member>
        <member name="M:CMS.CMSHelper.HealthMonitoringLogHelper.GetEmailsPerformanceCounter(System.String)">
            <summary>
            Gets performance counter that contains values of emails.
            </summary>
            <param name="counterKey">Counter key</param>
        </member>
        <member name="M:CMS.CMSHelper.HealthMonitoringLogHelper.GetTasksInQueuePerformanceCounter">
            <summary>
            Gets performance counter that contains value of tasks in queue.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.HealthMonitoringLogHelper.GetUserCount(System.String,System.String)">
            <summary>
            Gets count of users (online, authorized or anonymous).
            </summary>
            <param name="counterKey">Counter key</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.HealthMonitoringLogHelper.ClearApplicationCounters">
            <summary>
            Clears application counters except the counters keeping permanent incremental values (cache related, ...)
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.HealthMonitoringLogHelper.OnLogCustomCounter">
            <summary>
            Event for custom counter.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.HealthMonitoringLogHelper.ErrorEmailsInQueue">
            <summary>
            Counter of error emails in queue.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.HealthMonitoringLogHelper.AllEmailsInQueue">
            <summary>
            Counter of all emails in queue.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.HealthMonitoringLogHelper.TasksInQueue">
            <summary>
            Counter of tasks in queue.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.HealthMonitoringLogHelper.LogCustomCounterHandler">
            <summary>
            Custom counter handler.
            </summary>
            <param name="counter">Counter definition</param>
            <returns>Performance counter</returns>
        </member>
        <member name="T:CMS.CMSHelper.PerformanceCounterTimer">
            <summary>
            The class that provides timing for web application performance.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.PerformanceCounterTimer.mRunning">
            <summary>
            Indicates if the timer runs.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.PerformanceCounterTimer.mCancel">
            <summary>
            If true, the timer cancels execution.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.PerformanceCounterTimer.threadStarted">
            <summary>
            Indicates if thread was started.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.PerformanceCounterTimer.thread">
            <summary>
            Thread.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.PerformanceCounterTimer.timer">
            <summary>
            Timer.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.PerformanceCounterTimer.threadLocker">
            <summary>
            Lock used for running thread.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.PerformanceCounterTimer.EnsureRunTimerAsync">
            <summary>
            Ensures that the timer runs in an asynchronous thread.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.PerformanceCounterTimer.EnsureTimer">
            <summary>
            Ensures performance counter timer.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.PerformanceCounterTimer.Run">
            <summary>
            Starts the timer execution.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.PerformanceCounterTimer.StopTimer">
            <summary>
            Stops the timer execution.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.PerformanceCounterTimer.Execute">
            <summary>
            Logs to the counters.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.PerformanceCounterTimer.Running">
            <summary>
            Indicates if the timer runs.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CustomMacroContainer">
            <summary>
            Object encapsulating custom macro resolving as ISimpleDataContainer.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CustomMacroContainer.#ctor(CMS.CMSHelper.ContextResolver)">
            <summary>
            Creates new instance of CustomMacroObject.
            </summary>
            <param name="resolver">ContextResolver object to use to resolve macros</param>
        </member>
        <member name="M:CMS.CMSHelper.CustomMacroContainer.GetValue(System.String)">
            <summary>
            Resolves the custom macro.
            </summary>
            <param name="customMacro">Custom macro to resolve</param>
        </member>
        <member name="M:CMS.CMSHelper.CustomMacroContainer.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="customMacro">Custom macro</param>
            <param name="value">New value</param>
        </member>
        <member name="P:CMS.CMSHelper.CustomMacroContainer.ContextResovler">
            <summary>
            Gets or sets ContextResolver used to resolve Custom macros.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CustomMacroContainer.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="T:CMS.CMSHelper.PathMacroContainer">
            <summary>
            Object encapsulating path macro resolving as ISimpleDataContainer.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.PathMacroContainer.#ctor(CMS.CMSHelper.ContextResolver)">
            <summary>
            Creates new instance of PathMacroObject.
            </summary>
            <param name="resolver">ContextResolver object to use to resolve macros</param>
        </member>
        <member name="M:CMS.CMSHelper.PathMacroContainer.GetValue(System.String)">
            <summary>
            Resolves the path macro.
            </summary>
            <param name="pathMacro">Path macro to resolve</param>
        </member>
        <member name="M:CMS.CMSHelper.PathMacroContainer.SetValue(System.String,System.Object)">
            <summary>
            Not implemented.
            </summary>
            <param name="pathMacro">Path macro</param>
            <param name="value">New value</param>
        </member>
        <member name="P:CMS.CMSHelper.PathMacroContainer.ContextResovler">
            <summary>
            Gets or sets ContextResolver used to resolve path macros.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.PathMacroContainer.Item(System.String)">
            <summary>
            Gets or sets the value of the column.
            </summary>
            <param name="columnName">Column name</param>
        </member>
        <member name="T:CMS.CMSHelper.CurrentSiteInfo">
            <summary>
            Class to hold current user information.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CurrentSiteInfo.mInstantiated">
            <summary>
            Time when the object was instantiated.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentSiteInfo.#ctor(CMS.SiteProvider.SiteInfo,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="sourceInfo">Source site info</param>
            <param name="keepSourceData">If true, source data are kept</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentSiteInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentSiteInfo.CombineWithDefaultCulture">
            <summary>
            Combine with default culture?
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentSiteInfo.CombineFilesWithDefaultCulture">
            <summary>
            Combine files with default culture?
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentSiteInfo.SiteDefaultCurrencyID">
            <summary>
            Site default currency.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentSiteInfo.IsValid">
            <summary>
            Returns true if the user data are valid.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.ContextResolver">
             <summary>
             Class to resolve the context macros
             
             Handles following macros:
             
             {$stringkey$} - Simple localization
             
             {$=default string|cs-cz=localized string$} - advanced localization
             
             {%columnname%} - DataRow value
             
             {@cookiename@} - Cookie value
             
             {?parameter?} - Query string value
             
             {#expression#} - Custom macro
             
             {&amp;path&amp;} - Path macro. Example: {&amp;/{0}/{1}&amp;}
            
             {%expression|(format){0:f1}|(culture)en-us|(default)none%} - Parametrized macro
             </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mCurrentDocument">
            <summary>
            Current document.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mCurrentPageInfo">
            <summary>
            Current page info.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mCurrentSite">
            <summary>
            Current site.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mCurrentUser">
            <summary>
            Current user.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mCurrentPath">
            <summary>
            Current path.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mPathSegments">
            <summary>
            Path segments array.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mEditedObject">
            <summary>
            Parent object.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mEditedObjectParent">
            <summary>
            Parent object of the edited object.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mLevelRegExp">
            <summary>
            Regular expression to capture the path level macro.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ContextResolver.mResolvingControl">
            <summary>
            Control resolving the values.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.#ctor">
            <summary>
            Creates new instance of ContextResolver.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.#ctor(System.Boolean)">
            <summary>
            Creates new instance of ContextResolver.
            </summary>
            <param name="dummy">Dummy parameter, not used</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.GetInstance">
            <summary>
            Returns new instance of ContextResolver.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.ResolvePath(System.String,System.String)">
            <summary>
            Resolves the given alias path, applies the path segment to the given format string {0} for level 0.
            </summary>
            <param name="format">Path pattern</param>
            <param name="path">Base path for resolving</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.ResolvePath(System.String)">
            <summary>
            Resolves the given alias path, applies the path segment to the given format string {0} for level 0.
            </summary>
            <param name="format">Path pattern</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.LevelMatch(System.Text.RegularExpressions.Match)">
            <summary>
            Match evaluator for the path level macro evaluation.
            </summary>
            <param name="m">Regular expression match</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.CheckDataSources(System.String,System.Object@)">
            <summary>
            Checks all the data sources for the value (at first, it checks if it's not special value).
            </summary>
            <param name="expression">Expression</param>
            <param name="result">Returning result</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.GetObjectValue(System.Object,System.String,System.Object@)">
            <summary>
            Gets the object value.
            </summary>
            <param name="obj">Object</param>
            <param name="columnName">Column name</param>
            <param name="result">Returning the result in case of match</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.ResolvePathMacro(System.String,System.Object@,System.Boolean@)">
            <summary>
            Resolves the path macro.
            </summary>
            <param name="expression">Expression to resolve</param>
            <param name="result">Returns the result</param>
            <param name="match">Returns true if the macro was matched</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.GetDateTimeValue(System.String,System.DateTime,System.String)">
            <summary>
            Gets the Datetime value.
            </summary>
            <param name="expression">Expression to get</param>
            <param name="value">Time value</param>
            <param name="culture">Culture</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.Clone">
            <summary>
            Clones the resolver object.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.CreateContextChild">
            <summary>
            Creates the child resolver that loads the data from the parent resolver by default.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.CreateChild">
            <summary>
            Creates the child resolver that loads the data from the parent resolver by default.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.ApplyParameter(System.Object,System.String,System.String,System.Boolean@)">
            <summary>
            Applies the give parameter to the result.
            </summary>
            <param name="result">Result</param>
            <param name="name">Parameter name</param>
            <param name="value">Parameter value</param>
            <param name="encode">Sets the encode parameter if found</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.CheckMacroSecurity(CMS.SettingsProvider.BaseInfo,System.String)">
            <summary>
            Checks whether given user has Read permissions for given object type.
            </summary>
            <param name="obj">Object to check</param>
            <param name="userName">User name agains which to check</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.IsNamespace(System.String)">
            <summary>
            Returns true, if given string is a name of some namespace.
            </summary>
            <param name="name">Namespace name</param>
        </member>
        <member name="M:CMS.CMSHelper.ContextResolver.GetNamespaceInstance(System.String)">
            <summary>
            Returns instance of specified namespace.
            </summary>
            <param name="name">Namespace name</param>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.GlobalResolver">
            <summary>
            Global static resolver - contains all the global objects. Context resolvers are children of this resolver.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.LevelRegExp">
            <summary>
            Regular expression to capture the path level macro.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.AllowContextMacros">
            <summary>
            Allow context macro resolving?
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.AllowPathMacros">
            <summary>
            Allow path macro resolving?
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.CurrentDocument">
            <summary>
            Current document.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.CurrentPageInfo">
            <summary>
            Current PageInfo.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.CurrentUser">
            <summary>
            Current user.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.CurrentSite">
            <summary>
            Current site.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.CurrentPath">
            <summary>
            Current path.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.PathSegments">
            <summary>
            Path segments array.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ContextResolver.ResolvingControl">
            <summary>
            Resolving control.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CMSObjectHelper">
            <summary>
            Object manipulation methods.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.BINARY_DATA_DEFAULT">
            <summary>
            Default binary data type.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.BINARY_DATA_PREVIEW">
            <summary>
            Thumbnail data type.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_TOOLS">
            <summary>
            Site object types - Special constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_SITE">
            <summary>
            Site object types - Special constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_DOCUMENTS">
            <summary>
            Document object type - Special constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_OBJECTS">
            <summary>
            All objects object type - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_DEVELOPMENT">
            <summary>
            Development object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_ADMINISTRATION">
            <summary>
            Administration object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_OTHER">
            <summary>
            Other object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_ECOMMERCE">
            <summary>
            E-commerce object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_POLLS">
            <summary>
            Polls object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_NEWSLETTER">
            <summary>
            Polls object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_FORUMS">
            <summary>
            Forum object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_REPORTING">
            <summary>
            Reporting object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_UICULTURE">
            <summary>
            UI culture object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_NOTIFICATION">
            <summary>
            Notification object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_WEBPART">
            <summary>
            Web part object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.GROUP_PAGETEMPLATE">
            <summary>
            Page template object types - Group constant.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CMSObjectHelper.mReadOnlyObjects">
            <summary>
            Table of read only objects (for purposes of data direction).
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.Init">
            <summary>
            Initializes the synchronization settings for.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.InitSynchronization">
            <summary>
            Initializes the synchronization settings for.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.EnsureObjectVersion(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.LogObjectInsert(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.LogObjectUpdate(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.LogObjectDelete(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.TouchParentDelete(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.TouchParentInsert(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.TouchParentUpdate(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.RemoveObjectVersions(System.Object,CMS.SettingsProvider.ObjectEventArgs)">
            <summary>
            Event handler
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObject(System.Data.DataRow,System.String,CMS.SettingsProvider.BaseInfo@)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
            <param name="infoObj">Resulting object</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObject(System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObject(System.Data.DataRow,System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectRow">Object DataRow</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetReadOnlyObject(System.String,CMS.SettingsProvider.BaseInfo@)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectType">Object type</param>
            <param name="infoObj">Resulting object</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetReadOnlyObject(System.String)">
            <summary>
            Gets the object created from the given DataRow.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObjectById(System.String,System.Int32)">
            <summary>
            Gets the object by its object type and ID
            </summary>
            <param name="objectType">Object type</param>
            <param name="id">Object ID</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetTypes(System.String)">
            <summary>
            Resolves the object types.
            </summary>
            <param name="objectTypes">Object types constants separated by semicolon</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.AddTypes(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Adds the specified types to the resulting array.
            </summary>
            <param name="list">Current types list</param>
            <param name="addList">Object types to add</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetTableName(CMS.SettingsProvider.GeneralizedInfo)">
            <summary>
            Gets the table name of specified info object.
            </summary>
            <param name="infoObj">Info object</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObjectsDataSet(CMS.SettingsProvider.OperationTypeEnum,CMS.SettingsProvider.GeneralizedInfo,System.Boolean)">
            <summary>
            Returns empty objects DataSet based on the given object type.
            </summary>
            <param name="operation">Operation type</param>
            <param name="infoObj">Info object</param>
            <param name="childData">If true, child datasets are included</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetBinaryDataSet(System.Boolean)">
            <summary>
            Gets empty DataSet for binary data.
            </summary>
            <param name="binaryData">If false, binary data column is string column</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetBinaryData(CMS.SettingsProvider.GeneralizedInfo,System.String[0:,0:],System.Int64,System.Boolean)">
            <summary>
            Gets DataSet with binary data of given files.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="files">Array of files in format { {"fullPhysicalFile1Path", "fileType"} {"fullPhysicalFile2Path", "fileType"}}</param>
            <param name="maxFileSize">Maximal size in bytes of the file which should be included into the DataSet</param>
            <param name="binaryData">If true, gets the binary data to the DataSet</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetExcludedNamesWhereCondition(System.String[],System.String)">
            <summary>
            Generate where condition due to excluded names.
            </summary>
            <param name="excludedNames">Excluded names</param>
            <param name="columnName">Column name</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObjectsData(CMS.SettingsProvider.OperationTypeEnum,CMS.SettingsProvider.GeneralizedInfo,System.String,System.String,System.Boolean,System.Boolean,CMS.SettingsProvider.TranslationHelper)">
            <summary>
            Gets the DataSet of the objects data and their child objects.
            </summary>
            <param name="operation">Operation type</param>
            <param name="infoObj">Main info object</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns for the main objects</param>
            <param name="childData">If true, child objects data are included</param>
            <param name="binaryData">If true, binary data are included</param>
            <param name="th">Translation table to initialize with data bindings</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObjectsData(CMS.SettingsProvider.OperationTypeEnum,CMS.SettingsProvider.BaseInfo,System.String,System.String,System.Boolean,System.Boolean,CMS.SettingsProvider.TranslationHelper,System.String[])">
            <summary>
            Gets the DataSet of the objects data and their child objects.
            </summary>
            <param name="operation">Operation type</param>
            <param name="infoObj">Main info object</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns for the main objects</param>
            <param name="childData">If true, child objects data are included</param>
            <param name="binaryData">If true, binary data are included</param>
            <param name="th">Translation table to initialize with data bindings</param>
            <param name="excludedNames">Objects with codename or display name starting with these names will be filtered out</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.TransferHierarchicalCategoryDataSet(System.String,System.String,System.String,System.Data.DataTable,System.Boolean,CMS.SettingsProvider.TranslationHelper,System.String[],CMS.SettingsProvider.OperationTypeEnum,System.Data.DataSet)">
            <summary>
            Adds table with categories parents to data set.
            </summary>
            <param name="columnName">Column name of table ID</param>
            <param name="parentColumnName">Column name of parent key ID</param>
            <param name="objectType">Object type</param>
            <param name="parentDT">Data table with parent data</param>
            <param name="binaryData">If true, binary data are included</param>
            <param name="th">Translation table to initialize with data bindings</param>
            <param name="excludedNames">Objects with codename or display name starting with these names will be filtered out</param>
            <param name="operation">Operation type</param>
            <param name="ds">Data set to add the data</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObjectsData(CMS.SettingsProvider.OperationTypeEnum,CMS.SettingsProvider.GeneralizedInfo,CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Boolean,System.Boolean,CMS.SettingsProvider.TranslationHelper,System.String[],System.Int32)">
            <summary>
            Gets the DataSet of the objects data and their child objects.
            </summary>
            <param name="operation">Operation type</param>
            <param name="infoObj">Main info object</param>
            <param name="parameters">Parameters for the selection</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by columns for the main objects</param>
            <param name="childData">If true, child objects data are included</param>
            <param name="binaryData">If true, binary data are included</param>
            <param name="th">Translation table to initialize with data bindings</param>
            <param name="excludedNames">Objects with codename or display name starting with these names will be filtered out</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.ExtractObjectsData(System.Data.DataSet,CMS.SettingsProvider.GeneralizedInfo,System.String,System.Boolean)">
            <summary>
            Extracts the object data from given DataSet.
            </summary>
            <param name="ds">Source DataSet</param>
            <param name="infoObj">Object type</param>
            <param name="where">Where condition</param>
            <param name="childData">Child data</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetExportSelectionColumns(CMS.SettingsProvider.GeneralizedInfo)">
            <summary>
            Returns the list of columns needed for export selection.
            </summary>
            <param name="infoObj">Info object for which to get the columns</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetDependencyColumnName(System.String,System.String)">
            <summary>
            Returns true if the object.
            </summary>
            <param name="dependingObjectType">Depending object type</param>
            <param name="dependsOnObjectType">Depends on object type</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.AddDependingObjectTypes(System.Collections.Generic.List{System.String},System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds depending object types to the list.
            </summary>
            <param name="list">Object list</param>
            <param name="objectType">Object type</param>
            <param name="dependingType">Depending type</param>
            <param name="child">Process also child types</param>
            <param name="binding">Process also binding types</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetSiteBindingObject(CMS.SettingsProvider.GeneralizedInfo)">
            <summary>
            Gets the site binding object for specified info object.
            </summary>
            <param name="infoObj">Info object</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObjectWhereCondition(System.String,System.Int32)">
            <summary>
            Gets the where condition for specified type of object.
            </summary>
            <param name="objectType">Object type</param>
            <param name="siteId">Site ID for the site objects</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.UpdateClassDefinition(System.String)">
            <summary>
            Updates the class definition according to the current table state.
            It regenerates class xml schema, class form definition and default queries.
            </summary>
            <param name="className">Name of the class to be updated</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.ClearHashtables">
            <summary>
            Clear all hashtables.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.ClearHashtables(System.Boolean)">
            <summary>
            Clear all hashtables.
            </summary>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.RemoveReadOnlyObjects(System.String,System.Boolean)">
            <summary>
            Removes object structures.
            </summary>
            <param name="objectType">Object type</param>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.ClearReadOnlyObjects(System.Boolean)">
            <summary>
            Clears object structures.
            </summary>
            <param name="logTask">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.GetObjectFriendlyName(System.String)">
            <summary>
            Returns translated name of object type.
            </summary>
            <param name="objectType">Object type</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSObjectHelper.IsCheckedOutByOtherUser(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Returns true if the object is checked out by other user than a current user (and use checkin/out is used).
            </summary>
        </member>
        <member name="E:CMS.CMSHelper.CMSObjectHelper.OnGetObject">
            <summary>
            Custom get object handler.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSObjectHelper.SkipMissingObjectTypes">
            <summary>
            Indicates if missing object types can be skipped.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CMSObjectHelper.UseCheckinCheckout">
            <summary>
            Indicates whether object locking is enabled within the system.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CurrentUserInfo">
            <summary>
            Class to hold current user information.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CurrentUserInfo.mInstantiated">
            <summary>
            Time when the object was instantiated.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CurrentUserInfo.mFriends">
            <summary>
            Table with user's friends.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CurrentUserInfo.mGroups">
            <summary>
            Table with user's groups.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.CurrentUserInfo.mGroupsMember">
            <summary>
            Hashtable with group names and group's membership status
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserialization.
            </summary>
            <param name="info">Serialization inf</param>
            <param name="context">Streaming context</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.#ctor(CMS.SiteProvider.UserInfo,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="sourceInfo">Source user info</param>
            <param name="keepSourceData">If true, source data are kept</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerResource(System.String,System.String)">
            <summary>
            Checks whether the user is authorized for given resource name and permission, returns true if so.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerResource(System.String,System.String,System.String)">
            <summary>
            Checks whether the user is authorized for given resource name and permission, returns true if so.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name to check</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerResource(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Checks whether the user is authorized for given resource name and permission, returns true if so.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="permissionName">Permission name to check</param>
            <param name="siteName">Site name</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerUIElement(System.String,System.String)">
            <summary>
            Checks whether the user is authorized for given UI element of the specified resource, returns true if so.
            </summary>
            <param name="resourceName">Resource code name</param>
            <param name="elementName">UI element code name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerUIElement(System.String,System.String,System.String)">
            <summary>
            Checks whether the user is authorized for given UI element of the specified resource, returns true if so.
            </summary>
            <param name="resourceName">Resource code name</param>
            <param name="elementName">UI element code name</param>
            <param name="siteName">Site code name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerUIElement(System.String,System.String,System.Boolean)">
            <summary>
            Checks whether the user is authorized for given UI element of the specified resource, returns true if so.
            </summary>
            <param name="resourceName">Resource code name</param>
            <param name="elementName">UI element code name</param>
            <param name="siteAvailabilityRequired">Indicates if site availability of the corresponding resource (resource with name in format "cms.[ElementName]") is required. Takes effect only when corresponding resource exists</param>        
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerUIElement(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Checks whether the user is authorized for given UI element of the specified resource, returns true if so.
            </summary>
            <param name="resourceName">Resource code name</param>
            <param name="elementName">UI element code name</param>
            <param name="siteAvailabilityRequired">Indicates if site availability of the corresponding resource (resource with name in format "cms.[ElementName]") is required. Takes effect only when corresponding resource exists</param>        
            <param name="siteName">Site code name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerUIElement(System.String,System.String[],System.String)">
            <summary>
            Checks whether the user is authorized for given resource name and UIElements, returns true if so.
            </summary>
            <param name="resourceName">Resource name</param>
            <param name="elementNames">UIElement names to check</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerClassName(System.String,System.String)">
            <summary>
            Checks whether the user is authorized for given class name and permission, returns true if so.
            </summary>
            <param name="className">Class name</param>
            <param name="permissionName">Permission name to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerClassName(System.String,System.String,System.String)">
            <summary>
            Checks whether the user is authorized for given class name and permission, returns true if so.
            </summary>
            <param name="className">Class name</param>
            <param name="permissionName">Permission name to check</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerTreeNode(System.Int32,CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="nodeId">Document node id</param>
            <param name="permission">Permission to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.GetRoleIdList(System.Boolean,System.Boolean)">
            <summary>
            Returns IDs of roles for current site and user.
            </summary>
            <param name="includeGlobal">If true global roles are included</param>
            <param name="includeMembership">If true membership roles are included</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerTreeNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerTreeNode(System.Int32,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result. Doesn't check the allowed cultures of an user.
            </summary>
            <param name="nodeId">Document node id</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Document culture code. If the culture is null the user allowed cultures check is not performed</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerTreeNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerTreeNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.Boolean)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
            <param name="culture">Culture of the document to be checked</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerTreeNode(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Checks whether the user is authorized for the given document and permission, returns the authorization result.
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedToCreateNewDocument(System.Int32,System.String)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNodeId">Parent node id</param>
            <param name="documentClassName">Document class name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedToCreateNewDocument(System.Int32,System.String,System.String)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNodeId">Parent node id</param>
            <param name="documentClassName">Document class name</param>
            <param name="siteName">Name of site</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedToCreateNewDocument(CMS.DocumentEngine.TreeNode,System.String)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNode">Parent node</param>
            <param name="documentClassName">Document class name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedToCreateNewDocument(CMS.DocumentEngine.TreeNode,System.String,System.String)">
            <summary>
            Checks whether the user is authorized to create new document.
            </summary>
            <param name="parentNode">Parent node</param>
            <param name="documentClassName">Document class name</param>
            <param name="siteName">Name of site</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.)
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.)
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.)
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.Boolean)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.)
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="siteName">Site name</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.Boolean,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.)
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum,System.String,System.Boolean,System.String)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.)
            </summary>
            <param name="node">Document node</param>
            <param name="permission">Permission</param>
            <param name="siteName">Site name</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
            <param name="culture">Culture to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(System.Int32,System.String,CMS.DocumentEngine.NodePermissionsEnum)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="nodeId">ID of node</param>
            <param name="className">Class name of the document</param>
            <param name="permission">Permission</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[],System.String)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[],System.String,System.Boolean)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
            <param name="siteName">Site name</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[])">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerDocument(CMS.DocumentEngine.TreeNode,CMS.DocumentEngine.NodePermissionsEnum[],System.Boolean)">
            <summary>
            Checks if the user is authorized for specified document (Check all CONTENT, CLASS and Document type permissions.
            </summary>
            <param name="node">Document node</param>
            <param name="permissions">Permissions to check</param>
            <param name="checkUserAllowedCultures">Indicates if the allowed cultures of the user should be checked</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerObject(CMS.SettingsProvider.PermissionsEnum,System.String,System.String)">
            <summary>
            Checks whether the user is authorized per object with given object type and permission.
            </summary>
            <param name="permission">Permission to check</param>
            <param name="objectType">Object type</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerObject(CMS.SettingsProvider.PermissionsEnum,System.String,System.String,System.Boolean)">
            <summary>
            Checks whether the user is authorized per object with given object type and permission.
            </summary>
            <param name="permission">Permission to check</param>
            <param name="objectType">Object type</param>
            <param name="siteName">Site name</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerObject(CMS.SettingsProvider.PermissionsEnum,CMS.SettingsProvider.BaseInfo,System.String)">
            <summary>
            Checks whether the user is authorized per object with given object type and permission.
            </summary>
            <param name="permission">Permission to check</param>
            <param name="obj">Object to check</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerObject(CMS.SettingsProvider.PermissionsEnum,CMS.SettingsProvider.BaseInfo,System.String,System.Boolean)">
            <summary>
            Checks whether the user is authorized per object with given object type and permission.
            </summary>
            <param name="permission">Permission to check</param>
            <param name="obj">Object to check</param>
            <param name="siteName">Site name</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthorizedPerMetaFile(CMS.SettingsProvider.PermissionsEnum,System.String,System.String)">
            <summary>
            Checks whether the user is authorized per meta file for given object type and permission.
            </summary>
            <param name="permission">Permission to check</param>
            <param name="objectType">Object type</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.RegisterProperties">
            <summary>
            Register the custom properties
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.Clone">
            <summary>
            Returns the cloned user info object.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsAuthenticated">
            <summary>
            Returns true if the current user is authenticated.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.UpdateFriendStatus(System.Int32,CMS.SiteProvider.FriendshipStatusEnum)">
            <summary>
            Update user friends hashtable.
            </summary>
            <param name="userId">User id of the friend</param>
            <param name="status">Friendship status</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.HasFriend(System.Int32)">
            <summary>
            Returns friendship status for given user.
            </summary>
            <param name="userId">ID of user to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsGroupMember(System.Int32)">
            <summary>
            Returns true if the user is member of the specified group.
            </summary>
            <param name="groupId">ID of the group check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsGroupMember(System.String,System.String)">
            <summary>
            Returns true if the user is member of the specified group.
            </summary>
            <param name="groupName">Group name to test</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsGroupAdministrator(System.Int32)">
            <summary>
            Returns true if the user is administrator of the specified group.
            </summary>
            <param name="groupId">ID of the group check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsCultureAllowed(System.String,System.String)">
            <summary>
            Determines whether culture is allowed for given user on given site.
            </summary>
            <param name="cultureCode">Code of culture</param>
            <param name="siteName">Name of site</param>
            <returns>True if user can edit culture on site.</returns>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.CheckEditor(System.String)">
            <summary>
            Returns true if the user is allowed as editor for the given web site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsInSite(System.String)">
            <summary>
            Returns true, if the user is member of the specified site (registered on it).
            </summary>
            <param name="siteName">Name of site to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.IsInRole(System.String,System.String)">
            <summary>
            Returns true, if the user is member of the specified site (registered on it).
            </summary>
            <param name="roleName">Role name</param>
            <param name="siteName">Site name to check</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.UserImpersonate(CMS.SiteProvider.UserInfo)">
            <summary>
            Impersonates current user.
            </summary>
            <param name="ui">User to which impersonate the current user</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.UserImpersonate(CMS.SiteProvider.UserInfo,System.Boolean)">
            <summary>
            Impersonates current user.
            </summary>
            <param name="ui">User to which impersonate the current user</param>
            <param name="forceRedirect">Indicates if redirect should be forced</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.UserImpersonate(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Impersonates current user.
            </summary>
            <param name="ui">User to which impersonate the current user</param>
            <param name="redirectionUrl">Custom redirection relative URL</param>
        </member>
        <member name="M:CMS.CMSHelper.CurrentUserInfo.UserImpersonate(CMS.SiteProvider.UserInfo,System.String,System.Boolean)">
            <summary>
            Impersonates current user.
            </summary>
            <param name="ui">User to which impersonate the current user</param>
            <param name="redirectionUrl">Custom redirection relative URL</param>
            <param name="forceRedirect">Indicates if redirect should be forced even if no redirect URL is specified</param>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.PreferredCultureCode">
            <summary>
            User preferred culture code.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.PreferredUICultureCode">
            <summary>
            User preferred UI Culture code.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.IsEditor">
            <summary>
            Determines whether the user is considered to be the content editor.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.IsGlobalAdministrator">
            <summary>
            True if the user is the global administrator.
            </summary>
            <remarks>This property has the same meaning as UserIsGlobalAdministrator property.</remarks>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.IsVirtual">
            <summary>
            Indicates if user is initialized from virtual context
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.URLReferrer">
            <summary>
            User URL referrer.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.Campaign">
            <summary>
            User campaign reference.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.VisitorStatus">
            <summary>
            Visitor status.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.CurrentVisitStatus">
            <summary>
            Current visit status (throughout current day).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.IsValid">
            <summary>
            Returns true if the user data are valid.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.DateTimeNow">
            <summary>
            Returns current user  current date time in dependence on user time zone.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.Friends">
            <summary>
            Returns the HashTable with user's friends.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.Groups">
            <summary>
            Returns the HashTable with user's groups.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.CurrentUserInfo.UserPasswordExpiration">
            <summary>
            Return number of days before user password expiration, null value means that password will never expire,
            positive values indicates number of days the password is expired and negative value indicates number of days before expiration
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.CMSHelperModule">
            <summary>
            Module registration.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.RegisterContexts">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.RegisterCommands">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.CopyDirectory(System.Object[])">
            <summary>
            Copies specified directory including its subdirectories and all underlying files.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.LocalizeString(System.Object[])">
            <summary>
            Localizes string using ResHelper.LoalizeString.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.GetFileCacheDependency(System.Object[])">
            <summary>
            Gets the file cache dependency
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.TouchKeys(System.Object[])">
            <summary>
            Touches the cache key to drop the dependencies.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.ResolveMacros(System.Object[])">
            <summary>
            Resolves macros
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.ResolveMacrosWithParameters(System.Object[])">
            <summary>
            Resolves macros with parameters
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.GetCurrentUser(System.Object[])">
            <summary>
            Gets current user
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.GetCurrentDocument(System.Object[])">
            <summary>
            Gets current document
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.GetCurrentSiteName(System.Object[])">
            <summary>
            Gets current site name
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.GetCurrentSiteId(System.Object[])">
            <summary>
            Gets current site ID
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.GetCampaign(System.Object[])">
            <summary>
            Gets current campaign.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.ViewModeIsLiveSite(System.Object[])">
            <summary>
            Gets if current view mode is live site.
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.IsLiveSite(System.Object[])">
            <summary>
            Gets whether the current view mode is live site
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.ClearHashtables(System.Object[])">
            <summary>
            Clears the hashtables
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.SystemVersionNumber(System.Object[])">
            <summary>
            Gets the system version number
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="M:CMS.CMSHelper.CMSHelperModule.SendUserPassword(System.Object[])">
            <summary>
            Send password via e-mail to specified user
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="T:CMS.CMSHelper.ObjectTypeLists">
            <summary>
            Class with various types of object type lists (used for example in Import/Export, ODATA Service).
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ObjectTypeLists.mMainObjectTypes">
            <summary>
            List of all "main" object types (= not child of other object) retrieved from modules.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ObjectTypeLists.mAllObjectTypes">
            <summary>
            List of all object types retrieved from modules.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ObjectTypeLists.mObjectTypes">
            <summary>
            List of object types with flag if its global or not. Used by Import/Export, order of the elements matters (objects are in order for import, export order is reverse).
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.ObjectTypeLists.mODATAObjectTypes">
            <summary>
            List of object types supported by ODATA Service.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ObjectTypeLists.MainObjectTypes">
            <summary>
            List of all "main" object types (= not child of other object) retrieved from modules.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ObjectTypeLists.AllObjectTypes">
            <summary>
            Returns the list of all the object types available in the system in a not guaranteed order.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ObjectTypeLists.ObjectTypes">
            <summary>
            List of object types with flag if its global or not. Used by Import/Export, order of the elements matters (objects are in order for import, export order is reverse).
            Items are in format { objectType, isSite, module }
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.ObjectTypeLists.ODATAObjectTypes">
            <summary>
            List of object types supported by ODATA Service.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.AuthenticationHelper">
            <summary>
            Contains method connected with user authentication
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.AuthenticationHelper.PASSWORD_EXPIRATION_WARNING">
            <summary>
            Setting value for displaying warning message to user with expired password
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.AuthenticationHelper.PASSWORD_EXPIRATION_LOCK">
            <summary>
            Setting value for locking user account to user with expired password
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.AuthenticationHelper.mUpdateLastLogonForExternalUsers">
            <summary>
            Indicates whether last logon information should be updated for external users
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.AuthenticationHelper.mRenewSessionAuthChange">
            <summary>
            Specifies whether new session ID is generated after user log in/out. 
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.AuthenticationHelper.mKickUsers">
            <summary>
            Hashtable of the users which should be kicked.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateUser(System.String,System.String,System.String)">
            <summary>
            Authenticates user against the database.
            </summary>
            <param name="userName">User name to authenticate</param>
            <param name="password">Password to authenticate</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateUser(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Authenticates user against the database.
            </summary>
            <param name="userName">User name to authenticate</param>
            <param name="password">Password to authenticate</param>
            <param name="siteName">Site name</param>
            <param name="login">Indicates if methods is called during user login</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateUser(System.String,System.String,System.String,System.Boolean,AuthenticationSourceEnum)">
            <summary>
            Authenticates user against the database.
            </summary>
            <param name="userName">User name to authenticate</param>
            <param name="password">Password to authenticate</param>
            <param name="siteName">Site name</param>
            <param name="login">Indicates if methods is called during user login</param>
            <param name="source">Source of calling</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateUserAD(System.String,System.String,System.String)">
            <summary>
            Authenticates user against the database.
            </summary>
            <param name="username">User name to authenticate</param>
            <param name="password">Password to authenticate</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateUserWindows(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Authenticates the external user with Windows authentication.
            </summary>
            <param name="user">User to authenticate</param>
            <param name="siteName">Site name for authentication</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetUserAuthenticationUrl(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Prepares the user authentication GUID, adds it as a query string parameter to supplied Url.
            </summary>
            <param name="user">UserInfo of particular user</param>
            <param name="targetUrl">Target Url</param>
            <returns>Target Url with authentication GUID parameter</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateOpenIDUser(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Authenticate user with provided OpenID parameters. Create new user if createNew is set to TRUE and user doesn't 
            exist in DB.
            </summary>
            <param name="claimedID">OpenID Claimed Identifier</param>
            <param name="providerUrl">OpenID provider URL</param>
            <param name="siteName">Site name</param>
            <param name="createNew">Indicates if new user should be created</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateOpenIDUser(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Authenticate user with provided OpenID parameters. Create new user if createNew is set to TRUE and user doesn't 
            exist in DB.
            </summary>
            <param name="claimedID">OpenID Claimed Identifier</param>
            <param name="providerUrl">OpenID provider URL</param>
            <param name="siteName">Site name</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <param name="disableConfirmation">Indicates if e-mail confirmation of newly registered user is disabled</param>
            <param name="error">Error message which will be filled when error occured</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateLinkedInUser(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Authenticates user with LinkedID parameters. It will create new user if not found in DB.
            </summary>
            <param name="profileID">LinkedID profile identifier</param>
            <param name="firstName">User's first name</param>
            <param name="lastName">User's last name</param>
            <param name="siteName">Site name</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <param name="disableConfirmation">Indicates if e-mail confirmation of newly registered user is disabled</param>
            <param name="error">Error message which will be filled when error occured</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateWindowsLiveUser(System.String,System.String,System.Boolean)">
            <summary>
            Authenticates the Windows Live user with user's LiveID. If user doesn't exists yet and createNew set
            to true, then it is created.
            </summary>
            <param name="userLiveId">User LiveID</param>
            <param name="siteName">Site name</param>
            <param name="createNew">If true, user which is not found is created</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateWindowsLiveUser(System.String,System.String,System.Boolean,System.String@)">
            <summary>
            Authenticates the Windows Live user with user's LiveID. If user doesn't exists yet and createNew set
            to true, then it is created.
            </summary>
            <param name="userLiveId">User LiveID</param>
            <param name="siteName">Site name</param>
            <param name="disableConfirmation">Indicates if e-mail confirmation of newly registered user is disabled</param>
            <param name="error">Error message which will be filled when error occured</param>
            <returns>Returns UserInfo</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateFacebookConnectUser(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Authenticate user with provided Facebook Connect parameters. Create new user if createNew
            is set to TRUE and user doesn't exist in DB.
            </summary>
            <param name="facebookUserID">Facebook user ID</param>
            <param name="siteName">Site name</param>
            <param name="createNew">Indicates if new user should be created</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateFacebookConnectUser(System.String,System.String,System.Boolean,System.Boolean,System.String@)">
            <summary>
            Authenticate user with provided Facebook Connect parameters. Create new user if createNew
            is set to TRUE and user doesn't exist in DB.
            </summary>
            <param name="facebookUserID">Facebook user ID</param>
            <param name="siteName">Site name</param>
            <param name="generatePassword">Indicates if random password should be generated</param>
            <param name="disableConfirmation">Indicates if e-mail confirmation of newly registered user is disabled</param>
            <param name="error">Error message which will be filled when error occured</param>
            <returns>UserInfo with authenticated user or null if user is not found</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.SetAuthCookieWithUserData(System.String,System.Boolean,System.Int32,System.String[])">
            <summary>
            Creates authentication cookie of user with specified custom data.
            </summary>
            <param name="username">User name</param>
            <param name="isPersistent">Persistency of cookie</param>
            <param name="timeOut">Cookie timeout</param>
            <param name="userData">Array of user data</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetUserDataFromAuthCookie">
            <summary>
            Returns an array with userdata from authentication cookie.
            </summary>        
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateWindowsUser(System.String,System.Security.Principal.SecurityIdentifier,System.String,System.String[])">
            <summary>
            Authenticates the external user with Windows authentication.
            </summary>
            <param name="userName">User to authenticate</param>
            <param name="sid">User's Active Directory SID</param>
            <param name="siteName">Site name for authentication</param>
            <param name="roles">User roles</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AuthenticateMembershipUser(CMS.SiteProvider.UserInfo,System.Boolean,System.String,System.Boolean,System.String@)">
            <summary>
            Authenticates user. If new user is being created then analytics logs are recorded.
            </summary>
            <param name="ui">UserInfo of newly created or already exising user</param>
            <param name="isNew">Indicates if authenticated user is newly created</param>
            <param name="siteName">Site name</param>
            <param name="disableConfirmation">Indicates if email confirmation of newly registered user is disabled</param>
            <param name="error">Error which occurred during authentication process</param>
            <returns>Returns authenticated user</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.EnsureExternalUser(CMS.SiteProvider.UserInfo)">
            <summary>
            Ensures that the external user record is present in the database.
            </summary>
            <param name="uInfo">User info object with the user data</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.CanUserLogin(System.Int32)">
            <summary>
            Checks if given user can login to system.
            </summary>
            <param name="userID">User id</param>        
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetUserWindowsRoles(System.String)">
            <summary>
            Gets the user roles.
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetUserADRoles(System.String)">
            <summary>
            Gets the user roles from AD.
            </summary>
            <param name="userName">User name</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.RemoveSessionID">
            <summary>
            Removes cookie with session ID which enforces ASP.NET to generate new session ID if RenewSessionAuthChange property is set to true.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.UpdateLastLogonInformation(CMS.SiteProvider.UserInfo)">
            <summary>
            Updates last logon information of user = last logon time, IP address and agent.
            Doesn't call SetUserInfo!!
            </summary>
            <param name="userInfo">User info</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetUserADGuid(System.String,System.Security.Principal.SecurityIdentifier)">
            <summary>
            Tries to retrieve GUID from Active Directory.
            </summary>
            <param name="userName">SAM account name</param>
            <param name="sid">Security identifier</param>
            <returns>GUID of </returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.SearchADForGuid(System.DirectoryServices.DirectorySearcher)">
            <summary>
            Retrieves GUID of a user specified by filter of given directory searcher.
            </summary>
            <param name="ds">Initialized directory searcher</param>
            <returns>GUID of AD user or Guid.Empty</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetResetPasswordUrl(System.String)">
            <summary>
            Returns URL of page where user can reset his password.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetUnlockAccountUrl(System.String)">
            <summary>
            Returns URL of page where user can unlock her account.
            </summary>
            <param name="siteName">Site name.</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.MaximumInvalidPasswordAttemps(System.String)">
            <summary>
            Gets limit of invalid password attempts before user account is locked
            </summary>
            <param name="siteName">Site name for which the check is made</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.DisplayAccountLockInformation(System.String)">
            <summary>
            Indicates if additional info about account lock should be displayed
            </summary>
            <param name="siteName">Site name for which the check is made</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.IsPasswordExpirationEnabled(System.String,System.Int32@)">
            <summary>
            Indicates if password expiration is enabled
            </summary>
            <param name="siteName">Site to check</param>
            <param name="expDays">Number of days before password expiration</param>
            <returns>True if password expiration is enabled, False otherwise</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetPolicyViolationMessage(System.String)">
            <summary>
            Returns policy not acceptable message.
            </summary>
            <param name="siteName">Sitename.</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.CheckPasswordExpiration(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Check if user password is expired.
            </summary>
            <param name="ui">User account to check</param>
            <param name="siteName">Site name</param>
            <returns>Returns true if user password expired, false otherwise</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.CheckPasswordExpiration(CMS.SiteProvider.UserInfo,System.String,System.Boolean)">
            <summary>
            Check if user password is expired and optionally according to settings lock expired password account.
            </summary>
            <param name="ui">User account to check</param>
            <param name="siteName">Site name</param>
            <param name="lockAccount">Indicates if account should be locked if maximum invalid logon attempts was reached</param>
            <returns>Returns true if user password expired, false otherwise</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.CheckPasswordExpiration(CMS.SiteProvider.UserInfo,System.String,System.Boolean,System.String)">
            <summary>
            Check if user password is expired and optionally according to settings lock expired password account.
            </summary>
            <param name="ui">User account to check</param>
            <param name="siteName">Site name</param>
            <param name="lockAccount">Indicates if account should be locked if maximum invalid logon attempts was reached</param>
            <returns>Returns true if user password expired, false otherwise</returns>
            <param name="returnUrl">URL using which user can log on to system, after password change</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.CheckInvalidPasswordAttempts(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Check if logging invalid password attempts is enabled and if so, invalid attempt counter is incremented and
            if user exceeded maximal number of invalid attempts, her account is locked
            </summary>
            <param name="user">User to log invalid password attempt</param>
            <param name="siteName">Site name to check invalid password attempts functionality</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.CheckInvalidPasswordAttempts(CMS.SiteProvider.UserInfo,System.String,System.String)">
            <summary>
            Check if logging invalid password attempts is enabled and if so, invalid attempt counter is incremented and
            if user exceeded maximal number of invalid attempts, her account is locked
            </summary>
            <param name="user">User to log invalid password attempt</param>
            <param name="siteName">Site name to check invalid password attempts functionality</param>
            <param name="returnUrl">URL using which user can log on to system, after password change</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.SendUnlockAccountRequest(CMS.SiteProvider.UserInfo,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.String)">
            <summary>
            Sends e-mail to user to inform her about her account was locked due to reaching maximum invalid logon attempts.
            </summary>
            <param name="user">User</param>        
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="resolver">Macro resolver</param>     
            <param name="returnUrl">URL using which user can log on to system, after password change</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.UnlockUserAccount(CMS.SiteProvider.UserInfo)">
            <summary>
            Unlock specified user account
            </summary>
            <param name="user">User account to be unlocked</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.ForgottenEmailRequest(System.String,System.String,System.String,System.String)">
            <summary>
            Tries to find user based on given user identifier (checks username and email) and if it finds
            the user email with forgotten password is send. It sends password directly or request for getting/regenerating password based on settings.
            </summary>
            <param name="userIdent">User identifier</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>        
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.ForgottenEmailRequest(System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver)">
            <summary>
            Tries to find user based on given user identifier (checks username and email) and if it finds
            the user email with forgotten password is send. It sends password directly or request for getting/regenerating password based on settings.
            </summary>
            <param name="userIdent">User identifier</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="resolver">Macro resolver</param>        
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.ForgottenEmailRequest(System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.String,System.Boolean@)">
            <summary>
            Tries to find user based on given user identifier (checks username and email) and if it finds
            the user email with forgotten password is send. It sends password directly or request for getting/regenerating password based on settings.
            </summary>
            <param name="userIdent">User identifier</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="resolver">Macro resolver</param>
            <param name="requestUrl">Url which processes request.</param>
            <param name="success">Returns whether sending of request was successful.</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.ForgottenEmailRequest(System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.String,System.Boolean@,System.String)">
            <summary>
            Tries to find user based on given user identifier (checks username and email) and if it finds
            the user email with forgotten password is send. It sends password directly or request for getting/regenerating password based on settings.
            </summary>
            <param name="userIdent">User identifier</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="resolver">Macro resolver</param>
            <param name="requestUrl">Url which processes request.</param>
            <param name="success">Returns whether sending of request was successful.</param>
            <param name="returnUrl">URL using which user can log on to system, after password change</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.SendPassword(CMS.SiteProvider.UserInfo,System.String,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver)">
            <summary>
            Sends given user an email with forgotten/new password. (If the new password isn't provided current password is used for the plain text format or new password is generated for the SHA1/SHA2 format.)
            </summary>
            <param name="user">User</param>
            <param name="newPassword">New password (optional)</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="emailTemplateName">Email template name to be used for the email</param>
            <param name="resolver">Macro resolver</param>
            <returns>Message with result description</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.SendPassword(CMS.SiteProvider.UserInfo,System.String,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.Boolean@)">
            <summary>
            Sends given user an email with forgotten/new password. (If the new password isn't provided current password is used for the plain text format or new password is generated for the SHA1/SHA2 format.)
            </summary>
            <param name="user">User</param>
            <param name="newPassword">New password (optional)</param>
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="emailTemplateName">Email template name to be used for the email</param>
            <param name="resolver">Macro resolver</param>
            <param name="success">Returns whether sending of request was successful.</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.SendPasswordRequest(CMS.SiteProvider.UserInfo,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.String,System.Boolean@)">
            <summary>
            Sends e-mail to user for approval request of new password.
            </summary>
            <param name="user">User</param>        
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="emailTemplateName">Email template name to be used for the email</param>
            <param name="resolver">Macro resolver</param>        
            <param name="requestUrl">Url which processes request.</param>
            <param name="success">Returns whether sending of request was successful.</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.SendPasswordRequest(CMS.SiteProvider.UserInfo,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.String,System.Boolean@,System.String)">
            <summary>
            Sends e-mail to user for approval request of new password.
            </summary>
            <param name="user">User</param>        
            <param name="siteName">Site name</param>
            <param name="source">Source of calling, will be used for log event</param>
            <param name="sendEmailFrom">Email address of the sender</param>
            <param name="emailTemplateName">Email template name to be used for the email</param>
            <param name="resolver">Macro resolver</param>        
            <param name="requestUrl">Url which processes request.</param>
            <param name="success">Returns whether sending of request was successful.</param>
            <param name="returnUrl">URL using which user can log on to system, after password change</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.ResetPassword(System.String,System.String,System.Int32,System.Double,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.Boolean@,System.String,System.String)">
            <summary>
            Resets password for user based on his request. 
            </summary>
            <param name="hash">Request hash (identifier).</param>
            <param name="requestTime">Request time.</param>
            <param name="userID">User id.</param>
            <param name="interval">Interval in which user can reset her password.</param>
            <param name="newPassword">New password.</param>
            <param name="siteName">Site name.</param>
            <param name="sendEmailFrom">Email address of the sender</param>       
            <param name="resolver">Macro resolver</param> 
            <param name="source">Source of calling, will be used for log event</param>
            <param name="success">Returns whether sending of request was successful.</param>
            <param name="exceededTimeText">Text returned by this method if time request is exceeded.</param>
            <param name="invalidRequestText">Text returned by this method if request is invalid.</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.ResetPassword(System.String,System.String,System.Int32,System.Double,System.String,System.String,System.String,System.String,CMS.GlobalHelper.MacroResolver,System.Boolean@,System.String,System.String,System.String)">
            <summary>
            Resets password for user based on his request. 
            </summary>
            <param name="hash">Request hash (identifier).</param>
            <param name="requestTime">Request time.</param>
            <param name="userID">User id.</param>
            <param name="interval">Interval in which user can reset her password.</param>
            <param name="newPassword">New password.</param>
            <param name="siteName">Site name.</param>
            <param name="sendEmailFrom">Email address of the sender</param>       
            <param name="resolver">Macro resolver</param> 
            <param name="source">Source of calling, will be used for log event</param>
            <param name="success">Returns whether sending of request was successful.</param>
            <param name="exceededTimeText">Text returned by this method if time request is exceeded.</param>
            <param name="invalidRequestText">Text returned by this method if request is invalid.</param>
            <param name="logonUrl">Logon URL displayed to user</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.ValidateResetPassword(CMS.SiteProvider.UserInfo,System.String,System.String,System.Double,System.String)">
            <summary>
            Validates request of password reset. 
            </summary>
            <param name="ui">User info object.</param>
            <param name="hash">Request hash (identifier).</param>
            <param name="requestTime">Request time.</param>
            <param name="interval">Interval in which user can reset her password.</param>        
            <param name="source">Source of calling, will be used for log event</param>        
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.SendRegistrationEmails(CMS.SiteProvider.UserInfo,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Sends registration emails. Returns string with error if any exception occured.
            </summary>
            <param name="ui">Send e-mail to this UserInfo</param>
            <param name="approvalPage">Registration approval page URL</param>
            <param name="password">User password</param>
            <param name="requiresConfirmation">Indicates if e-mail with confirmation link should be send</param>
            <param name="sendWelcomeEmail">Indicates if user welcome e-mail should be sent</param>
            <returns>Retuns error if any exception occured during sending e-mails.</returns>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.NotifyAdministrator(CMS.SiteProvider.UserInfo,System.String,System.String)">
            <summary>
            Sends notification e-mail to administrator about user registration.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.TrackUserRegistration(System.String,System.Double,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Track user registration into analytics
            </summary>
            <param name="trackConversionName">Tracking conversion name</param>
            <param name="conversionValue">Value of tracked conversion</param>
            <param name="siteName">Site name</param>
            <param name="ui">UserInfo object</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.TrackUserRegistration(System.String,System.String,CMS.SiteProvider.UserInfo)">
            <summary>
            Tracks user registration into analytics.
            </summary>
            <param name="trackConversionName">Tracking conversion name</param>
            <param name="siteName">Site name</param>
            <param name="ui">UserInfo object</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.UserKicked(System.Int32)">
            <summary>
            Checks whether the given user is kicked or not.
            </summary>
            <param name="userID">User id</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.RemoveUserFromKicked(System.Int32)">
            <summary>
            Removes user from kicked.
            </summary>
            <param name="UserID">User id</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.AddUserToKicked(System.Int32)">
            <summary>
            Adds user to kicked.
            </summary>
            <param name="userID">User id</param>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.RemoveExpiredKickedUsers">
            <summary>
            Removes expired records from KickUsers hashtable.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.AuthenticationHelper.GetKickedUsers">
            <summary>
            Returns ID's of kicked users in string in format: ID1,ID2 ...
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.UpdateLastLogonForExternalUsers">
            <summary>
            Gets the value that indicates whether last logon information should be updated for external users
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.RenewSessionAuthChange">
            <summary>
            Returns whether new session ID is generated after user log in/out. 
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.UseSessionCookies">
            <summary>
            If true, the session cookies will be used for the authentication.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.KickUsers">
            <summary>
            Hashtable of the users which should be kicked.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.ImportExternalRoles">
            <summary>
            If true, the system imports the external user roles.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.ImportExternalUsers">
            <summary>
            If true, the system imports the external users.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.ADConnectionStringName">
            <summary>
            Name of connection string used by AD membership provider.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.ADUsername">
            <summary>
            Name of user used to authenticate against AD by membership provider.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.ADPassword">
            <summary>
            Password of user used to authenticate against AD by membership provider.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.SynchronizeUserGUIDs">
            <summary>
            Indicates whether to synchronize user's guid during import from Active Directory.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.ImportWindowsRoles">
            <summary>
            Gets or sets whether roles are imported during the Windows/Active directory authentication.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.AuthenticationHelper.FederationAuthentication">
            <summary>
            Gets or sets whether federation authentication is used.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.RemoveExpiredSessions">
            <summary>
            Provides an ITask interface to update database.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.RemoveExpiredSessions.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Overload method which is executed by schleduler.
            </summary>
            <param name="task">Task to execute</param>
        </member>
        <member name="T:CMS.CMSHelper.SessionInfo">
            <summary>
            SessionInfo data container class.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.Update">
            <summary>
            Updates the record in the database.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetUpdateParameters">
            <summary>
            Prepares QueryDataParameters for update query.
            </summary>
            <returns>Returns QueryDataParameters</returns>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.Delete">
            <summary>
            Deletes the record from the database.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.LoadFromContext">
            <summary>
            Updates the session object with current context values.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetUserID(CMS.CMSHelper.CurrentUserInfo)">
            <summary>
            Returns current UserID.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetCurrentContact">
            <summary>
            Returns current contact.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetContactID(CMS.SettingsProvider.BaseInfo)">
            <summary>
            Returns current ContactID.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetSessionFullName(CMS.CMSHelper.CurrentUserInfo,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Returns full name.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetSessionEmail(CMS.CMSHelper.CurrentUserInfo,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Returns email.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetSessionUserName(CMS.CMSHelper.CurrentUserInfo)">
            <summary>
            Returns user name.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetSessionNickName(CMS.CMSHelper.CurrentUserInfo)">
            <summary>
            Returns user nickname.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionInfo.GetSessionUserCreated(CMS.CMSHelper.CurrentUserInfo,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Returns date and time of user's or contact's creation.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionIdentifier">
            <summary>
            Session identifier.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionUserID">
            <summary>
            Session user id.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionLocation">
            <summary>
            Session location.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionLastActive">
            <summary>
            Session last active.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionLastLogon">
            <summary>
            Session last logon.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionExpires">
            <summary>
            Session expires.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionExpired">
            <summary>
            Session expired.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionSiteID">
            <summary>
            Session site id.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionUserIsHidden">
            <summary>
            If User is hidden.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionFullName">
            <summary>
            On-line visitor's full name (user or contact).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionEmail">
            <summary>
            On-line visitor's e-mail (user or contact).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionUserName">
            <summary>
            On-line visitor's user name.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionNickName">
            <summary>
            On-line visitor's user nick name
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionUserCreated">
            <summary>
            On-line visitor's created time (user or contact).
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.SessionContactID">
            <summary>
            On-line visitor's contact ID.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionInfo.Updated">
            <summary>
            Indicates if record was updated.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.SessionManager">
            <summary>
            Class provides session management.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.SessionManager.siteSessions">
            <summary>
            Hashtable of SessionsInfo objects.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.UpdateCurrentSession(System.String)">
            <summary>
            Updates current user session info from the context.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.RemoveAuthenticatedUser(System.String,System.Int32,System.Boolean)">
            <summary>
            Removes authenticated user from current sessions.
            </summary>
            <param name="siteName">Site name</param>
            <param name="userId">User identifier</param>
            <param name="createTask">Indicates whether web farm task should be created</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.RemoveExpiredSessions">
            <summary>
            Removes the expired sessions from the hashtable.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.RemoveExpiredSessionsFromDB">
            <summary>
            Removes the expired sessions from the database.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.RemoveExpiredSessions(System.Boolean,System.Boolean)">
            <summary>
            Removes expired sessions.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.SessionExpired(System.String,System.String)">
            <summary>
            Fired on Session_End event, sets the session as expired.
            </summary>
            <param name="siteName">Site name</param>
            <param name="sessionIdentifier">Session ID</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.KickUser(System.Int32)">
            <summary>
            Performs the necessary actions to kick the user.
            <param name="userID">User id to kick</param>
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.RemoveUserFromKicked(System.Int32)">
            <summary>
            Removes user from kicked..
            <param name="userID">User id to kick</param>
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.UpdateDatabaseSession">
            <summary>
            Gets sessions from hashtables and updates to the database.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetOnlineUsers(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns UserInfos of online users according to WHERE condition ordered by ORDER BY expression.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY expression</param>   
            <param name="topN">TOP N expression</param>
            <param name="columns">Columns condition</param>
            <param name="location">Location (aliaspath) of users</param>
            <param name="siteName">Site name</param>  
            <param name="includeHidden">Include hidden</param>
            <param name="includeKicked">Include kicked</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetUsersWhereCondition(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns wherhe condition which could be used for loading online users from database.
            </summary>
            <param name="location">Location (aliaspath) of users</param>
            <param name="siteName">Site name</param>  
            <param name="includeHidden">Include hidden</param>
            <param name="includeKicked">Include kicked</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetKickedUsersWhere">
            <summary>
            Returns WHERE condition for kicked users.
            </summary>
            <returns>Returns WHERE condition</returns>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetOnlineUsers(System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Returns UserInfos of online users according to WHERE condition ordered by ORDER BY expression.
            </summary>
            <param name="where">WHERE condition</param>
            <param name="orderBy">ORDER BY expression</param>   
            <param name="topN">TOP N expression</param>
            <param name="location">Location (alias path) of users</param>
            <param name="siteName">Site name</param>  
            <param name="includeHidden">Include hidden</param>
            <param name="includeKicked">Include kicked</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.ReindexSessionsInfosHashtable(System.String,System.String)">
            <summary>
            Re-indexes SessionsInfo hashtable - changes key from old site name to new site name.
            </summary>
            <param name="oldSiteName">Old site name</param>
            <param name="newSiteName">New site name</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.RemoveUser(System.Int32,System.Boolean)">
            <summary>
            Remove user from sessions hasthtables.
            </summary>
            <param name="userId">User id</param>
            <param name="createTask">Indicates whether web farm task should be created</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.RemoveUser(System.Int32)">
            <summary>
            Removes user from sessions hashtables.
            </summary>
            <param name="userId">User id</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.IsUserOnline(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns true if user with specified userID is online.
            </summary>
            <param name="siteName">Site name</param>
            <param name="userID">User id</param>
            <param name="includeHidden">Include hidden</param>        
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.Clear(System.String)">
            <summary>
             Clears all information from session management about specified site.
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetPublicUsersNumber(System.String,System.String)">
            <summary>
            Returns number of public users by specified location.
            </summary>
            <param name="siteName">Site name</param>
            <param name="location">Location of users</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetUsersNumber(System.String,System.String,System.Boolean,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Returns number of online users.
            </summary>
            <param name="siteName">Site name</param>
            <param name="location">Location</param>
            <param name="includeHidden">Include hidden users</param>
            <param name="includeKicked">Include kicked users - kicked users are count through all sites</param>
            <param name="publicUsers">Number of public users</param>
            <param name="authenticatedUsers">Bumber of authenticated users</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.RemoveContactDependencies(System.Int32)">
            <summary>
            Removes object dependencies.
            </summary>
            <param name="contactID">Contact being deleted</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetSessionInfoFromHashtable(System.String,System.String)">
            <summary>
            Returns session info from hashtable.
            </summary>        
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetSessionInfoFromHashtable(System.String)">
            <summary>
            Returns session info from hashtable.
            </summary>        
            <param name="sessionIdentifier">Session ID</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetCurrentSessionInfoFromHashtable">
            <summary>
            Returns current session info form hashtable.
            </summary>        
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetUsersNumberSite(System.String,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Count number of users for specified site if location isn't specified.
            </summary>
            <param name="siteName">Site name</param>
            <param name="includeHidden">Include hidden users</param>
            <param name="publicUsers">Number of public users</param>
            <param name="authenticatedUsers">Number of authenticated users</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetUsersNumberSite(System.String,System.String,System.Boolean,System.Boolean,System.Array,System.Int32@,System.Int32@)">
            <summary>
            Count number of users for specified site if location is specified.
            </summary>
            <param name="siteName">Site name</param>
            <param name="location">Location</param>        
            <param name="includeHidden">Include hidden users</param>
            <param name="includeKicked">Include kicked users</param>
            <param name="kickedUsers">Array with kicked users</param>
            <param name="publicUsers">Number of public users</param>
            <param name="authenticatedUsers">Number of authenticated users</param>
        </member>
        <member name="M:CMS.CMSHelper.SessionManager.GetUsersNumberFromDB(System.String,System.String,System.Boolean,System.Int32@,System.Int32@)">
            <summary>
            Gets number of users online.
            </summary>
            <param name="siteName">Name of the site</param>
            <param name="location">Location on the site</param>
            <param name="includeHidden">Include hidden users</param>
            <param name="publicUsers">Number of public users</param>
            <param name="authenticatedUsers">Number of public</param>
        </member>
        <member name="P:CMS.CMSHelper.SessionManager.CurrentSession">
            <summary>
            Current session.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionManager.PublicUsers">
            <summary>
            Returns number of public users of current site.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionManager.AuthenticatedUsers">
            <summary>
            Returns number of authenticated users or current site.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionManager.HiddenUsers">
            <summary>
            Returns number of hidden users.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionManager.StoreOnlineUsersInDatabase">
            <summary>
            Gets the value that indicates whether online users should be saved in the database.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionManager.OnlineUsersEnabled">
            <summary>
            Gets the value that indicates whether online users feature is enabled.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.SessionsInfo">
            <summary>
            Class contains hashtables for session management.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.SessionsInfo.sessions">
            <summary>
            Hashtable contains all sessionInfo objects.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.SessionsInfo.authenticatedSessions">
            <summary>
            Hashtable contains session identifiers of authenticated users.
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.SessionsInfo.hiddenSessions">
            <summary>
            Hashtable contains session identifiers of hidden authenticated users.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionsInfo.Sessions">
            <summary>
            Hashtable contains sessions.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionsInfo.SessionsKeys">
            <summary>
            Gets the sessions collection keys.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionsInfo.AuthenticatedSessions">
            <summary>
            Hashtable contains authenticated sessions.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionsInfo.HiddenSessions">
            <summary>
            Hashtable contains authenticated sessions.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionsInfo.PublicUsers">
            <summary>
            Number of public users.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionsInfo.AuthenticatedUsers">
            <summary>
            Number of authenticated users.
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.SessionsInfo.HiddenUsers">
            <summary>
            Number of hidden users.
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.UpdateDatabaseSession">
            <summary>
            Provides an ITask interface to remove expired sessions form hashtables and database. 
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.UpdateDatabaseSession.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Overload method which is executed by schleduler.
            </summary>
            <param name="task">Task to execute</param>
        </member>
        <member name="T:CMS.CMSHelper.TreeHelper">
            <summary>
            Static tree accessing methods.
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectSingleDocument(System.Int32)">
            <summary>
            Returns the document node specified by the given document ID.
            </summary>
            <param name="documentId">Document ID to select</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectSingleNode(System.Int32)">
            <summary>
            Returns single node specified by NodeID, uses the preferred culture.
            </summary>
            <param name="nodeId">Node ID to select</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectSingleNode(System.String)">
            <summary>
            Returns single document node.
            </summary>
            <param name="aliasPath">Node AliasPath</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectSingleNode(System.String,System.Boolean)">
            <summary>
            Returns single document node.
            </summary>
            <param name="aliasPath">Node AliasPath</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document if specified culture not found</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectSingleNode(System.String,System.Boolean,System.String)">
            <summary>
            Returns single document node.
            </summary>
            <param name="aliasPath">Node AliasPath</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document if specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectSingleNode(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Returns single document node.
            </summary>
            <param name="aliasPath">Node AliasPath</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Node ClassName (e.g.: "cms.article")</param>
            <param name="selectOnlyPublished">Published nodes only</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectNodes(System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectNodes(System.String,System.Boolean)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectNodes(System.String,System.Boolean,System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectNodes(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectNodes(System.String,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectNodes(System.String,System.Boolean,System.String,System.String,System.String,System.Int32)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectNodes(System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Selects tree nodes according to provided parameters and returns them as dataset. If classNames not specified, the result does not contain coupled data.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.SelectNodes(System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean)">
            <summary>
            Selects tree nodes without coupled data according to provided parameters and returns them as dataset.
            </summary>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to the Node GUID</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Specify if the related node is located on the left side of the relationship</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Guid,System.String,System.Boolean,System.Int32,System.String)">
            <summary>
            Selects tree nodes according to provided parameters, current view mode and returns them as dataset.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Culture code of the documents</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="relationshipWithNodeGuid">Select nodes that are related to the Node GUID</param>
            <param name="relationshipName">Relationship name</param>
            <param name="relatedNodeIsOnTheLeftSide">Specify if the related node is located on the left side of the relationship</param>
            <param name="topN">Select only top N documents</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Selects tree nodes according to provided parameters, current view mode and returns them as dataset.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Culture code of the documents</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Select only top N documents</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.GetDocuments(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.String)">
            <summary>
            Selects tree nodes according to provided parameters, current view mode and returns them as dataset.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Culture code of the documents</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="classNames">List of classNames to select separated by semicolon (e.g.: "cms.article;cms.product")</param>
            <param name="where">Where condition to use for the data selection</param>
            <param name="orderBy">Order by clause to use for the data selection</param>
            <param name="maxRelativeLevel">Maximal child level of the selected nodes</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="topN">Select only top N documents</param>
            <param name="columns">Columns to be selected. Columns definition must contain mandatory columns (NodeID, NodeLinkedNodeID, DocumentCulture)</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.GetDocument(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,CMS.SiteProvider.UserInfo)">
            <summary>
            Selects document according to provided parameters and current view mode.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Culture code of the documents</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Class name of the document</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
            <param name="checkPermissions">True if the permissions should be checked</param>
            <param name="user">User info</param>
        </member>
        <member name="M:CMS.CMSHelper.TreeHelper.GetDocument(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Selects document according to provided parameters and current view mode.
            </summary>
            <param name="siteName">Site name</param>
            <param name="aliasPath">Path. It may contain % and _ as wild card characters for any number of unknown characters or one unknown character respectively (for MS SQL)</param>
            <param name="cultureCode">Culture code of the documents</param>
            <param name="combineWithDefaultCulture">Specifies if return the default culture document when specified culture not found</param>
            <param name="className">Class name of the document</param>
            <param name="selectOnlyPublished">Select only published nodes</param>
        </member>
        <member name="T:CMS.CMSHelper.DocumentValidationEnum">
            <summary>
            Document validation type
            </summary>   
        </member>
        <member name="F:CMS.CMSHelper.DocumentValidationEnum.CSS">
            <summary>
            Document CSS validation
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.DocumentValidationEnum.HTML">
            <summary>
            Document (X)HTML validation
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.DocumentValidationEnum.Link">
            <summary>
            Document validation for broken links
            </summary>
        </member>
        <member name="F:CMS.CMSHelper.DocumentValidationEnum.Accessibility">
            <summary>
            (X)HTML document accessibility validation
            </summary>
        </member>
        <member name="T:CMS.CMSHelper.DocumentValidationHelper">
            <summary>
            Helper class for document validation
            </summary>
        </member>
        <member name="M:CMS.CMSHelper.DocumentValidationHelper.ProcessValidationResult(System.Data.DataSet,CMS.CMSHelper.DocumentValidationEnum,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Process validation result and apply data transformations
            </summary>
            <param name="result">DataSet with validation results to process</param>
            <param name="validationTask">Type of document validation applied</param>
            <param name="additionalValues">Additional values used in data post-processing</param>
        </member>
        <member name="M:CMS.CMSHelper.DocumentValidationHelper.PostProcessValidationData(System.Data.DataSet,CMS.CMSHelper.DocumentValidationEnum,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Post-Process validation data
            </summary>
            <param name="data">DataSet with validation data to process</param>
            <param name="validationTask">Type of document validation applied</param>
            <param name="additionalValues">Additional values used in data post-processing</param>
        </member>
        <member name="M:CMS.CMSHelper.DocumentValidationHelper.DisableMinificationOnUrl(System.String)">
            <summary>
            Update URL so it doesn't use minification
            </summary>
            <param name="url">URL to update</param>
        </member>
        <member name="M:CMS.CMSHelper.DocumentValidationHelper.AllowedToEditCSS(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Check is user is allowed to edit CSS
            </summary>
            <param name="user">User to check</param>
            <param name="siteName">Name of site under which CSS are checked to be editable</param>
        </member>
        <member name="M:CMS.CMSHelper.DocumentValidationHelper.GetStatusCodeDescription(System.Int32,System.String)">
            <summary>
            Get string representation of HTTP status code
            </summary>
            <param name="statusNumber">HTTP status code</param>
            <param name="culture">Culture of resulting text</param>
        </member>
        <member name="P:CMS.CMSHelper.DocumentValidationHelper.CleanExplanationRegex">
            <summary>
            Regular expression to remove unnecessary text from validation error explanation
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.DocumentValidationHelper.AnchorRegex">
            <summary>
            Regular expression to remove unnecessary text from validation error explanation
            </summary>
        </member>
        <member name="P:CMS.CMSHelper.DocumentValidationHelper.InlineCSSSource">
            <summary>
            Returns source of inline CSS styles
            </summary>
        </member>
    </members>
</doc>
