<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.WorkflowEngine</name>
    </assembly>
    <members>
        <member name="T:CMS.WorkflowEngine.BaseWorkflowAction`3">
            <summary>
            General base class for workflow actions.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowAction">
            <summary>
            Interface for workflow actions.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowAction.Execute">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.IWorkflowAction.Process(CMS.WorkflowEngine.IWorkflowActionEventArgs)">
            <summary>
            Processes action.
            </summary>
            <param name="args">Arguments of action</param>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowAction.Arguments">
            <summary>
            Action arguments
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.Execute">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.GetDefaultMacroResolver">
            <summary>
            Prepares macro resolver for usage
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.GetResolvedParameter``1(System.String,``0)">
            <summary>
            Gets resolved value of parameter.
            </summary>
            <param name="parameterName">Parameter name</param>
            <param name="defaultValue">Default value</param>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.Process(CMS.WorkflowEngine.IWorkflowActionEventArgs)">
            <summary>
            Processes action.
            </summary>
            <param name="args">Arguments of action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.BaseWorkflowAction`3.LogMessage(System.String,System.String,System.String,`0)">
            <summary>
            Logs message to event log.
            </summary>
            <param name="eventType">Type of the event. Please use predefined constants from EventLogProvider</param>
            <param name="eventCode">Event code (UPDATEDOC, SENDEMAIL, DELETE, etc.)</param>
            <param name="message">Message</param>
            <param name="infoObj">Info object</param>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Arguments">
            <summary>
            Action arguments
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.MacroTable">
            <summary>
            Hash table for resolved parameters values
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Manager">
            <summary>
            Manager.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.ActionDefinition">
            <summary>
            Action definition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Parameters">
            <summary>
            Parameters of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.User">
            <summary>
            User running action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.ActionStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.InitialStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.OriginalStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Workflow">
            <summary>
            Current workflow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.InfoObject">
            <summary>
            Current info object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.StateObject">
            <summary>
            Current state object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.Comment">
            <summary>
            Comment used when action moves to next step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.BaseWorkflowAction`3.MacroResolver">
            <summary>
            Macro resolver for action.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ActionsExecutor`3">
            <summary>
            Action executor.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ActionsExecutor`3.#ctor(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,`1,`2})">
            <summary>
            Creates executor of action based on given arguments.
            </summary>
            <param name="arguments">Action arguments</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ActionsExecutor`3.Execute">
            <summary>
            Executes action in asynchronous thread if allowed.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ActionsExecutor`3.Run">
            <summary>
            Executes action.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ActionsExecutor`3.RunAsync">
            <summary>
            Executes action in separate thread.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ActionsExecutor`3.Arguments">
            <summary>
            Parameters of step action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ActionsExecutor`3.Manager">
            <summary>
            Workflow manager.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.IWorkflowActionEventArgs">
            <summary>
            Interface for workflow action arguments.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.ActionDefinition">
            <summary>
            Action definition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.Parameters">
            <summary>
            Parameters of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.User">
            <summary>
            User running action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.ActionStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.InitialStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.OriginalStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.Workflow">
            <summary>
            Current workflow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.Comment">
            <summary>
            Comment used when action moves to next step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.IWorkflowActionEventArgs.StopProcessing">
            <summary>
            Indicates if the process should be stopped. Process is not moved to the next step.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ActionsWorker`3">
            <summary>
            Class for asynchronous object changes logging.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ActionsWorker`3.#ctor(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,`1,`2})">
            <summary>
            Constructor.
            </summary>
            <param name="arguments">Worker arguments</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ActionsWorker`3.Run">
            <summary>
            Runs the action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ActionsWorker`3.Arguments">
            <summary>
            Parameters of step action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ActionsWorker`3.Manager">
            <summary>
            Workflow manager.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionEventArgs`3">
            <summary>
            Workflow action event arguments
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionEventArgs`3.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.Manager">
            <summary>
            Manager.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.ActionDefinition">
            <summary>
            Action definition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.Parameters">
            <summary>
            Parameters of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.User">
            <summary>
            User running action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.ActionStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.InitialStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.OriginalStep">
            <summary>
            Current step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.Workflow">
            <summary>
            Current workflow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.InfoObject">
            <summary>
            Current info object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.StateObject">
            <summary>
            Info object representing automation state. Used for automation processes.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.Comment">
            <summary>
            Comment used when action moves to next step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionEventArgs`3.StopProcessing">
            <summary>
            Indicates if the process should be stopped. Process is not moved to the next step.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AbstractAutomationManager`1">
            <summary>
            Class for managing the marketing automation.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AbstractWorkflowManager`3">
            <summary>
            Abstract class for managing the workflow procedure.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AbstractWorkflowManager`3.mEventLogSource">
            <summary>
            Event log source name.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AbstractWorkflowManager`3.mMacroResolver">
            <summary>
            Inner MacroResolver object.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AbstractWorkflowManager`3.mSendEmails">
            <summary>
            Indicates if notification e-mails should be sent.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AbstractWorkflowManager`3.mCheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked when the step is moved.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetEmailResolver(`0,`1,CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,System.String,System.String)">
            <summary>
            Get resolver for e-mail sending.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="action">Workflow action string representation</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.SetActionStatusInternal(`0,`1,System.String)">
            <summary>
            Sets action status
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="status">Status string</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetActionStatusInternal(`0,`1)">
            <summary>
            Gets action status
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetEvalResolverInternal(`0,`1,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo)">
            <summary>
            Gets resolver for evaluation of transitions and source points
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="workflow">Workflow</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.MoveToSpecificStepInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,`2)">
            <summary>
            Moves the specified object to the specified step in the workflow and returns workflow step.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="action">Action context</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.MoveToStepInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,System.Boolean)">
            <summary>
            Moves the specified object to the specified step in the workflow and returns the step.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="currentStep">Current workflow step of the object</param>
            <param name="step">Target workflow step of the object</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetNextStepInfoInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns list of next steps for given object.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetPreviousStepInfoInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean)">
            <summary>
            Returns previous step information for given node.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetPreviousStepsInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of previous steps for current workflow cycle
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetStepTransitions(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Gets all workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetStepTransitions(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Gets workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
            <param name="transitionType">Type of transitions to get</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.EvaluateTransitions(CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo,System.Int32,CMS.GlobalHelper.MacroResolver)">
            <summary>
            Evaluates list of existing transitions for given workflow step and returns either one best match or multiple transitions matched
            </summary>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
            <param name="siteId">Site ID</param>
            <param name="resolver">Macro resolver to evaluate conditions</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.EvaluateTransitions(CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo,System.Int32,CMS.GlobalHelper.MacroResolver,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Evaluates list of existing transitions for given workflow step and returns either one best match or multiple transitions matched
            </summary>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
            <param name="siteId">Site ID</param>
            <param name="resolver">Macro resolver to evaluate conditions</param>
            <param name="transitionType">Transition type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.SendWorkflowEmails(CMS.WorkflowEngine.WorkflowEmailSettings)">
            <summary>
            Sends the workflow e-mails to given recipients.
            </summary>
            <param name="settings">E-mail sending settings</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.ProcessActions(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,`1,`2})">
            <summary>
            Processes all actions in scope.
            </summary>
            <param name="arguments">Initial action arguments</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.SetAsyncActionStatusInternal(`0,`1,System.String)">
            <summary>
            Sets action status for asynchronous action processing
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="status">Status string</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.HandleStepInternal(`0,`1,CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean)">
            <summary>
            Handles step additional actions
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="user">User info</param>
            <param name="workflow">Workflow</param>
            <param name="currentStep">Current workflow step</param>
            <param name="step">Target workflow step</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.HandleStepTimeoutInternal(`0,`1,CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Handles step timeout
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="user">User info</param>
            <param name="workflow">Workflow</param>
            <param name="currentStep">Current workflow step</param>
            <param name="step">Target workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.CreateActionsExecutorInternal(`0,`1,CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Creates action executor with prefilled parameters.
            </summary>
            <param name="infoObj">Current object in workflow</param>
            <param name="stateObj">State object</param>
            <param name="user">User</param>
            <param name="initialStep">Initial workflow step</param>
            <param name="actionStep">Initial workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.ProcessActionInternal(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,`1,`2})">
            <summary>
            Processes action connected to given step.
            </summary>
            <param name="arguments">Action arguments</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.CreateActionArgumentsInternal(`0,`1,CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.AbstractWorkflowManager{`0,`1,`2})">
            <summary>
            Creates action arguments.
            </summary>
            <param name="infoObj">Current object in workflow</param>
            <param name="stateObj">State object</param>
            <param name="user">User</param>
            <param name="initialStep">Initial workflow step</param>
            <param name="actionStep">Initial workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="manager">Manager</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.ProcessActionsInternal(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,`1,`2})">
            <summary>
            Processes all actions in scope.
            </summary>
            <param name="arguments">Initial action arguments</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.MoveStepInternal(`0,`1,CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo)">
            <summary>
            Moves the specified object to the first step without automatic transition in the workflow and returns the final step.
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
            <param name="currentStep">Current workflow step of the object</param>
            <param name="user">User</param>
            <remarks>The return step can be different than the original target step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetBasicResolverInternal(CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo)">
            <summary>
            Gets basic resolver for evaluation of transitions and source points
            </summary>
            <param name="workflow">Workflow</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.EvaluateSourcePointsInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.Collections.Generic.List{CMS.WorkflowEngine.Definitions.SourcePoint},CMS.GlobalHelper.MacroResolver)">
            <summary>
            Evaluates source points with given macro resolver
            </summary>
            <param name="step">Workflow step</param>
            <param name="points">Source points</param>
            <param name="resolver">Macro resolver</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.SendWorkflowEmailsInternal(CMS.WorkflowEngine.WorkflowEmailSettings)">
            <summary>
            Sends the workflow e-mails to given recipients.
            </summary>
            <param name="settings">E-mail sending settings</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetStepInboundTransitionsInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Gets transitions leading into given step
            </summary>
            <param name="step">Workflow step</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.LogMessage(System.String,System.String,System.String,`0,CMS.SiteProvider.UserInfo)">
            <summary>
            Logs custom message to event log.
            </summary>
            <param name="eventType">Event type</param>
            <param name="eventCode">Event code</param>
            <param name="message">Message</param>
            <param name="infoObj">Info object</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.LogMissingConnectionWarningInternal(`0,CMS.SiteProvider.UserInfo)">
            <summary>
            Logs warning about missing connection
            </summary>
            <param name="infoObj">Info object</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.LogHopsReachedWarningInternal(`0,CMS.SiteProvider.UserInfo)">
            <summary>
            Logs warning about maximum hops reached
            </summary>
            <param name="infoObj">Info object</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.LogMessageInternal(System.String,System.String,System.String,System.String,`0,CMS.SiteProvider.UserInfo)">
            <summary>
            Logs message to the event log
            </summary>
            <param name="type">Message type</param>
            <param name="source">Source</param>
            <param name="eventCode">Event code</param>
            <param name="message">Message</param>
            <param name="infoObj">Info object</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.EvaluateTransitionsInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo,System.Int32,CMS.GlobalHelper.MacroResolver,System.String)">
            <summary>
            Evaluates list of existing transitions for given workflow step and returns either one best match or multiple transitions matched
            </summary>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
            <param name="siteId">Site ID</param>
            <param name="resolver">Macro resolver to evaluate conditions</param>
            <param name="where">Where condition for transitions</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractWorkflowManager`3.GetStepTransitionsInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Gets workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
            <param name="where">Where condition</param>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.CheckPermissions">
            <summary>
            Indicates if step permissions should be checked when the step is moved.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.EventLogSource">
            <summary>
            Event log source name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.MacroResolver">
            <summary>
            Macro resolver instance.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.SendEmails">
            <summary>
            Indicates if notification e-mails should be sent
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.SendEmailToModerator">
            <summary>
            Returns whether the e-mails should be sent to the current moderator (reflects the CMSWorkflowSendEmailToModerator web.config settings).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.ApplicationUrl">
            <summary>
            Application URL for macro resolver
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractWorkflowManager`3.CurrentHops">
            <summary>
            Number of currently processed hops
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetFirstStep(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns start step for given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetFinishedStep(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns finished step for given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetObjectProcess(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns the process for the specified object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetStepInfo(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Gets step information for given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetPreviousStepInfo(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns previous step information.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetPreviousStepInfo(`0,CMS.WorkflowEngine.AutomationStateInfo,System.Boolean)">
            <summary>
            Returns previous step information.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetPreviousSteps(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns list of previous steps for current process
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetNextSteps(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns list of next steps.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.LogProcessHistory(CMS.WorkflowEngine.AutomationLogSettings)">
            <summary>
            Logs specified action in the object workflow history record.
            </summary>
            <param name="settings">Log settings</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.StartProcess(`0,System.Int32)">
            <summary>
            Starts process on given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="processId">Process ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.StartProcess(`0,System.Int32,CMS.WorkflowEngine.ObjectWorkflowTriggerInfo)">
            <summary>
            Starts process on given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="processId">Process ID</param>
            <param name="trigger">Trigger which initiated the process</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.RemoveProcess(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Removes process from given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToNextStep(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String)">
            <summary>
            Moves the specified object to the next step and returns new step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToNextStep(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified object to the next step and returns new step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToPreviousStep(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String)">
            <summary>
            Moves the specified object to the previous step and returns the step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToPreviousStep(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified object to the specified previous step and returns the step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToFirstStep(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String)">
            <summary>
            Moves the specified object to the first step and returns the step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToFinishedStep(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String)">
            <summary>
            Moves object directly to finished step. (Finishes the process without going through all the steps.)
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToSpecificStep(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified object to the specified step and returns workflow step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToSpecificStep(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified object to the specified step and returns workflow step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToSpecificNextStep(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified object to the specified next step and returns workflow step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToSpecificNextStep(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified object to the specified next step and returns workflow step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.SetActionStatus(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String)">
            <summary>
            Sets action state
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="status">Status string</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetActionStatus(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Gets action state
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.CheckStepPermissions(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.AutomationActionEnum)">
            <summary>
            Returns true if given user can move given object to the previous/next step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="action">Automation action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetUsersWhoCanMove(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.Definitions.SourcePoint)">
            <summary>
            Returns list of users who can move object to the next step. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetUsersWhoCanMove(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can move object to the next step. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetUsersWhoCanMove(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Returns list of all the users who can move object to the next step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="assigned">Indicates if users assigned to the workflow steps should be get. Users in the generic roles are not included</param>
            <param name="managers">Indicates if users who have the manage workflow permission should be get</param>
            <param name="administrators">Indicates if users who are global administrators should be get</param>
            <returns>Returns defined role users, Global administrators and users who have the Manage processes permission for the object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetUsersWhoCanMove(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of all the users who can move object to the next step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="assigned">Indicates if users assigned to the workflow steps should be get. Users in the generic roles are not included</param>
            <param name="managers">Indicates if users who have the manage workflow permission should be get</param>
            <param name="administrators">Indicates if users who are global administrators should be get</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
            <returns>Returns defined role users, Global administrators and users who have the Manage processes permission for the object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetFirstStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns first step for given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetFinishedStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns finished step for given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetObjectProcessInternal(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Returns the process for the specified object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetStepInfoInternal(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Gets step information for given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetPreviousStepInfoInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean)">
            <summary>
            Returns previous step information for given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetPreviousStepsInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Returns list of previous steps for current cycle
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Current workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetPreviousStepInfoInternal(CMS.WorkflowEngine.AutomationHistoryInfo,System.Int32,System.Boolean)">
            <summary>
            Gets previous workflow step
            </summary>
            <param name="history">History</param>
            <param name="workflowId">Workflow ID</param>
            <param name="markAsUsed">Indicates if the history should be marked as used.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetForwardHistoriesInternal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets histories between two given for specified object
            </summary>
            <param name="startHistoryId">Start history ID</param>
            <param name="endHistoryId">End history ID</param>
            <param name="stateId">State object ID</param>
            <param name="topN">Top N results</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetNextStepInfoInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo)">
            <summary>
            Returns list of next steps for given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.StartProcessInternal(`0,System.Int32,CMS.WorkflowEngine.ObjectWorkflowTriggerInfo)">
            <summary>
            Starts process on given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="processId">Process ID</param>
            <param name="trigger">Trigger which initiated the process</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.RemoveProcessInternal(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Removes process from given object.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.CheckRecurrenceInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.ProcessRecurrenceTypeEnum)">
            <summary>
            Check automation process recurrence settings
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="type">Recurrence type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToNextStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum)">
            <summary>
            Moves the specified object to the next step and returns new step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToPreviousStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Moves the specified object to the previous step and returns the new step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>    
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MarkReverseHistoriesInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Int32)">
            <summary>
            Marks workflow histories as used when moving to previous specific step.
            </summary>
            <param name="previousStep">Previous workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="stateId">State object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToFirstStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String)">
            <summary>
            Moves the specified object to the first step and returns the step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToSpecificStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,CMS.WorkflowEngine.AutomationActionEnum)">
            <summary>
            Moves the specified object to the specified step and returns workflow step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="step">Step to which should be specified object moved</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="action">Action context</param>
            <remarks>The return step can be different than the original given step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.String,CMS.WorkflowEngine.WorkflowTransitionTypeEnum,System.Boolean)">
            <summary>
            Moves the specified object to the specified step and returns the step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="currentStep">Current workflow step of the object</param>
            <param name="step">Target workflow step of the object</param>
            <param name="comment">Action comment</param>
            <param name="transitionType">Type of transition</param>
            <param name="handleActions">Indicates if step actions should be handled</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves the specified object to the first step without automatic transition and returns the final step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="currentStep">Current workflow step of the object</param>
            <remarks>The return step can be different than the original target step.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.MoveToFinishedStepInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String)">
            <summary>
            Moves object directly to finished step. (Finishes the process without going through all the steps.)
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.CheckStepPermissionsInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.AutomationActionEnum)">
            <summary>
            Returns true if given user can move given object to previous/next step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="action">Automation action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetUsersWhoCanMoveInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can move object to the next step. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetUsersWhoCanMoveInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of all the users who can move object to the next step.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="assigned">Indicates if users assigned to the workflow steps should be get. Users in the generic roles are not included</param>
            <param name="managers">Indicates if users who have the manage permission should be get</param>
            <param name="administrators">Indicates if users who are global administrators should be get</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
            <returns>Returns defined role users, Global administrators and users who have the Manage processes permission for the object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.SetActionStatusInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,System.String)">
            <summary>
            Sets action state
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="status">Status string</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetActionStatusInternal(`0,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Gets action state
            </summary>
            <param name="infoObj">Info object</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetEvalResolverInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.WorkflowInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.SiteProvider.UserInfo)">
            <summary>
            Gets resolver for evaluation of transitions and source points
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="workflow">Workflow</param>
            <param name="step">Workflow step</param>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetEmailResolver(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,System.String,System.String)">
            <summary>
            Get resolver for e-mail sending.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="user">User</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="action">Automation action string representation</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.GetEmailResolverInternal(`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.WorkflowInfo,System.String,System.String)">
            <summary>
            Get resolver for e-mail sending.
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
            <param name="userInfo">User info that performed the action</param>
            <param name="originalStep">Original workflow step</param>
            <param name="currentStep">Current workflow step</param>
            <param name="workflow">Workflow</param>
            <param name="action">Workflow action string representation</param>
            <param name="comment">Action comment</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AbstractAutomationManager`1.ProcessActionInternal(CMS.WorkflowEngine.WorkflowActionEventArgs{`0,CMS.WorkflowEngine.AutomationStateInfo,CMS.WorkflowEngine.AutomationActionEnum})">
            <summary>
            Processes action connected to given step.
            </summary>
            <param name="arguments">Action arguments</param>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractAutomationManager`1.CheckPermissions">
            <summary>
            Indicates if step permissions should be checked when the step is moved.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AbstractAutomationManager`1.User">
            <summary>
            User
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.EmailAction">
            <summary>
            Class representing action to send e-mail
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationAction">
            <summary>
            Base automation action
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationAction.RefreshObject">
            <summary>
            Refreshes object instance
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationAction.AutomationManager">
            <summary>
            Automation manager
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.EmailAction.Execute">
            <summary>
            Executes action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.EmailAction.Recipients">
            <summary>
            Recipients of e-mail separated by ';' or ','.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.EmailAction.TemplateName">
            <summary>
            Template of e-mail.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.EmailAction.Sender">
            <summary>
            Sender of e-mail.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.EmailAction.Subject">
            <summary>
            Subject specifically defined for step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.EmailAction.Body">
            <summary>
            E-mail body specifically defined for step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.EmailAction.BasedOnTemplate">
            <summary>
            Whether is e-mail based or template or not 
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.StartProcessAction">
            <summary>
            Class for starting automation process on contact.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.StartProcessAction.Execute">
            <summary>
            Executes the action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.StartProcessAction.ProcessName">
            <summary>
            Activity title.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationHelper">
            <summary>
            Class for automation helper methods.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHelper.GetProcessStatus(CMS.WorkflowEngine.ProcessStatusEnum)">
            <summary>
            Returns formatted string with process status name and CSS class. Only 'Processing' status is returned without CSS class.
            </summary>
            <param name="processStatus">Process status</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHelper.GetTriggerName(CMS.WorkflowEngine.WorkflowTriggerTypeEnum,System.String)">
            <summary>
            Returns formatted trigger name.
            </summary>
            <param name="type">Type of trigger</param>
            <param name="objectType">Object type</param>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationManager">
            <summary>
            Class for managing the marketing automation.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationManager.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationManager.#ctor(CMS.SiteProvider.UserInfo)">
            <summary>
            Constructor - Creates automation manager.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationManager.Init(CMS.SiteProvider.UserInfo)">
            <summary>
            Initializes the manager
            </summary>
            <param name="user">User to run with</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationManager.GetInstance(CMS.SiteProvider.UserInfo)">
            <summary>
            Gets the instance of the manager.
            </summary>
            <param name="user">User</param>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationActionContext">
            <summary>
            Automation action context. Ensures context for the automation actions block.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationActionContext.#ctor">
            <summary>
            Constructor. Ensures context with special settings for block of actions during the life of this object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationActionContext.#ctor(CMS.SettingsProvider.IUserInfo)">
            <summary>
            Constructor. Ensures that all actions during the life of this object will use the given user context.
            </summary>
            <param name="user">User to use within all actions</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationActionContext.DisableAll">
            <summary>
            Disables all actions
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationActionContext.RestoreOriginalValues">
            <summary>
            Restores the original values to the context
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationActionContext.CurrentCheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationActionContext.CheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionContext">
            <summary>
            Workflow action context. Ensures context for the workflow actions block.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionContext.#ctor">
            <summary>
            Constructor. Ensures context with special settings for block of actions during the life of this object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionContext.#ctor(CMS.SettingsProvider.IUserInfo)">
            <summary>
            Constructor. Ensures that all actions during the life of this object will use the given user context.
            </summary>
            <param name="user">User to use within all actions</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionContext.DisableAll">
            <summary>
            Disables all actions
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionContext.RestoreOriginalValues">
            <summary>
            Restores the original values to the context
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionContext.CurrentCheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionContext.CheckStepPermissions">
            <summary>
            Indicates if step permissions should be checked.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Trigger">
            <summary>
            Implementation of IAutomationTrigger based on TriggerInfo.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ITrigger">
            <summary>
            Automation trigger interface.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ITrigger.Process(CMS.WorkflowEngine.TriggerOptions)">
            <summary>
            Processes trigger.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Trigger.#ctor(CMS.WorkflowEngine.ObjectWorkflowTriggerInfo)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Trigger.Process(CMS.WorkflowEngine.TriggerOptions)">
            <summary>
            Resolves trigger macro on given object and creates workflow process if successful.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.TriggerManager">
            <summary>
            Class for managing automation triggers.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.TriggerManager.mManagerObject">
            <summary>
            Manager object.
            </summary> 
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerManager.GetInstance">
            <summary>
            Gets single instance of AutomationTriggerManager
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerManager.ProcessTriggers(CMS.WorkflowEngine.TriggerOptions)">
            <summary>
            Processes all triggers of given type on given BaseInfo.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerManager.RegisterCustomTrigger(CMS.WorkflowEngine.ITrigger)">
            <summary>
            Registers custom trigger.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerManager.HasTriggerTypes(System.String)">
            <summary>
            Checks if triggers of given types are present.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerManager.ClearHashtable(System.String)">
            <summary>
            Clears cached triggers for given object type.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerManager.ProcessTriggersInternal(CMS.WorkflowEngine.TriggerOptions)">
            <summary>
            Processes all triggers of given type on given BaseInfo.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerManager.GetTriggers(System.String)">
            <summary>
            Gets all cached triggers.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.TriggerManager.ManagerObject">
            <summary>
            Helper object.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.TriggerOptions">
            <summary>
            Crate for passing variables needed by triggers.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.TriggerOptions.Info">
            <summary>
            Info to add to process. Required field.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.TriggerOptions.ObjectType">
            <summary>
            Allowed object type of workflow process that trigger would start. Required field.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.TriggerOptions.IgnoreProcesses">
            <summary>
            List of processes to ignore.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.TriggerOptions.Resolver">
            <summary>
            Resolver on which macros of triggers will be resolved.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.TriggerOptions.Types">
            <summary>
            Allowed types of triggers to be processed. Leave empty to process all types of triggers.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.TriggerOptions.PassFunction">
            <summary>
            Function that must be passed to process trigger.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.TriggerWorker">
            <summary>
            Class for managing automation triggers.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerWorker.#ctor(CMS.WorkflowEngine.TriggerOptions)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerWorker.#ctor(CMS.WorkflowEngine.TriggerOptions,System.Action{CMS.WorkflowEngine.TriggerOptions})">
            <summary>
            Constructor.
            </summary>
            <param name="options">Options.</param>
            <param name="loadOptions">Additionally load options in created thread.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerWorker.Run">
            <summary>
            Processes all triggers, adds BaseInfo set in options to workflow processes.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.TriggerWorker.GetDuplicityKey">
            <summary>
            Gets the duplicity key for the worker to eliminate duplicate queued workers.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.TriggerWorker.DuplicityKey">
            <summary>
            Duplicity key used to remove redundant workers out of worker queue. Leave empty for default implementation.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ProcessRecurrenceException">
            <summary>
            Exception which is thrown when process recurrence check fails and process is not started.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ProcessRecurrenceException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="T:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1">
            <summary>
            Abstract class for creating settings containers based on step type.
            </summary>
            <typeparam name="Type">Type of returned setting object</typeparam>
        </member>
        <member name="F:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.mFactory">
            <summary>
            Private property factory.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetSettingsObject(CMS.SettingsProvider.WorkflowStepTypeEnum)">
            <summary>
            Returns settings for specified type.
            </summary>
            <param name="type">Step type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetSettingsObject(System.Collections.Generic.List{CMS.SettingsProvider.WorkflowStepTypeEnum})">
            <summary>
            Returns settings for specified types.
            </summary>
            <param name="types">Step types</param>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetActionSettings">
            <summary>
            Injects dependencies for step type action. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetConditionSettings">
            <summary>
            Injects dependencies for step type condition. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetDocumentArchivedSettings">
            <summary>
            Injects dependencies for step type of archived document. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetDocumentEditSettings">
            <summary>
            Injects dependencies for step type of edited document. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetDocumentPublishedSettings">
            <summary>
            Injects dependencies for step type of published document. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetMultichoiceSettings">
            <summary>
            Injects dependencies for step type multi choice. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetMultichoiceFirstWinSettings">
            <summary>
            Injects dependencies for step type multi choice first win. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetStandardSettings">
            <summary>
            Injects dependencies for step type standard. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetStartSettings">
            <summary>
            Injects dependencies for step type start. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetFinishedSettings">
            <summary>
            Injects dependencies for step type start. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetUndefinedSettings">
            <summary>
            Injects dependencies for step type undefined. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetUserchoiceSettings">
            <summary>
            Injects dependencies for step type user choice. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetWaitSettings">
            <summary>
            Injects dependencies for step type wait. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.GetDefaultSettings">
            <summary>
            Injects dependencies for step type default. 
            </summary>
            <returns>Generic data type</returns>
        </member>
        <member name="P:CMS.WorkflowEngine.Factories.StepTypeDependencyInjector`1.Factory">
            <summary>
            Setting property executing the creation.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode">
            <summary>
            Factory class for getting display name based on step type.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.mInstance">
            <summary>
            Instance for singleton pattern usage.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetNode(CMS.SettingsProvider.WorkflowStepTypeEnum)">
            <summary>
            Creates new workflow node instance based on given workflow step type.
            </summary>
            <param name="type">Type of workflow step</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetActionSettings">
            <summary>
            Creates new workflow node for step type action. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetConditionSettings">
            <summary>
            Creates new workflow node for step type condition. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetDocumentArchivedSettings">
            <summary>
            Creates new workflow node for step type of archived document. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetDocumentEditSettings">
            <summary>
            Creates new workflow node for step type of edited document. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetDocumentPublishedSettings">
            <summary>
            Creates new workflow node for step type of published document. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetMultichoiceSettings">
            <summary>
            Creates new workflow node for step type multi choice. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetMultichoiceFirstWinSettings">
            <summary>
            Creates new workflow node for step type multi choice first win. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetStandardSettings">
            <summary>
            Creates new workflow node for step type standard. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetStartSettings">
            <summary>
            Creates new workflow node for step type start. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetFinishedSettings">
            <summary>
            Creates new workflow node for step type start. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetUndefinedSettings">
            <summary>
            Creates new workflow node for step type undefined. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetUserchoiceSettings">
            <summary>
            Creates new workflow node for step type user choice. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetWaitSettings">
            <summary>
            Creates new workflow node for step type wait. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeWorkflowNode.GetDefaultSettings">
            <summary>
            Creates new workflow node for step type default. 
            </summary>
            <returns>New workflow node</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.Factories.StepTypeFactory`1">
            <summary>
            Factory for creating setting objects based on workflow step type.
            </summary>
            <typeparam name="ContainerType">Type of settings object</typeparam>
        </member>
        <member name="F:CMS.WorkflowEngine.Factories.StepTypeFactory`1.mInjector">
            <summary>
            Local variable containing dependency injector.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeFactory`1.#ctor(CMS.WorkflowEngine.Factories.StepTypeDependencyInjector{`0})">
            <summary>
            Sets dependency injector.
            </summary>
            <param name="injector">Dependency injector used in factory methods</param>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeFactory`1.GetSettingsObject(System.Collections.Generic.List{CMS.SettingsProvider.WorkflowStepTypeEnum})">
            <summary>
            Creates menu items based on workflow step types.
            </summary>
            <param name="stepTypes">List of workflow step types</param>
            <returns>List of settings objects</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.Factories.StepTypeFactory`1.GetSettingsObject(CMS.SettingsProvider.WorkflowStepTypeEnum)">
            <summary>
            Creates menu items based on workflow step type.
            </summary>
            <param name="nodeType">Workflow step types</param>
            <returns>Settings object</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.GraphConfig.WorkflowConnection">
            <summary>
            Class creating connection definition from information given by workflow.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowConnection.#ctor(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Creates Connection configuration object by given WorkflowTransitionInfo object.
            </summary>
            <param name="transition">Transition to be rewritten</param>
            <returns>Connection configuration object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowConnection.#ctor(System.String,System.String)">
            <summary>
            Method for support of basic workflows.
            </summary>
            <param name="fromID">ID of source node</param>
            <param name="toID">ID of target node</param>
            <returns>New connection</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.GraphConfig.WorkflowGraph">
            <summary>
            Definition of workflow graph
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.mWorkflow">
            <summary>
            Workflow to be converted.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.#ctor(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates graph configuration object from given Workflow.
            </summary>
            <returns>Graph configuration object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.GetDefaultConnections">
            <summary>
            Returns default list of connections based on given information.
            </summary>
            <returns>List of connections.</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.GetDefaultNodes">
            <summary>
            Returns default list of nodes based on given information.
            </summary>
            <returns>List of nodes</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.SuplementBasicNodesDefinition">
            <summary>
            Supplements definition of basic nodes to be printable.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.AddConnection(System.Int32,System.Int32)">
            <summary>
            Adds single connection based on given indexes from list of Nodes.
            </summary>
            <param name="fromIndex">Index from nodes</param>
            <param name="toIndex">Index from nodes</param>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowGraph.ExtendGraphResources">
            <summary>
            Extends resource dictionaries for graph in JS.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.GraphConfig.WorkflowNode">
            <summary>
            Workflow node configuration
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.GraphConfig.WorkflowNode.mWorkflowStep">
            <summary>
            Reference to workflow step on which is based this node.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.#ctor">
            <summary>
            Constructor for default node container.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.GetInstance(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Method creating node based on given workflow step.
            </summary>
            <param name="step">Type of workflow step</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.GetInstance(CMS.SettingsProvider.WorkflowStepTypeEnum)">
            <summary>
            Method creating empty node just with predefined type-specific properties.
            </summary>
            <param name="type">Type of workflow step</param>
            <returns>New workflow node</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.LoadAction(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Fills information about action of step.
            </summary>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowNode.GetDefaultSourcePoints">
            <summary>
            Method returning default list of source points based on given information.
            </summary>
            <returns>List of source points</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.GraphConfig.WorkflowSourcePoint">
            <summary>
            Workflow source point configuration
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.GraphConfig.WorkflowSourcePoint.#ctor(CMS.WorkflowEngine.Definitions.SourcePoint)">
            <summary>
            Creates source point configuration object by given workflow source point object.
            </summary>
            <param name="sourcePoint">Source point to be rewritten</param>
            <returns>Source point configuration object</returns>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationLogSettings">
            <summary>
            Class for automation history log settings.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowLogSettings">
            <summary>
            Class for workflow history log settings.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowLogSettings.#ctor(System.String,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.VersionHistoryId">
            <summary>
            Version history ID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.SourceStep">
            <summary>
            Source workflow step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.TargetStep">
            <summary>
            Target workflow step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.Comment">
            <summary>
            Comment
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.Rejected">
            <summary>
            Indicates if step was rejected.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.Time">
            <summary>
            Date and time of the action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.User">
            <summary>
            User info for the action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.ObjectType">
            <summary>
            Object type
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.ObjectID">
            <summary>
            Object ID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowLogSettings.TransitionType">
            <summary>
            Transition type
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationLogSettings.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
            <param name="stateId">State object ID</param>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationLogSettings.StateObjectID">
            <summary>
            State object ID
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.CaseSourcePoint">
            <summary>
            Class handling initial values for user choice source point.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.SourcePoint">
            <summary>
            Class to hold the workflow step source point definition.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.SourcePoint.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Guid">
            <summary>
            Point GUID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Label">
            <summary>
            Point label
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Text">
            <summary>
            Point action text
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Tooltip">
            <summary>
            Point action tooltip
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Condition">
            <summary>
            Point condition
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.Type">
            <summary>
            Point type
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.StepRolesSecurity">
            <summary>
            Security settings for roles
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.StepUsersSecurity">
            <summary>
            Security settings for users
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.InheritsUsersSettings">
            <summary>
            Indicates if users settings are inherited
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.InheritsRolesSettings">
            <summary>
            Indicates if roles settings are inherited
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.SourcePoint.InheritsStepSettings">
            <summary>
            Indicates if all step security settings are inherited
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.CaseSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.CaseSourcePoint.#ctor(System.Int32)">
            <summary>
            Constructor ensuring numbered default labels
            </summary>
            <param name="order">Number to be added to label</param>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.ChoiceSourcePoint">
            <summary>
            Class handling initial values for user choice source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ChoiceSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ChoiceSourcePoint.#ctor(System.Int32)">
            <summary>
            Constructor ensuring numbered default labels
            </summary>
            <param name="order">Number to be added to label</param>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.ConditionSourcePoint">
            <summary>
            Class handling initial values for condition source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ConditionSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.TimeoutSourcePoint">
            <summary>
            Class handling initial values for timeout source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.TimeoutSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.ElseSourcePoint">
            <summary>
            Class handling initial values for else source point.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.ElseSourcePoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationActionEnum">
            <summary>
            Automation action enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationActionEnum.Unknown">
            <summary>
            Unknown action.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationActionEnum.MoveToNextStep">
            <summary>
            Object is moved to next step.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationActionEnum.MoveToSpecificStep">
            <summary>
            Object is moved to specific step.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationActionEnum.MoveToPreviousStep">
            <summary>
            Object is moved to previous step.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ProcessInstanceStatusEnum">
            <summary>
            Process instance status enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessInstanceStatusEnum.None">
            <summary>
            There is no process instance
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessInstanceStatusEnum.Running">
            <summary>
            There is at least one running instance
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessInstanceStatusEnum.Finished">
            <summary>
            All process instances are finished
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ProcessStatusEnum">
            <summary>
            Process status enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessStatusEnum.Pending">
            <summary>
            Pending status
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessStatusEnum.Processing">
            <summary>
            Processing status
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessStatusEnum.Finished">
            <summary>
            Finished status
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowEmailTypeEnum">
            <summary>
            Workflow email type enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Approved">
            <summary>
            Template for e-mails sent to editor/moderator when document is approved.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.ReadyForApproval">
            <summary>
            Template for e-mails sent when document is approved.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Rejected">
            <summary>
            Template for e-mails sent when document is rejected.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Published">
            <summary>
            Template for e-mails sent when document is published.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Archived">
            <summary>
            Template for e-mails sent when document is archived.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowEmailTypeEnum.Notification">
            <summary>
            Template for general notification e-mails.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum">
            <summary>
            Process recurrence type enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum.NotSpecified">
            <summary>
            Recurrence type not specified.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum.Recurring">
            <summary>
            The process can be started on the contact anytime.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum.NonRecurring">
            <summary>
            The process can only be started if it hasn't been run on the contact before.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ProcessRecurrenceTypeEnum.NonConcurrentRecurring">
            <summary>
            The process can only be started if the same process is currently not running on the contact. It is either already finished or there is no record of the run.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepSecurityEnum">
            <summary>
            Workflow step security enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepSecurityEnum.Default">
            <summary>
            Default security settings. (for whole step - no one is allowed, for source point - inherit settings from step)
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepSecurityEnum.OnlyAssigned">
            <summary>
            Only assigned are granted with permissions.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepSecurityEnum.AllExceptAssigned">
            <summary>
            All are granted with permissions except assigned.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationStateInfo">
            <summary>
            AutomationStateInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationStateInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationStateInfo.mStateCustomData">
            <summary>
            State custom data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationStateInfo.mStateStepTimeout">
            <summary>
            Workflow state step timeout
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the specified column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
            <returns>Returns true if the operation was successful</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfo.RegisterProperties">
            <summary>
            Registers properties of this object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfo.#ctor">
            <summary>
            Constructor - Creates an empty AutomationStateInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AutomationStateInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateID">
            <summary>
            ID of state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateGUID">
            <summary>
            GUID of state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateStepID">
            <summary>
            Step of the state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateStepTimeout">
            <summary>
            Step timeout date (for steps with timeout).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateObjectID">
            <summary>
            Object under state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateObjectType">
            <summary>
            Type of object under state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateWorkflowID">
            <summary>
            Workflow of the state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateSiteID">
            <summary>
            Site identifier of state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateActionStatus">
            <summary>
            Action status flag.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateStatus">
            <summary>
            Status of the state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateCreated">
            <summary>
            Creation time of the state.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateUserID">
            <summary>
            ID of the user who started automation process.
            </summary>
            <remarks>0 indicates process was started automatically.</remarks>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateLastModified">
            <summary>
            Time of the last modification.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationStateInfo.StateCustomData">
            <summary>
            State custom data.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationStateInfoProvider">
            <summary>
            Class providing AutomationStateInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetStates(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all states matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetStates(System.String,System.String)">
            <summary>
            Returns dataset of all states matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetAutomationStateInfo(System.Int32)">
            <summary>
            Returns state with specified ID.
            </summary>
            <param name="stateId">State ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetAutomationStateInfo(System.Guid)">
            <summary>
            Returns state with specified GUID.
            </summary>
            <param name="stateGuid">State GUID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.SetAutomationStateInfo(CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Sets (updates or inserts) specified state.
            </summary>
            <param name="stateObj">state to be set.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.DeleteAutomationStateInfo(CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Deletes specified state.
            </summary>
            <param name="stateObj">state to be deleted.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.DeleteAutomationStateInfo(System.Int32)">
            <summary>
            Deletes state with specified ID.
            </summary>
            <param name="stateId">state ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.DeleteAutomationStates(System.String,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Deletes automation states associated with specified object.
            </summary>
            <param name="objectType">Object type</param>
            <param name="ids">List of IDs</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetProcessInstanceStatus(CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Gets automation process instance status
            </summary>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.ProcessWebFarmTask(System.String,System.String,System.Byte[])">
            <summary>
            Runs the processing of specific web farm task for current provider
            </summary>
            <param name="actionName">Action name</param>
            <param name="data">Custom task data</param>
            <param name="binary">Binary data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetStatesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all states matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetAutomationStateInfoInternal(System.Int32)">
            <summary>
            Returns state with specified ID.
            </summary>
            <param name="stateId">state ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetAutomationStateInfoInternal(System.Guid)">
            <summary>
            Returns state with specified GUID.
            </summary>
            <param name="stateGuid">State GUID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.SetAutomationStateInfoInternal(CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Sets (updates or inserts) specified state.
            </summary>
            <param name="stateObj">state to be set.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.DeleteAutomationStateInfoInternal(CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Deletes specified state.
            </summary>
            <param name="stateObj">state to be deleted.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.DeleteAutomationStatesInternal(System.String,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Deletes automation states associated with specified object. Also removes scheduled tasks associated to these automation states.
            </summary>
            <param name="objectType">Object type</param>
            <param name="ids">List of IDs</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetProcessInstanceStatusInternal(CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Gets automation process instance status
            </summary>
            <param name="stateObj">State object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.GetStatusKey(System.String,System.Int32,System.Int32)">
            <summary>
            Gets status key
            </summary>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
            <param name="processId">Process ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationStateInfoProvider.RemoveProcessInstanceStatusInternal(CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Removes status from hashtable
            </summary>
            <param name="stateObj">State object</param>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationHistoryInfo">
            <summary>
            AutomationHistoryInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty AutomationHistoryInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new AutomationHistoryInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryID">
            <summary>
            ID of history record.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryStepID">
            <summary>
            Original step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryStepDisplayName">
            <summary>
            Original step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryStepName">
            <summary>
            Original step name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryStepType">
            <summary>
            Original step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryTargetStepID">
            <summary>
            Target step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryTargetStepDisplayName">
            <summary>
            Target step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryTargetStepName">
            <summary>
            Target step name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryTransitionType">
            <summary>
            Type of transition between original step and target step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryWorkflowID">
            <summary>
            Workflow identification.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryApprovedByUserID">
            <summary>
            User that approved the object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryApprovedWhen">
            <summary>
            Date and time of approval.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryComment">
            <summary>
            Comment of approval.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryWasRejected">
            <summary>
            Whether the object was rejected.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryRejected">
            <summary>
            Whether history was rejected.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryTargetStepType">
            <summary>
            Target step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationHistoryInfo.HistoryStateID">
            <summary>
            Process state identification.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationHistoryInfoProvider">
            <summary>
            Class providing AutomationHistoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetAutomationHistories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all automation history records matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetAutomationHistories(System.String,System.String)">
            <summary>
            Returns dataset of all automation history records matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetAutomationHistoryInfo(System.Int32)">
            <summary>
            Returns automation history with specified ID.
            </summary>
            <param name="historyId">Automation history ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetAutomationHistoryInfo(System.String)">
            <summary>
            Returns automation history with specified name.
            </summary>
            <param name="historyName">Automation history name.</param>                
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.SetAutomationHistoryInfo(CMS.WorkflowEngine.AutomationHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified automation history.
            </summary>
            <param name="historyObj">Automation history to be set.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.DeleteAutomationHistoryInfo(CMS.WorkflowEngine.AutomationHistoryInfo)">
            <summary>
            Deletes specified automation history.
            </summary>
            <param name="historyObj">Automation history to be deleted.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.DeleteAutomationHistoryInfo(System.Int32)">
            <summary>
            Deletes automation history with specified ID.
            </summary>
            <param name="historyId">Automation history ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetLastApprovalActionFromStep(System.Int32,System.Int32)">
            <summary>
            Gets last approval action from given step
            </summary>
            <param name="stepId">Step ID</param>
            <param name="stateId">State object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetLastApprovalActionToStep(System.Int32,System.Int32)">
            <summary>
            Gets last approval action to given step
            </summary>
            <param name="stepId">Step ID</param>
            <param name="stateId">State object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetLastApprovalActionFromFirstStep(System.Int32)">
            <summary>
            Gets last approval action from first step
            </summary>
            <param name="stateId">State object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.MarkRejected(System.Int32,System.Int32,System.Int32)">
            <summary>
            Marks automation histories as used when rejecting to specific step.
            </summary>
            <param name="startHistoryId">Start history ID</param>
            <param name="endHistoryId">End history ID</param>
            <param name="stateId">State object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.DeleteObjectsHistories(System.String)">
            <summary>
            Removes histories.
            </summary>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetAutomationHistoriesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all automation history records matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetAutomationHistoryInfoInternal(System.Int32)">
            <summary>
            Returns automation history with specified ID.
            </summary>
            <param name="historyId">Automation history ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetAutomationHistoryInfoInternal(System.String)">
            <summary>
            Returns automation history with specified name.
            </summary>
            <param name="historyName">Automation history name.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.SetAutomationHistoryInfoInternal(CMS.WorkflowEngine.AutomationHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified automation history.
            </summary>
            <param name="historyObj">Automation history to be set.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.DeleteAutomationHistoryInfoInternal(CMS.WorkflowEngine.AutomationHistoryInfo)">
            <summary>
            Deletes specified automation history.
            </summary>
            <param name="historyObj">Automation history to be deleted.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetLastApprovalActionInternal(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets last approval action to/from given step
            </summary>
            <param name="stepId">Step ID</param>
            <param name="stateId">State object ID</param>
            <param name="startStep">Indicates if given step is start step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHistoryInfoProvider.GetLastApprovalActionFromFirstStepInternal(System.Int32)">
            <summary>
            Gets last approval action from first step
            </summary>
            <param name="stateId">State object ID</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTriggerTypeEnum">
            <summary>
            ObjectWorkflowTrigger type enumeration
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTriggerTypeEnum.Creation">
            <summary>
            Object has been created.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTriggerTypeEnum.Change">
            <summary>
            Object has been changed.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationEvents">
            <summary>
            Automation events
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationEvents.MoveToNextStep">
            <summary>
            Fires when the object is moved to next step
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationEvents.MoveToPreviousStep">
            <summary>
            Fires when the object is moved to previous step
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationEvents.Action">
            <summary>
            Fires when an action is executed
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.AutomationEvents.ProcessTrigger">
            <summary>
            Fires when a trigger is processed
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationActionHandler">
            <summary>
            Automation action handler
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationProcessTriggerHandler">
            <summary>
            Automation process trigger handler
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationProcessTriggerHandler.StartEvent(CMS.WorkflowEngine.ObjectWorkflowTriggerInfo,CMS.WorkflowEngine.TriggerOptions)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="triggerInfo">Trigger info object</param>
            <param name="options">Trigger options</param>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationProcessTriggerEventArgs">
            <summary>
            Automation process trigger event arguments
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationProcessTriggerEventArgs.Options">
            <summary>
            Trigger options.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationProcessTriggerEventArgs.TriggerInfo">
            <summary>
            Trigger info object.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationHandler">
            <summary>
            Automation handler
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationHandler.StartEvent(CMS.SettingsProvider.BaseInfo,CMS.WorkflowEngine.AutomationStateInfo)">
            <summary>
            Initiates the event handling
            </summary>
            <param name="infoObj">Object instance</param>
            <param name="stateObj">State object</param>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationEventArgs">
            <summary>
            Automation event arguments
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationEventArgs.InfoObject">
            <summary>
            Edited version of the object
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationEventArgs.StateObject">
            <summary>
            State object
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.AutomationEventArgs.PreviousStep">
            <summary>
            Previous step
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo">
            <summary>
            ObjectWorkflowTriggerInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.UpdateData">
            <summary>
            Updates the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.InsertData">
            <summary>
            Inserts the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.DeleteData(System.Boolean)">
            <summary>
            Deletes the object.
            </summary>
            <param name="logObjectChange">Indicates if the object change should be logged</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.#ctor">
            <summary>
            Constructor - Creates an empty ObjectWorkflowTriggerInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ObjectWorkflowTriggerInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerID">
            <summary>
            Trigger ID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerGUID">
            <summary>
            Trigger GUID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerLastModified">
            <summary>
            Trigger last modified
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerDisplayName">
            <summary>
            Trigger display name
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerSiteID">
            <summary>
            Trigger site ID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerMacroCondition">
            <summary>
            Trigger macro condition
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerWorkflowID">
            <summary>
            Trigger workflow ID
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerObjectType">
            <summary>
            Object type trigger can be applied to.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerTargetObjectType">
            <summary>
            Type of concrete object of trigger.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerTargetObjectID">
            <summary>
            ID of concrete object of trigger.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.ObjectWorkflowTriggerInfo.TriggerParameters">
            <summary>
            Parameters of trigger.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider">
            <summary>
            Class providing ObjectWorkflowTriggerInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.GetObjectWorkflowTriggers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all ObjectWorkflowTriggers matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.GetObjectWorkflowTriggers(System.String,System.String)">
            <summary>
            Returns dataset of all ObjectWorkflowTriggers matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.GetObjectWorkflowTriggerInfo(System.Int32)">
            <summary>
            Returns ObjectWorkflowTrigger with specified ID.
            </summary>
            <param name="ObjectWorkflowTriggerId">ObjectWorkflowTrigger ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.SetObjectWorkflowTriggerInfo(CMS.WorkflowEngine.ObjectWorkflowTriggerInfo)">
            <summary>
            Sets (updates or inserts) specified ObjectWorkflowTrigger.
            </summary>
            <param name="ObjectWorkflowTriggerObj">ObjectWorkflowTrigger to be set.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.DeleteObjectWorkflowTriggerInfo(CMS.WorkflowEngine.ObjectWorkflowTriggerInfo)">
            <summary>
            Deletes specified ObjectWorkflowTrigger.
            </summary>
            <param name="ObjectWorkflowTriggerObj">ObjectWorkflowTrigger to be deleted.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.DeleteObjectWorkflowTriggerInfo(System.Int32)">
            <summary>
            Deletes ObjectWorkflowTrigger with specified ID.
            </summary>
            <param name="ObjectWorkflowTriggerId">ObjectWorkflowTrigger ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.GetObjectWorkflowTriggers(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all ObjectWorkflowTriggers for specified site matching the specified parameters.
            </summary>       
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
            <param name="siteId">Site ID.</param>        		
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.GetObjectWorkflowTriggers(System.Int32)">
            <summary>
            Returns dataset of all ObjectWorkflowTriggers for specified site.
            </summary>
            <param name="siteId">Site ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.DeleteObjectsTriggers(System.String,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Removes triggers associated to selected objects of given type.
            </summary>
            <param name="objectType">Object type</param>
            <param name="ids">List of IDs</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.GetObjectWorkflowTriggersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all ObjectWorkflowTriggers matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.GetObjectWorkflowTriggerInfoInternal(System.Int32)">
            <summary>
            Returns ObjectWorkflowTrigger with specified ID.
            </summary>
            <param name="ObjectWorkflowTriggerId">ObjectWorkflowTrigger ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.SetObjectWorkflowTriggerInfoInternal(CMS.WorkflowEngine.ObjectWorkflowTriggerInfo)">
            <summary>
            Sets (updates or inserts) specified ObjectWorkflowTrigger.
            </summary>
            <param name="ObjectWorkflowTriggerObj">ObjectWorkflowTrigger to be set.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.DeleteObjectWorkflowTriggerInfoInternal(CMS.WorkflowEngine.ObjectWorkflowTriggerInfo)">
            <summary>
            Deletes specified ObjectWorkflowTrigger.
            </summary>
            <param name="ObjectWorkflowTriggerObj">ObjectWorkflowTrigger to be deleted.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.GetObjectWorkflowTriggersInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Returns dataset of all ObjectWorkflowTriggers for specified site matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
            <param name="siteId">Site ID.</param> 
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.Clear(System.String,System.Boolean)">
            <summary>
            Clears hash tables.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.ObjectWorkflowTriggerInfoProvider.ProcessWebFarmTask(System.String,System.String,System.Byte[])">
            <summary>
            Runs the processing of specific web farm task for current provider.
            </summary>
            <param name="actionName">Action name</param>
            <param name="data">Custom data</param>
            <param name="binary">Binary data</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionInfo">
            <summary>
            WorkflowActionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionInfo.TYPEINFO_AUTOMATION">
            <summary>
            Type information for automation action.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowActionInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowActionInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionID">
            <summary>
            ID of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionGUID">
            <summary>
            Action GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionParameters">
            <summary>
            Parameters of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionClass">
            <summary>
            Class name of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionName">
            <summary>
            Code name of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionDisplayName">
            <summary>
            Display name of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionResourceID">
            <summary>
            Resource of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionDescription">
            <summary>
            Action description.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionAssemblyName">
            <summary>
            Assembly name of action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionThumbnailGUID">
            <summary>
            Thumbnail GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionIconGUID">
            <summary>
            Toolbar icon GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionEnabled">
            <summary>
            Indicates if action is enabled.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionAllowedObjects">
            <summary>
            Gets or sets the workflow action allowed objects.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ActionWorkflowType">
            <summary>
            Type of the workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowActionInfo.ObjectFullName">
            <summary>
            Object full name if defined
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionInfoProvider">
            <summary>
            Class providing WorkflowActionInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetAllWorkflowActions">
            <summary>
            Returns DataSet with all workflows.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActions(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all workflow actions matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActions(System.String,System.String)">
            <summary>
            Returns dataset of all workflow actions matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfo(System.Int32)">
            <summary>
            Returns workflow action with specified ID.
            </summary>
            <param name="actionId">Workflow action ID</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfo(System.String,CMS.WorkflowEngine.WorkflowTypeEnum)">
            <summary>
            Returns workflow action with specified name.
            </summary>
            <param name="actionName">Workflow action name</param>
            <param name="type">Workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfo(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.SetWorkflowActionInfo(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Sets (updates or inserts) specified workflow action.
            </summary>
            <param name="actionObj">Workflow action to be set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.DeleteWorkflowActionInfo(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Deletes specified workflow action.
            </summary>
            <param name="actionObj">Workflow action to be deleted</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.DeleteWorkflowActionInfo(System.Int32)">
            <summary>
            Deletes workflow action with specified ID.
            </summary>
            <param name="actionId">Workflow action ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.CheckDependencies(System.Int32,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check dependencies, return true if is depend.
            </summary>
            <param name="workflowActionId">Workflow action ID</param>
            <param name="stepNames">List of step names which use given workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActions(System.String,System.String,System.String)">
            <summary>
            Returns dataset of all workflow actions matching the specified parameters. 
            </summary>
            <param name="where">Where condition</param>  
            <param name="orderBy">Order by expression</param>
            <param name="columns">Columns to be selected</param>
            <returns>Data set with actions</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hash tables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all workflow actions matching the specified parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by expression</param>
            <param name="topN">Number of records to be selected</param>        
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfoInternal(System.Int32)">
            <summary>
            Returns workflow action with specified ID.
            </summary>
            <param name="actionId">Workflow action ID</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfoInternal(System.String,CMS.WorkflowEngine.WorkflowTypeEnum)">
            <summary>
            Returns workflow action with specified name.
            </summary>
            <param name="actionName">Workflow action name</param>
            <param name="type">Workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetWorkflowActionInfoInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.SetWorkflowActionInfoInternal(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Sets (updates or inserts) specified workflow action.
            </summary>
            <param name="actionObj">Workflow action to be set</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.DeleteWorkflowActionInfoInternal(CMS.WorkflowEngine.WorkflowActionInfo)">
            <summary>
            Deletes specified workflow action.
            </summary>
            <param name="actionObj">Workflow action to be deleted</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetFullNameDictionary">
            <summary>
            Creates new dictionary for caching the objects by full name
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowActionInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the object based on the given full name
            </summary>
            <param name="fullName">Object full name</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowUserInfo">
            <summary>
            WorkflowUserInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowUserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowUserInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowUserInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowUserInfo.WorkflowID">
            <summary>
            Workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowUserInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowUserInfoProvider">
            <summary>
            Class providing WorkflowUserInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.GetWorkflowUserInfo(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowUserInfo structure for the specified workflowUser.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.SetWorkflowUserInfo(CMS.WorkflowEngine.WorkflowUserInfo)">
            <summary>
            Sets (updates or inserts) specified workflowUser.
            </summary>
            <param name="workflowUser">WorkflowUser to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.RemoveUserFromWorkflow(System.Int32,System.Int32)">
            <summary>
            Deletes specified workflowUser.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.AddUserToWorkflow(System.Int32,System.Int32)">
            <summary>
            Adds specified user to the workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.DeleteWorkflowUserInfo(CMS.WorkflowEngine.WorkflowUserInfo)">
            <summary>
            Deletes specified workflowUser.
            </summary>
            <param name="workflowUser">WorkflowUser object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.GetWorkflowUsers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns workflow users.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
            <param name="topN">Number of items that should be returned (all if 0)</param>
            <param name="columns">Column names</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.GetWorkflowUserInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowUserInfo structure for the specified workflowUser.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.GetWorkflowUsersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns workflow users.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Number of items that should be returned (all if 0)</param>
            <param name="columns">Column names</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.SetWorkflowUserInfoInternal(CMS.WorkflowEngine.WorkflowUserInfo)">
            <summary>
            Sets (updates or inserts) specified workflowUser.
            </summary>
            <param name="workflowUser">WorkflowUser to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowUserInfoProvider.DeleteWorkflowUserInfoInternal(CMS.WorkflowEngine.WorkflowUserInfo)">
            <summary>
            Deletes specified workflowUser.
            </summary>
            <param name="workflowUser">WorkflowUser object</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepUserInfo">
            <summary>
            WorkflowStepUserInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepUserInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.GetExisting">
            <summary>
            Gets existing object
            </summary>
            <returns>Existing workflow step user object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowStepUserInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowStepUserInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepUserInfo.WorkflowStepUserID">
            <summary>
            WorkflowStepUser ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepUserInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepUserInfo.UserID">
            <summary>
            User ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepUserInfo.StepSourcePointGUID">
            <summary>
            Step source point GUID.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepUserInfoProvider">
            <summary>
            Class providing WorkflowStepUserInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUserInfo(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowStepUserInfo structure for the specified workflowStepUser.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUserInfo(System.Int32,System.Int32,System.Guid)">
            <summary>
            Returns the WorkflowStepUserInfo structure for the specified workflow step, user and source point GUID.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.SetWorkflowStepUserInfo(CMS.WorkflowEngine.WorkflowStepUserInfo)">
            <summary>
            Sets (updates or inserts) specified workflowStepUser.
            </summary>
            <param name="workflowStepUser">WorkflowStepUser to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.RemoveUserFromWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Deletes specified workflowStepUser.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.RemoveUserFromWorkflowStep(System.Int32,System.Int32,System.Guid)">
            <summary>
            Removes user from workflow step source point.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.AddUserToWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Adds specified user to the workflow step.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.AddUserToWorkflowStep(System.Int32,System.Int32,System.Guid)">
            <summary>
            Adds specified user to the workflow step source point.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.DeleteWorkflowStepUserInfo(CMS.WorkflowEngine.WorkflowStepUserInfo)">
            <summary>
            Deletes specified workflowStepUser.
            </summary>
            <param name="workflowStepUser">WorkflowStepUser object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUsers(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns workflow step users.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
            <param name="topN">Number of items that should be returned (all if 0)</param>
            <param name="columns">Column names</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUserInfoInternal(System.Int32,System.Int32,System.Guid)">
            <summary>
            Returns the WorkflowStepUserInfo structure for the specified workflowStepUser.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="userId">User ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.GetWorkflowStepUsersInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns workflow step users.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Number of items that should be returned (all if 0)</param>
            <param name="columns">Column names</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.SetWorkflowStepUserInfoInternal(CMS.WorkflowEngine.WorkflowStepUserInfo)">
            <summary>
            Sets (updates or inserts) specified workflowStepUser.
            </summary>
            <param name="workflowStepUser">WorkflowStepUser to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepUserInfoProvider.DeleteWorkflowStepUserInfoInternal(CMS.WorkflowEngine.WorkflowStepUserInfo)">
            <summary>
            Deletes specified workflowStepUser.
            </summary>
            <param name="workflowStepUser">WorkflowStepUser object</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowEmailSettings">
            <summary>
            Class for workflow e-mail sending settings.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowEmailSettings.#ctor(CMS.SiteProvider.UserInfo)">
            <summary>
            Constructor
            </summary>
            <param name="user">User</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Resolver">
            <summary>
            Macro resolver to use for resolving macros in e-mail
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Recipients">
            <summary>
            List of e-mail recipients
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.User">
            <summary>
            Target workflow step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.EmailTemplateName">
            <summary>
            E-mail template name to use
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Subject">
            <summary>
            Subject with higher priority then subject from template
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Body">
            <summary>
            Body with higher priority then body from template
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.Sender">
            <summary>
            Sender with higher priority then sender from template
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.SiteName">
            <summary>
            Site name
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowEmailSettings.LogEvents">
            <summary>
            Indicates if errors should be logged to event log
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTransitionTypeEnum">
            <summary>
            Workflow transition type enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTransitionTypeEnum.Manual">
            <summary>
            Manual transition.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTransitionTypeEnum.Automatic">
            <summary>
            Automatic transition.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTransitionInfo">
            <summary>
            WorkflowTransitionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTransitionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowTransitionInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowTransitionInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data.</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionID">
            <summary>
            Transition ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionStartStepID">
            <summary>
            Start step of the transition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionEndStepID">
            <summary>
            End step of the transition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionType">
            <summary>
            Transition GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionLastModified">
            <summary>
            Transition time stamp.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionSourcePointGUID">
            <summary>
            Transition source point GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionWorkflowID">
            <summary>
            Transition workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowTransitionInfo.TransitionSourcePoint">
            <summary>
            Start point definition of the transition (dynamically loaded)
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTransitionInfoProvider">
            <summary>
            Class providing WorkflowTransitionInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitions(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all workflow transitions matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitions(System.Int32)">
            <summary>
            Returns the Dataset of workflow transitions.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitions(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of workflow transitions for given workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitions(System.String,System.String)">
            <summary>
            Returns dataset of all workflow transitions matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitionInfo(System.Int32)">
            <summary>
            Returns workflow transition with specified ID.
            </summary>
            <param name="transitionId">Workflow transition ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitionInfo(System.Guid)">
            <summary>
            Returns workflow transition with specified GUID.
            </summary>
            <param name="transitionGuid">Workflow transition GUID.</param>                
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.SetWorkflowTransitionInfo(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Sets (updates or inserts) specified workflow transition.
            </summary>
            <param name="transitionObj">Workflow transition to be set.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.DeleteWorkflowTransitionInfo(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Deletes specified workflow transition.
            </summary>
            <param name="transitionObj">Workflow transition to be deleted.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.DeleteWorkflowTransitionInfo(System.Int32)">
            <summary>
            Deletes workflow transition with specified ID.
            </summary>
            <param name="transitionId">Workflow transition ID.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.Clear(System.Boolean)">
            <summary>
            Clears hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetStepTransitions(CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Gets workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitionsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns dataset of all workflow transitions matching the specified parameters.
            </summary>
            <param name="where">Where condition.</param>
            <param name="orderBy">Order by expression.</param>
            <param name="topN">Number of records to be selected.</param>        
            <param name="columns">Columns to be selected.</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitionInfoInternal(System.Int32)">
            <summary>
            Returns workflow transition with specified ID.
            </summary>
            <param name="transitionId">Workflow transition ID.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetWorkflowTransitionInfoInternal(System.Guid)">
            <summary>
            Returns workflow transition with specified GUID.
            </summary>
            <param name="transitionGuid">Workflow transition GUID.</param>                                 
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.SetWorkflowTransitionInfoInternal(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Sets (updates or inserts) specified workflow transition.
            </summary>
            <param name="transitionObj">Workflow transition to be set.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.DeleteWorkflowTransitionInfoInternal(CMS.WorkflowEngine.WorkflowTransitionInfo)">
            <summary>
            Deletes specified workflow transition.
            </summary>
            <param name="transitionObj">Workflow transition to be deleted.</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowTransitionInfoProvider.GetStepTransitionsInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.String)">
            <summary>
            Gets workflow step transitions
            </summary>
            <param name="step">Workflow step</param>
            <param name="where">Where condition</param>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHistoryListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowHistoryListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowHistoryListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowScopeListInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowScopeListInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowScopeListInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeListInfo.GetData(CMS.SettingsProvider.QueryDataParameters,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns the data according to the set of input parameters.
            </summary>
            <param name="parameters">Query parameters</param>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
            <param name="binaryData">If true, binary data are returned in the result (not applied)</param>
            <param name="offset">Index of first record to get</param>
            <param name="maxRecords">Maximum number of records to get. If maxRecords is zero or less, all records are returned (no paging is used)</param>
            <param name="totalRecords">Returns total number of available records</param>       
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHelper">
            <summary>
            Class for workflow helper methods.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHelper.MAX_STEP_HOPS">
            <summary>
            Maximum number of allowed step hops (to prevent endless cycles)
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHelper.ACTION_SATUS_RUNNING">
            <summary>
            Action status - running action
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetResolverName(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Gets macro resolver name for given workflow
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowEmailsSender(System.String)">
            <summary>
            Gets workflow e-mails default sender from settings
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.SendWorkflowEmails(System.String)">
            <summary>
            Gets settings indicating if workflow e-mails should be sent
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetScheduledTaskName(System.Guid)">
            <summary>
            Gets scheduled task name for given object and step
            </summary>
            <param name="stateGuid">State GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.CreateSourcePoint(CMS.SettingsProvider.WorkflowStepTypeEnum)">
            <summary>
            Creates source point with respect to workflow step type.
            </summary>
            <param name="stepType">Workflow step type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowTypeString(CMS.WorkflowEngine.WorkflowTypeEnum,System.Boolean)">
            <summary>
            Gets workflow type string representation
            </summary>
            <param name="type">Workflow type</param>
            <param name="versioning">Indicates if workflow automatically publishes changes</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowActionString(CMS.WorkflowEngine.WorkflowActionEnum)">
            <summary>
            Gets workflow action string representation
            </summary>
            <param name="action">Workflow action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetAutomationActionString(CMS.WorkflowEngine.AutomationActionEnum)">
            <summary>
            Gets automation action string representation
            </summary>
            <param name="action">Automation action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowRecurrenceTypeString(CMS.WorkflowEngine.ProcessRecurrenceTypeEnum)">
            <summary>
            Gets workflow recurrence type string representation
            </summary>
            <param name="recurrenceType">Workflow recurrence type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetWorkflowTriggerTypeString(CMS.WorkflowEngine.WorkflowTriggerTypeEnum)">
            <summary>
            Gets workflow trigger type string representation.
            </summary>
            <param name="triggerType">Workflow trigger type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetDefaultEmailTemplateName(CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Gets default e-mail template name.
            </summary>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHelper.GetProcessStatusString(CMS.WorkflowEngine.ProcessStatusEnum)">
            <summary>
            Gets process status string representation.
            </summary>
            <param name="processStatus">Process status</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHelper.MaxStepsHopsCount">
            <summary>
            Maximum number of allowed step hops (to prevent endless cycles)
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowModule">
            <summary>
            Module registration.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.#ctor(CMS.SettingsProvider.ModuleInfo)">
            <summary>
            Constructor.
            </summary>
            <param name="info">Module info</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.RegisterObjectTypes">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.RegisterCommands">
            <summary>
            Registers the object type of this module
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowModule.DeleteTriggers(System.Object[])">
            <summary>
            Delete triggers
            </summary>
            <param name="parameters">Parameters array</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowTypeEnum">
            <summary>
            Workflow type enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTypeEnum.Basic">
            <summary>
            Basic approval workflow for documents.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTypeEnum.Approval">
            <summary>
            Advanced approval workflow.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTypeEnum.Advanced">
            <summary>
            General advanced workflow.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowTypeEnum.Automation">
            <summary>
            Automation workflow.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHistoryInfo">
            <summary>
            Class to hold the workflow history record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowHistoryInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.WorkflowHistoryID">
            <summary>
            Workflow history ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.VersionHistoryID">
            <summary>
            Version history ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepDisplayName">
            <summary>
            Step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepName">
            <summary>
            Step name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.StepType">
            <summary>
            Step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.TargetStepID">
            <summary>
            Target step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.TargetStepDisplayName">
            <summary>
            Target step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.TargetStepName">
            <summary>
            Target step name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.TargetStepType">
            <summary>
            Target step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryWorkflowID">
            <summary>
            History workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.ApprovedByUserID">
            <summary>
            Approved by user ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.ApprovedWhen">
            <summary>
            Approved when.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.Comment">
            <summary>
            Comment.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.WasRejected">
            <summary>
            Was rejected. Specifies direction of the movement. True if the log is for reject action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryRejected">
            <summary>
            Indicates if the history was used when moved to previous step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryObjectType">
            <summary>
            Object type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryObjectID">
            <summary>
            ID of the related object.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowHistoryInfo.HistoryTransitionType">
            <summary>
            Type of the transition.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowActionEnum">
            <summary>
            Workflow action enumeration.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Unknown">
            <summary>
            Unknown action.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Approve">
            <summary>
            The document is approved - send e-mail to the users that are approve within next step and to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Reject">
            <summary>
            Document is rejected - send e-mail to the user that reject the document and to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Publish">
            <summary>
            The document is published - send e-mail to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.Archive">
            <summary>
            The document is archived - send e-mail to the document editor.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowActionEnum.MoveToSpecificStep">
            <summary>
            The document is moved to specific step.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowHistoryInfoProvider">
            <summary>
            Class providing WorkflowHistoryInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetWorkflowHistoryInfo(System.Int32)">
            <summary>
            Returns the WorkflowHistoryInfo structure for the specified workflowHistory.
            </summary>
            <param name="workflowHistoryId">WorkflowHistory ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.SetWorkflowHistoryInfo(CMS.WorkflowEngine.WorkflowHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified workflowHistory.
            </summary>
            <param name="workflowHistory">WorkflowHistory to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.DeleteWorkflowHistoryInfo(CMS.WorkflowEngine.WorkflowHistoryInfo)">
            <summary>
            Deletes specified workflowHistory.
            </summary>
            <param name="workflowHistory">WorkflowHistory object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetWorkflowHistories(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow histories.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetLastApprovalActionFromStep(System.Int32,System.String,System.Int32)">
            <summary>
            Gets last approval action from given step
            </summary>
            <param name="stepId">Step ID</param>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetLastApprovalActionToStep(System.Int32,System.String,System.Int32)">
            <summary>
            Gets last approval action to given step
            </summary>
            <param name="stepId">Step ID</param>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetLastApprovalActionFromFirstStep(System.String,System.Int32)">
            <summary>
            Gets last approval action from first step
            </summary>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.ChangeDocumentIDs(System.Int32,System.Int32)">
            <summary>
            Changes document ID for workflow histories
            </summary>
            <param name="originalDocumentId">Original document ID</param>
            <param name="newDocumentId">New document ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.MarkRejected(System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Marks workflow histories as used when rejecting to specific step.
            </summary>
            <param name="startHistoryId">Start history ID</param>
            <param name="endHistoryId">End history ID</param>
            <param name="workflowId">Workflow ID</param>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetWorkflowHistoryInfoInternal(System.Int32)">
            <summary>
            Returns the WorkflowHistoryInfo structure for the specified workflowHistory.
            </summary>
            <param name="workflowHistoryId">WorkflowHistory ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.SetWorkflowHistoryInfoInternal(CMS.WorkflowEngine.WorkflowHistoryInfo)">
            <summary>
            Sets (updates or inserts) specified workflowHistory.
            </summary>
            <param name="workflowHistory">WorkflowHistory to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.DeleteWorkflowHistoryInfoInternal(CMS.WorkflowEngine.WorkflowHistoryInfo)">
            <summary>
            Deletes specified workflowHistory.
            </summary>
            <param name="workflowHistory">WorkflowHistory object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetWorkflowHistoriesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow histories.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetLastApprovalActionInternal(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Gets last approval action to/from given step
            </summary>
            <param name="stepId">Step ID</param>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
            <param name="startStep">Indicates if given step is start step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowHistoryInfoProvider.GetLastApprovalActionFromFirstStepInternal(System.String,System.Int32)">
            <summary>
            Gets last approval action from first step
            </summary>
            <param name="objectType">Object type</param>
            <param name="objectId">Object ID</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowInfo">
            <summary>
            Class to hold the workflow record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowInfo.TYPEINFO_PROCESS">
            <summary>
            Type information for automation process.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.InsertAsCloneInternal(CMS.SettingsProvider.CloneSettings,CMS.SettingsProvider.CloneResult,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.CheckPermissions(CMS.SettingsProvider.PermissionsEnum,System.String,CMS.SettingsProvider.IUserInfo,System.Boolean)">
            <summary>
            Checks the permissions of the object.
            </summary>
            <param name="permission">Permission type</param>
            <param name="siteName">Name of the site</param>
            <param name="userInfo">UserInfo object</param>
            <param name="exceptionOnFailure">If true, PermissionCheckException is thrown whenever a permission check fails</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow info data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.InsertAsClonePostprocessing(CMS.SettingsProvider.CloneSettings,CMS.SettingsProvider.CloneResult,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Clones workflow transitions objects (has to be done after the whole process because it needs the steps already created).
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Result of the cloning - messages in this object will be altered by processing this method</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.UseCheckInCheckOut(System.String)">
            <summary>
            Indicates if current workflow uses check-in/check-out functionality
            </summary>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.SendEmails(System.String,CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Indicates if notification e-mails should be sent for current workflow
            </summary>
            <param name="siteName">Site name</param>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfo.GetEmailTemplateName(CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Gets e-mail template to be used.
            </summary>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowName">
            <summary>
            Workflow code name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowDisplayName">
            <summary>
            Workflow display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowID">
            <summary>
            Workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowGUID">
            <summary>
            Workflow GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowAutoPublishChanges">
            <summary>
            Indicates if this workflow will automatically publish changes.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowUseCheckinCheckout">
            <summary>
            Indicates if this workflow will use check-in/check-out functionality
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowType">
            <summary>
            Type of the workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendEmails">
            <summary>
            Indicates if notification e-mails should be sent
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowApprovedTemplateName">
            <summary>
            E-mail template name for approve action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowReadyForApprovalTemplateName">
            <summary>
            E-mail template name for ready to approval action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowRejectedTemplateName">
            <summary>
            E-mail template name for reject action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowPublishedTemplateName">
            <summary>
            E-mail template name for document publish action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowArchivedTemplateName">
            <summary>
            E-mail template name for document archive action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowNotificationTemplateName">
            <summary>
            E-mail template name for general notification
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendApproveEmails">
            <summary>
            Indicates if e-mails should be sent for approve action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendReadyForApprovalEmails">
            <summary>
            Indicates if e-mails should be sent for ready to approval action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendRejectEmails">
            <summary>
            Indicates if e-mails should be sent for reject action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendPublishEmails">
            <summary>
            Indicates if e-mails should be sent for document publish action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowSendArchiveEmails">
            <summary>
            Indicates if e-mails should be sent for document archive action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowAllowedObjects">
            <summary>
            Gets or sets the workflow allowed objects.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.WorkflowRecurrenceType">
            <summary>
            Gets or sets the recurring type of workflow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.ObjectFullName">
            <summary>
            Object full name if defined
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsDocumentWorkflow">
            <summary>
            Indicates if workflow is document approval workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsBasic">
            <summary>
            Indicates if workflow is basic workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsApproval">
            <summary>
            Indicates if workflow is approval workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsAdvanced">
            <summary>
            Indicates if workflow is advanced workflow
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowInfo.IsAutomation">
            <summary>
            Indicates if workflow is automation workflow
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowInfoProvider">
            <summary>
            Class to provide the workflow info management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.SetWorkflowInfo(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Sets the specified workflow data.
            </summary>
            <param name="infoObj">Workflow data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfo(System.String)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow name. (Except the automation processes.)
            </summary>
            <param name="workflowName">Workflow name to use for retrieving the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfo(System.String,CMS.WorkflowEngine.WorkflowTypeEnum)">
            <summary>
            Returns the WorkflowInfo structure of specified type for the specified workflow name.
            </summary>
            <param name="workflowName">Workflow name to use for retrieving the data</param>
            <param name="type">Workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfo(System.Int32)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow ID.
            </summary>
            <param name="workflowId">ID of the workflow to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteWorkflowInfo(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Deletes the specified workflow.
            </summary>
            <param name="wi">Workflow object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteWorkflowInfo(System.Int32)">
            <summary>
            Deletes the specified workflow.
            </summary>
            <param name="workflowId">Workflow ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetAllWorkflows">
            <summary>
            Returns DataSet with all workflows.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.RemoveFromHash(System.String)">
            <summary>
            Remove from hash table.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.CheckDependencies(System.Int32)">
            <summary>
            Check dependencies, return true if is depend.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.CheckDependencies(System.Int32,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check dependencies, return true if is depend.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="documentNames">List of document names which use given workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.CheckProcessDependencies(System.Int32)">
            <summary>
            Check automation process dependencies, return true if is depend.
            </summary>
            <param name="processId">Process ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflows(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflows.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.IsCustomStepAllowed">
            <summary>
            Determines whether custom workflow steps are allowed by license for current domain.
            </summary>
            <returns>
            	<c>true</c> if custom steps are allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.IsAdvancedWorkflowAllowed">
            <summary>
            Determines whether advanced workflow is available in license for current domain.
            </summary>
            <returns>
            	<c>true</c> if advanced workflow is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.IsMarketingAutomationAllowed">
            <summary>
            Determines whether marketing automation is available in license for current domain.
            </summary>
            <returns>
            	<c>true</c> if marketing automation is allowed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.ConvertToAdvancedWorkflow(System.Int32)">
            <summary>
            Converts basic workflow to advanced workflow.
            </summary>
            <param name="workflowId">workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.SetWorkflowInfoInternal(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Sets the specified workflow data.
            </summary>
            <param name="infoObj">Workflow data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoInternal(System.String,CMS.WorkflowEngine.WorkflowTypeEnum)">
            <summary>
            Returns the WorkflowInfo structure of specified type for the specified workflow name.
            </summary>
            <param name="workflowName">Workflow name to use for retrieving the data</param>
            <param name="type">Workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoInternal(System.Int32)">
            <summary>
            Returns the WorkflowInfo structure for the specified workflow ID.
            </summary>
            <param name="workflowId">ID of the workflow to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowInfoInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.DeleteWorkflowInfoInternal(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Deletes the specified workflow.
            </summary>
            <param name="wi">Workflow object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetWorkflowsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflows.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.ConvertToAdvancedWorkflowInternal(System.Int32)">
            <summary>
            Converts basic workflow to advanced workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetFullNameDictionary">
            <summary>
            Creates new dictionary for caching the objects by full name
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the object based on the given full name
            </summary>
            <param name="fullName">Object full name</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowObjectType">
            <summary>
            Workflow object types.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOW">
            <summary>
            Code name for workflows.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSCOPE">
            <summary>
            Code name for workflow scope.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.OBJECTWORKFLOWTRIGGER">
            <summary>
            Code name for object workflow trigger.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSCOPELIST">
            <summary>
            Code name for workflow scope list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSTEP">
            <summary>
            Code name for workflow step.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWTRANSITION">
            <summary>
            Code name for workflow transition.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWHISTORY">
            <summary>
            Code name for workflow history.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.AUTOMATIONHISTORY">
            <summary>
            Code name for automation history.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.AUTOMATIONHISTORYLIST">
            <summary>
            Code name for automation history list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWHISTORYLIST">
            <summary>
            Code name for workflow history list.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWACTION">
            <summary>
            Code name for automation action.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSTEPROLE">
            <summary>
            Workflow step role binding.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWSTEPUSER">
            <summary>
            Workflow step user binding.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.WORKFLOWUSER">
            <summary>
            Workflow user binding
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.AUTOMATIONSTATE">
            <summary>
            Code name for workflow user binding
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.AUTOMATIONPROCESS">
            <summary>
            Code name for automation process.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.AUTOMATIONACTION">
            <summary>
            Code name for automation action.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowObjectType.AUTOMATIONSTEP">
            <summary>
            Code name for automation step.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowScopeInfo">
            <summary>
            Class to hold the workflow scope data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowScopeInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.UpdateData">
            <summary>
            Updates the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.InsertData">
            <summary>
            Inserts the object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.DeleteData(System.Boolean)">
            <summary>
            Deletes the object.
            </summary>
            <param name="logObjectChange">Indicates if the object change should be logged</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.InsertAsCloneInternal(CMS.SettingsProvider.CloneSettings,CMS.SettingsProvider.CloneResult,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowScopeInfo structure.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates the WorkflowScopeInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the workflow scope info data</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeMacroCondition">
            <summary>
            Scope macro condition.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeStartingPath">
            <summary>
            Scope starting path - The scope applies to the starting path subtree.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeID">
            <summary>
            Scope ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeClassID">
            <summary>
            Scope class ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeWorkflowID">
            <summary>
            Scope workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeSiteID">
            <summary>
            Scope site ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeGUID">
            <summary>
            Scope step GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeCultureID">
            <summary>
            Scope culture ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeExcludeChildren">
            <summary>
            Indicates if child nodes should be excluded from scope.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowScopeInfo.ScopeExcluded">
            <summary>
            Indicates if the scope is used to exclude the workflow.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowScopeInfoProvider">
            <summary>
            Workflow scope info provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfoByGUID(System.Guid,System.Int32)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.SetWorkflowScopeInfo(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Sets the specified workflow scope data.
            </summary>
            <param name="infoObj">Workflow scope data object</param>
            <exception cref="T:System.Exception">Throws exception if license limitation are not fulfilled</exception>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfo(System.Int32)">
            <summary>
            Returns the WorkflowScopeInfo structure for the specified workflow scope ID.
            </summary>
            <param name="scopeId">ID of the workflow scope to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopeInfo(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Deletes the specified workflow scope.
            </summary>
            <param name="wsi">Workflow scope object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopeInfo(System.Int32)">
            <summary>
            Deletes the specified workflow scope.
            </summary>
            <param name="scopeId">Workflow scope ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopes(System.Int32)">
            <summary>
            Returns the Dataset of all workflow steps for the given workflow.
            </summary>        
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopes(System.String)">
            <summary>
            Returns the Dataset of all workflow steps.
            </summary>        
            <param name="where">Where condition</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopes(System.Int32)">
            <summary>
            Deletes the scopes of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopes(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow scopes.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.LicenseVersionCheck(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Checks if domain has license supporting workflow feature.
            </summary>
            <param name="wfsi">Scope info to check</param>        
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfoInternal(System.Guid,System.Int32)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.SetWorkflowScopeInfoInternal(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Sets the specified workflow scope data.
            </summary>
            <param name="infoObj">Workflow scope data object</param>
            <exception cref="T:System.Exception">Throws exception if license limitation are not fulfilled</exception>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopeInfoInternal(System.Int32)">
            <summary>
            Returns the WorkflowScopeInfo structure for the specified workflow scope ID.
            </summary>
            <param name="scopeId">ID of the workflow scope to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopeInfoInternal(CMS.WorkflowEngine.WorkflowScopeInfo)">
            <summary>
            Deletes the specified workflow scope.
            </summary>
            <param name="wsi">Workflow scope object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.DeleteWorkflowScopesInternal(System.Int32)">
            <summary>
            Deletes the scopes of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowScopeInfoProvider.GetWorkflowScopesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow scopes.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepInfo">
            <summary>
            Class to hold the workflow step record data.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepInfo.TYPEINFO_AUTOMATION">
            <summary>
            Type information for automation step.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.InsertAsClonePostprocessing(CMS.SettingsProvider.CloneSettings,CMS.SettingsProvider.CloneResult,CMS.SettingsProvider.BaseInfo)">
            <summary>
            Clones workflow transitions objects (has to be done after the whole process because it needs the steps already created).
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Result of the cloning - messages in this object will be altered by processing this method</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowStepInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowStepInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the data</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.#ctor(CMS.WorkflowEngine.WorkflowStepInfo,System.Boolean)">
            <summary>
            Constructor - Creates a new WorkflowStepInfo object from the given DataClass.
            </summary>
            <param name="si">Source site info</param>
            <param name="keepSourceData">If true, source data are kept</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.TryGetValue(System.String,System.Object@)">
            <summary>
            Returns value of column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Returns the value</param>
            <returns>Returns true if the operation was successful (the value was present)</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the specified node column.
            </summary>
            <param name="columnName">Column name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.SendEmails(System.String,CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Indicates if notification e-mails should be sent when moving to this step
            </summary>
            <param name="siteName">Site name</param>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.GetEmailTemplateName(CMS.WorkflowEngine.WorkflowEmailTypeEnum)">
            <summary>
            Gets e-mail template to be used.
            </summary>
            <param name="emailType">Type of workflow e-mail</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.GetStepConnectionType(System.Guid)">
            <summary>
            Returns default transition type for transitions starting in this step.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.ConnectTo(System.Guid,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Connects step with target step.
            </summary>
            <param name="sourcePoint">Start step source point</param>
            <param name="targetStep">Target step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.EnsureDefaultDefinition">
            <summary>
            Ensures default step definition
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.GetSourcePoint(System.Guid)">
            <summary>
            Gets source point
            </summary>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.AddSourcePoint">
            <summary>
            Adds source point with default definition.
            </summary>
            <returns>Potential error message</returns>
            <remarks>Throws exception if database operation fails.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.AddSourcePoint(CMS.WorkflowEngine.Definitions.SourcePoint)">
            <summary>
            Adds source point.
            </summary>
            <param name="sourcePoint">Source point to be added</param>
            <returns>Potential error message</returns>
            <remarks>Throws exception if database operation fails.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.RemoveSourcePoint(System.Guid)">
            <summary>
            Removes specified source point.
            </summary>
            <param name="sourcePointGuid">Source point GUID</param>
            <returns>Potential error message</returns>
            <remarks>Throws exception if database operation fails.</remarks>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.MoveSourcePointUp(System.Guid)">
            <summary>
            Moves source point up.
            </summary>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfo.MoveSourcePointDown(System.Guid)">
            <summary>
            Moves source point down.
            </summary>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepName">
            <summary>
            Step code name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepDisplayName">
            <summary>
            Step display name.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepWorkflowID">
            <summary>
            Step workflow ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepWorkflowType">
            <summary>
            Step workflow type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepActionID">
            <summary>
            Step action ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepActionParameters">
            <summary>
            Step action parameters.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepOrder">
            <summary>
            Step order index.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepGUID">
            <summary>
            Step GUID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepLastModified">
            <summary>
            Step last modified.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepType">
            <summary>
            Step type.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowReject">
            <summary>
            Indicates if step allows reject action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowPublish">
            <summary>
            Indicates if step allows direct publish action.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepRolesSecurity">
            <summary>
            Security settings for roles
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepUsersSecurity">
            <summary>
            Security settings for users
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepReadyForApprovalTemplateName">
            <summary>
            E-mail template name for ready to approval action when moving to this step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepApprovedTemplateName">
            <summary>
            E-mail template name for approve action when moving to this step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepRejectedTemplateName">
            <summary>
            E-mail template name for reject action when moving from this step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepSendEmails">
            <summary>
            Indicates if notification e-mails should be sent when moving to this step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepSendApproveEmails">
            <summary>
            Indicates if e-mails should be sent for approve action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepSendReadyForApprovalEmails">
            <summary>
            Indicates if e-mails should be sent for ready to approval action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepSendRejectEmails">
            <summary>
            Indicates if e-mails should be sent for reject action
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.RelatedTransition">
            <summary>
            Related transition which leads to this step (This property is initialized only when deciding the next steps)
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.RelatedHistoryID">
            <summary>
            Related workflow history ID to which the step belong to (This property is initialized only when deciding the previous steps)
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepFullName">
            <summary>
            Workflow step full code name in format [workflowcodename].[workflowstepcodename].
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsPublished">
            <summary>
            Indicates if step represents published document state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsStart">
            <summary>
            Indicates if step represents start workflow state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsFinished">
            <summary>
            Indicates if step represents finished workflow state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsEdit">
            <summary>
            Indicates if step represents edit document state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsArchived">
            <summary>
            Indicates if step represents archived document state
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsDefault">
            <summary>
            Indicates if step represents one of the default document step types (DocumentPublished, DocumentArchived, DocumentEdit, Start)
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsAction">
            <summary>
            Indicates if step is action step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsDeletable">
            <summary>
            Indicates if step can be deleted. Deletion is not allowed for some step types.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepIsAllowed">
            <summary>
            Indicates if step is allowed due to security settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepDefinition">
            <summary>
            Step definition (advanced settings).
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepHasTimeout">
            <summary>
            Indicates if step has timeout defined
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowBranch">
            <summary>
            Indicates if step allows branch
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowTimeout">
            <summary>
            Indicates if step allows timeout settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowOnlyAutomaticTransitions">
            <summary>
            Indicates if step allows only automatic outgoing transitions
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepAllowDefaultTimeoutTarget">
            <summary>
            Indicates if default timeout target can be specified
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.StepHasSingleWinTransition">
            <summary>
            Indicates if step allows branch and always has single winning transition
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfo.TypeInfo">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepInfoProvider">
            <summary>
            Workflow step info provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.SetWorkflowStepInfo(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Sets the specified workflow step data.
            </summary>
            <param name="infoObj">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfo(System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step ID.
            </summary>
            <param name="stepId">ID of the workflow step to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfo(System.String,System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step name and workflow.
            </summary>
            <param name="stepName">Step name to retrieve</param>
            <param name="workflowId">Workflow id of the step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowStepInfo(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Deletes the specified workflow step.
            </summary>
            <param name="wsi">Workflow step object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowStepInfo(System.Int32)">
            <summary>
            Deletes the specified workflow step.
            </summary>
            <param name="stepId">Workflow step ID to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.InitStepOrders(System.Int32)">
            <summary>
            Initializes the workflow step orders.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.InitStepOrders(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Initializes the workflow step orders.
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepUp(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step up (decreases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepDown(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step down (increases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetStepRoles(System.Int32)">
            <summary>
            Returns the DataSet of roles assigned to given step.
            </summary>
            <param name="stepId">Step ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetEditStep(System.Int32)">
            <summary>
            Returns the edit step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetPublishedStep(System.Int32)">
            <summary>
            Returns the published step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetArchivedStep(System.Int32)">
            <summary>
            Returns the archived step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetFirstStep(System.Int32)">
            <summary>
            Returns first workflow step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetFinishedStep(System.Int32)">
            <summary>
            Returns the finished step for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.Int32)">
            <summary>
            Returns the Dataset of workflow steps.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the Dataset of workflow steps.
            </summary>
            <param name="workflowId">Workflow ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.String,System.String)">
            <summary>
            Returns the Dataset of all workflow steps.
            </summary>        
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowSteps(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow steps.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultWorkflowSteps(System.Int32)">
            <summary>
            Creates default workflow steps for the given workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultWorkflowSteps(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates default workflow steps for the given workflow.
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowSteps(System.Int32)">
            <summary>
            Deletes all the steps of specified workflow.
            </summary>
            <param name="workflowId">Workflow ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTask">Log web farm tasks for this action</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.LicenseVersionCheck(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Checks if WorkFlowStep fulfill license limitations.
            </summary>
            <param name="wfsi">Step info to check</param>           
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetUsersWhoCanApprove(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can approve given step source point. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserApprove(CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Int32)">
            <summary>
            Returns true if given user can approve or reject given step.
            </summary>
            <param name="user">User</param>
            <param name="step">Workflow step</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserApprove(CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Int32)">
            <summary>
            Returns true if given user can approve or reject given step.
            </summary>
            <param name="user">User</param>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageWorkflow(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can manage workflow.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageAutomationProcesses(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can manage automation.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserStartAutomationProcess(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can start automation process.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserRemoveAutomationProcess(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can start automation process.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserMoveToSpecificAutomationStep(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can move automation process to specific step.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CheckDependencies(System.Int32,System.Collections.Generic.List{System.String}@)">
            <summary>
            Check dependencies, return true if is depend.
            </summary>
            <param name="workflowStepId">Workflow step ID</param>
            <param name="documentNames">List of document names which use given workflow step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CheckProcessDependencies(System.Int32)">
            <summary>
            Check automation process step dependencies, return true if is depend.
            </summary>
            <param name="stepId">Step ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.ConnectSteps(CMS.WorkflowEngine.WorkflowStepInfo,System.Guid,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Connects two steps.
            </summary>
            <param name="startStep">Start step</param>
            <param name="sourcePoint">Start source point for branching steps. Use Guid.Empty if there is no branching and standard source point should be used.</param>
            <param name="endStep">End step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.ValidateStepIntegrity(CMS.WorkflowEngine.WorkflowStepInfo,System.Guid)">
            <summary>
            Checks whether selected start step and possibly source point already has a connection.
            </summary>
            <param name="startStep">Start step</param>
            <param name="sourcePointGuid">Start step source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.SetWorkflowStepInfoInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Sets the specified workflow step data.
            </summary>
            <param name="infoObj">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step ID.
            </summary>
            <param name="stepId">ID of the workflow step to retrieve</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step name and workflow.
            </summary>
            <param name="stepName">Step name to retrieve</param>
            <param name="workflowId">Workflow id of the step</param>
            <param name="useHashtable">If true, the object is taken through the hashtable</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepInfoInternal(System.String,System.Int32)">
            <summary>
            Returns the WorkflowStepInfo structure for the specified workflow step name and workflow from database.
            </summary>
            <param name="stepName">Step name to retrieve</param>
            <param name="workflowId">Workflow ID of the step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteWorkflowStepInfoInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Deletes the specified workflow step.
            </summary>
            <param name="wsi">Workflow step object to delete</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.InitStepOrdersInternal(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Initializes the workflow step orders.
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepUpInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step up (decreases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.MoveStepDownInternal(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Moves step down (increases its order).
            </summary>
            <param name="stepInfo">Workflow step data object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetEditStepInternal(System.Int32)">
            <summary>
            Returns the edit step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetPublishedStepInternal(System.Int32)">
            <summary>
            Returns the published step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetFinishedStepInternal(System.Int32)">
            <summary>
            Returns the finished step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetArchivedStepInternal(System.Int32)">
            <summary>
            Returns the archived step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetFirstStepInternal(System.Int32)">
            <summary>
            Returns the first workflow step for given workflow.
            </summary>
            <param name="workflowId">Workflow ID of the step required</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowStepsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all workflow steps.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Number of records to return</param>
            <param name="columns">Columns to select, null or empty returns all columns</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultWorkflowStepsInternal(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates default workflow steps for the given workflow.
            </summary>
            <param name="workflow">Workflow</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultAutomationSteps(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates default automation steps for the given workflow.
            </summary>
            <param name="workflow">Workflow to be added steps to</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CreateDefaultApprovalSteps(CMS.WorkflowEngine.WorkflowInfo)">
            <summary>
            Creates default approval steps for the given workflow.
            </summary>
            <param name="workflow">Workflow to be added steps to</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetUsersWhoCanApproveInternal(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns list of users who can approve given step and source point. Users who are approved due to generic roles are not included to the result.
            </summary>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Step source point (for steps with multiple outgoing transitions)</param>
            <param name="siteId">Site ID</param>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by clause</param>
            <param name="topN">Top N items</param>
            <param name="columns">List of columns to return</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetPendingStepsWhereCondition(System.String,System.String)">
            <summary>
            Creates complete where condition to filter only pending steps for given user and site.
            </summary>
            <param name="columnName">Column name which indicates step identifier in table</param>
            <param name="typeWhereCondition">Partial where condition for filter specific workflow type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetAutomationPendingStepsWhereCondition(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Gets complete where condition for pending steps from automation processes.
            </summary>
            <param name="user">User info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetWorkflowPendingStepsWhereCondition(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Gets complete where condition for pending steps from workflow.
            </summary>
            <param name="user">User info</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageWorkflowInternal(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can manage workflow.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserManageAutomationProcessesInternal(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can manage automation processes.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserStartAutomationProcessInternal(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can start automation process.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserRemoveAutomationProcessInternal(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can remove automation process.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserMoveToSpecificAutomationStepInternal(CMS.SiteProvider.UserInfo,System.String)">
            <summary>
            Indicates if user can move automation process to any step.
            </summary>
            <param name="user">User</param>
            <param name="siteName">Site name</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.CanUserApproveInternal(CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint,System.Int32)">
            <summary>
            Returns true if given user can approve or reject given step.
            </summary>
            <param name="user">User</param>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Workflow step source point (for steps with multiple outgoing transitions)</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.GetRequestKeyInternal(CMS.SiteProvider.UserInfo,CMS.WorkflowEngine.WorkflowStepInfo,System.Guid,System.Int32)">
            <summary>
            Gets key for request to store the permissions check result
            </summary>
            <param name="user">User</param>
            <param name="step">Workflow step</param>
            <param name="sourcePointGuid">Source point GUID</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.RegisterObjectInHashtables(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Registers the object instance within the hashtables.
            </summary>
            <param name="infoObj">Object to register</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.DeleteObjectFromHashtables(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Removes the object instance from the hashtables.
            </summary>
            <param name="infoObj">Object to remove</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.UpdateObjectInHashtables(CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Updates the object instance in the hashtables.
            </summary>
            <param name="infoObj">Object to update</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.ConnectStepsInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.Guid,CMS.WorkflowEngine.WorkflowStepInfo)">
            <summary>
            Connects two steps.
            </summary>
            <param name="startStep">Start step</param>
            <param name="sourcePoint">Start source point for branching steps. Use Guid.Empty if there is no branching and standard source point should be used.</param>
            <param name="endStep">End step</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.ValidateStepIntegrityInternal(CMS.WorkflowEngine.WorkflowStepInfo,System.Guid)">
            <summary>
            Checks whether selected start step and possibly source point already has a connection.
            </summary>
            <param name="startStep">Start step</param>
            <param name="sourcePointGuid">Start step source point GUID</param>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings">
            <summary>
            Class for evaluation security settings
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.#ctor(CMS.WorkflowEngine.WorkflowStepInfo,CMS.WorkflowEngine.Definitions.SourcePoint)">
            <summary>
            Constructor
            </summary>
            <param name="step">Workflow step</param>
            <param name="sourcePoint">Source point</param>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.Step">
            <summary>
            Workflow step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.SourcePoint">
            <summary>
            Source point
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.PointGuid">
            <summary>
            Source point GUID to use
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.UsersPointGuid">
            <summary>
            Users source point GUID to use
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.RolesPointGuid">
            <summary>
            Roles source point GUID to use
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.UsersSettings">
            <summary>
            Users security settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.RolesSettings">
            <summary>
            Roles security settings
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepInfoProvider.SecuritySettings.EvaluateRoles">
            <summary>
            Indicates if roles should be evaluated if users match (AND operator)
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepRoleInfo">
            <summary>
            WorkflowStepRoleInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.WorkflowEngine.WorkflowStepRoleInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.GetExisting">
            <summary>
            Gets existing object
            </summary>
            <returns>Existing workflow step role object</returns>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.#ctor">
            <summary>
            Constructor - Creates an empty WorkflowStepRoleInfo object.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new WorkflowStepRoleInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.WorkflowStepRoleID">
            <summary>
            WorkflowStepRole ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.StepID">
            <summary>
            Step ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.WorkflowStepRoleInfo.StepSourcePointGUID">
            <summary>
            Step source point GUID.
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider">
            <summary>
            Class providing WorkflowStepRoleInfo management.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoleInfo(System.Int32,System.Int32)">
            <summary>
            Returns the WorkflowStepRoleInfo structure for the specified workflowStepRole.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoleInfo(System.Int32,System.Int32,System.Guid)">
            <summary>
            Returns the WorkflowStepRoleInfo structure for the specified workflow step, role and source point GUID.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.SetWorkflowStepRoleInfo(CMS.WorkflowEngine.WorkflowStepRoleInfo)">
            <summary>
            Sets (updates or inserts) specified workflowStepRole.
            </summary>
            <param name="workflowStepRole">WorkflowStepRole to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.RemoveRoleFromWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Deletes specified workflowStepRole.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.RemoveRoleFromWorkflowStep(System.Int32,System.Int32,System.Guid)">
            <summary>
            Removes role from workflow step source point.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.AddRoleToWorkflowStep(System.Int32,System.Int32)">
            <summary>
            Adds specified role to the workflow step.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.AddRoleToWorkflowStep(System.Int32,System.Int32,System.Guid)">
            <summary>
            Adds specified role to the workflow step source point.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.DeleteWorkflowStepRoleInfo(CMS.WorkflowEngine.WorkflowStepRoleInfo)">
            <summary>
            Deletes specified workflowStepRole.
            </summary>
            <param name="workflowStepRole">WorkflowStepRole object</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoles(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns workflow step roles.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
            <param name="topN">Number of items that should be returned (all if 0)</param>
            <param name="columns">Column names</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRoleInfoInternal(System.Int32,System.Int32,System.Guid)">
            <summary>
            Returns the WorkflowStepRoleInfo structure for the specified workflowStepRole.
            </summary>
            <param name="stepId">Step ID</param>
            <param name="roleId">Role ID</param>
            <param name="sourcePointGuid">Source point GUID</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.GetWorkflowStepRolesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns workflow step roles.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Number of items that should be returned (all if 0)</param>
            <param name="columns">Column names</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.SetWorkflowStepRoleInfoInternal(CMS.WorkflowEngine.WorkflowStepRoleInfo)">
            <summary>
            Sets (updates or inserts) specified workflowStepRole.
            </summary>
            <param name="workflowStepRole">WorkflowStepRole to set</param>
        </member>
        <member name="M:CMS.WorkflowEngine.WorkflowStepRoleInfoProvider.DeleteWorkflowStepRoleInfoInternal(CMS.WorkflowEngine.WorkflowStepRoleInfo)">
            <summary>
            Deletes specified workflowStepRole.
            </summary>
            <param name="workflowStepRole">WorkflowStepRole object</param>
        </member>
        <member name="T:CMS.WorkflowEngine.Definitions.Step">
            <summary>
            Class to hold the workflow step definition.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.LoadData(System.String,CMS.SettingsProvider.WorkflowStepTypeEnum)">
            <summary>
            Loads data from string
            </summary>
            <param name="data">Xml data to load</param>
            <param name="stepType">Step type</param>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.GetData">
            <summary>
            Gets XML node representation
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.Definitions.Step.Clear">
            <summary>
            Clears data
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.TimeoutEnabled">
            <summary>
            Indicates whether timeout is enabled for the step.
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.TimeoutInterval">
            <summary>
            Timeout interval of the step
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.TimeoutTarget">
            <summary>
            GUID of target transition to use after timeout
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.SourcePoints">
            <summary>
            List of source points for transitions
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.DefinitionPoint">
            <summary>
            Source point with additional definitions
            </summary>
        </member>
        <member name="P:CMS.WorkflowEngine.Definitions.Step.Position">
            <summary>
            Position of the step
            </summary>
        </member>
        <member name="T:CMS.WorkflowEngine.AutomationTimer">
            <summary>
            Provides an ITask interface for the automation timing.
            </summary>
        </member>
        <member name="M:CMS.WorkflowEngine.AutomationTimer.Execute(CMS.Scheduler.TaskInfo)">
            <summary>
            Executes the automation timer.
            </summary>
            <param name="task">Task to process</param>
        </member>
    </members>
</doc>
